{"version":3,"file":"js/chunks/mobile-navigation.7bbba047c2953532.js","mappings":"8sDAIA,IAAMA,EAAsB,I,QAAIC,GAC1BC,EAAe,YAEfC,EAAkB,6BAElBC,EAAgB,WAYlB,SAAAA,EAAYC,I,4FAAiCC,CAAA,KAAAF,GAX7CG,EAAA,oBAEAA,EAAA,uBAEAA,EAAA,oBAEAA,EAAA,kBAC4C,CAAC,GAC7CA,EAAA,uBAIIC,KAAKC,KAAOJ,EAAQK,SAAWC,SAASC,cAAc,wBACtDJ,KAAKK,QAAOC,EAAON,KAAKC,KAAKM,iBAAiB,uCAC9CP,KAAKQ,KAAIF,EAAON,KAAKC,KAAKM,iBAAiB,oCAC3CP,KAAKS,QAAOH,EAAON,KAAKC,KAAKM,iBAAiBZ,GAClD,C,UA2DC,O,EA3DAC,G,EAAA,EAAAc,IAAA,OAAAC,MAEM,WACEX,KAAKS,QAAQG,SAIlBZ,KAAKa,qBACLb,KAAKc,cACLd,KAAKe,cACT,GAEA,CAAAL,IAAA,qBAAAC,MACQ,WAAkB,IAAAK,EAAA,KACtBhB,KAAKK,QAAQY,SAAQ,SAACC,EAAqBC,GACvC,IAAMC,EAASF,EAAOG,QAAQ1B,GAG9B,GAAIyB,EAAQ,CACR,IAAMnB,EAAOmB,EAAOhB,cAAcT,GAC5B2B,EAAarB,aAAI,EAAJA,EAAMG,cAAc,mCAEvCc,EAAOK,QAAc,KAAI,GAAHC,OAAML,GAExBG,IACAA,EAAWC,QAAc,KAAI,GAAHC,OAAML,IAGpCH,EAAKS,WAAWN,GAAS,CACrBlB,KAAAA,E,CAGZ,GACJ,GAAC,CAAAS,IAAA,cAAAC,MAEO,WAAW,IAAAe,EAAA,KAEflC,EAASmC,UAAU,oBAAoB,WACnCD,EAAKjB,QAAQQ,SAAQ,SAACW,GAClBA,EAAKC,UAAUC,OAAOpC,EAC1B,GACJ,GACJ,GAAC,CAAAgB,IAAA,cAAAC,MAEO,WAAW,IAAAoB,EAAA,KAEf/B,KAAKK,QAAQY,SAAQ,SAACC,GAClBA,EAAOc,iBAAiB,SAAS,WAE7BD,EAAKN,WAAWP,EAAOK,QAAc,MAAS,KAAEM,UAAUI,IAAIvC,EAClE,GACJ,IAEAM,KAAKQ,KAAKS,SAAQ,SAACC,GACfA,EAAOc,iBAAiB,SAAS,WAE7BD,EAAKN,WAAWP,EAAOK,QAAc,MAAS,KAAEM,UAAUC,OAAOpC,EACrE,GACJ,GACJ,M,8EAACE,CAAA,CA5EiB,GA+EtB,W","sources":["webpack://multi-kelnik-2.0/./frontend/src/components/navigation-mobile/index.ts"],"sourcesContent":["import type {IMobileNavigation, IMobileNavigationMenu, IMobileNavigationOptions} from './types';\r\nimport type {IObserver} from '@/common/scripts/types/observer';\r\nimport Observer from '@/common/scripts/observer';\r\n\r\nconst observer: IObserver = new Observer();\r\nconst CLASS_ACTIVE = 'is-active';\r\n// Селектор всех меню и подменю\r\nconst SELECTOR_MOBILE = '.j-navigation-mobile__menu';\r\n\r\nclass MobileNavigation implements IMobileNavigation {\r\n    // Элемент меню\r\n    private readonly menu: Element;\r\n    // Кнопки перехода вперед - на уровень глубже\r\n    private forward: HTMLElement[];\r\n    // Кнопки перехода назад - на уровень выше\r\n    private back: HTMLElement[];\r\n    // Объект для наполнения элементами вложенных меню\r\n    private menuObject: IMobileNavigationMenu = {};\r\n    // Массив всех вложенных меню\r\n    private allMenu: HTMLElement[];\r\n\r\n    constructor(options: IMobileNavigationOptions) {\r\n        this.menu = options.element || document.querySelector('.j-navigation-mobile');\r\n        this.forward = [...this.menu.querySelectorAll('.j-navigation-mobile__menu-forward')] as HTMLElement[];\r\n        this.back = [...this.menu.querySelectorAll('.j-navigation-mobile__menu-back')] as HTMLElement[];\r\n        this.allMenu = [...this.menu.querySelectorAll(SELECTOR_MOBILE)] as HTMLElement[];\r\n    }\r\n\r\n    public init(): void {\r\n        if (!this.allMenu.length) {\r\n            return;\r\n        }\r\n\r\n        this._setElementsObject();\r\n        this._subscribes();\r\n        this._bindEvents();\r\n    }\r\n\r\n    // Наполняем объект меню и параллельно присваиваем кнопкам вперед и назад ИД подчиняемых им меню в объекте\r\n    private _setElementsObject(): void {\r\n        this.forward.forEach((button: HTMLElement, index: number) => {\r\n            const parent = button.closest(SELECTOR_MOBILE);\r\n\r\n            // Если у текущей кнопки есть родитель с селектором указывающим на то что там может быть вложенное меню, то находим в нем это вложенное меню, также находим кнопку Назад в этом меню. Элемент меню помещаем в объект, а кнопкам присваиваем имя(индекс) в объекте у текущего меню.\r\n            if (parent) {\r\n                const menu = parent.querySelector(SELECTOR_MOBILE) as HTMLElement;\r\n                const backButton = menu?.querySelector('.j-navigation-mobile__menu-back') as HTMLElement;\r\n\r\n                button.dataset['menu'] = `${index}`;\r\n\r\n                if (backButton) {\r\n                    backButton.dataset['menu'] = `${index}`;\r\n                }\r\n\r\n                this.menuObject[index] = {\r\n                    menu\r\n                };\r\n            }\r\n        });\r\n    }\r\n\r\n    private _subscribes(): void {\r\n        // Подписка на событие закрытия мобильного меню - для закрытия всех внутренних переходов\r\n        observer.subscribe('closeMenuTrigger', () => {\r\n            this.allMenu.forEach((item: HTMLElement) => {\r\n                item.classList.remove(CLASS_ACTIVE);\r\n            });\r\n        });\r\n    }\r\n\r\n    private _bindEvents(): void {\r\n        // Навешиваем событие клика на все кнопки \"вперед\". По нажатию добавляем активный класс дочернему меню относительно этой кнопки\r\n        this.forward.forEach((button: HTMLElement) => {\r\n            button.addEventListener('click', () => {\r\n                // @ts-ignore\r\n                this.menuObject[button.dataset['menu']]['menu'].classList.add(CLASS_ACTIVE);\r\n            });\r\n        });\r\n        // Навешиваем событие клика на все кнопки \"назад\". По нажатию удаляем активный класс родительского меню относительно этой кнопки\r\n        this.back.forEach((button: HTMLElement) => {\r\n            button.addEventListener('click', () => {\r\n                // @ts-ignore\r\n                this.menuObject[button.dataset['menu']]['menu'].classList.remove(CLASS_ACTIVE);\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport default MobileNavigation;\r\n"],"names":["observer","Observer","CLASS_ACTIVE","SELECTOR_MOBILE","MobileNavigation","options","_classCallCheck","_defineProperty","this","menu","element","document","querySelector","forward","_toConsumableArray","querySelectorAll","back","allMenu","key","value","length","_setElementsObject","_subscribes","_bindEvents","_this","forEach","button","index","parent","closest","backButton","dataset","concat","menuObject","_this2","subscribe","item","classList","remove","_this3","addEventListener","add"],"sourceRoot":""}