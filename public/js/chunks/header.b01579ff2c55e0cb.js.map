{"version":3,"file":"js/chunks/header.b01579ff2c55e0cb.js","mappings":"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","sources":["webpack://multi-kelnik-2.0/./frontend/src/components/header/index.ts"],"sourcesContent":["import type {IHeader, IHeaderOptions} from './types';\nimport type {IObserver} from '@/common/scripts/types/observer';\nimport Observer from '@/common/scripts/observer';\nimport {Utils} from '@/common/scripts/utils';\n\nconst observer: IObserver = new Observer();\nconst CLASS_FIXED: string = 'is-fixed';\nconst CLASS_TRANSPARENT: string = 'header_theme_transparent';\nconst CLASS_NO_SHADOW: string = 'header_theme_no-shadow';\nconst CLASS_FULL_SCREEN_NAV: string = 'header_theme_fullscreen';\nconst DOCUMENT_ROOT: HTMLElement = document.documentElement;\n\nclass Header implements IHeader {\n    private header: HTMLElement;\n    private targetScroll: HTMLElement[] | undefined;\n    private currentTargetScrollVersion: string = '';\n    private heightHeader: number;\n    private scrollPosition: number = 0;\n    private sections: Element[] = [];\n    private isOpenFilter: boolean = false;\n    private noShadowHeader: boolean;\n    private section: HTMLElement[] = [...document.querySelectorAll('.j-anchor-section')] as HTMLElement[];\n    private scrollByStart: boolean;\n    private prevScrollPosition: number;\n\n    public init(options: IHeaderOptions): void {\n        this.header = options.headerWrap;\n        this.targetScroll = options.targetScroll;\n        this.heightHeader = this.header.offsetHeight;\n        this.noShadowHeader = this.header.classList.contains('j-header-alternative');\n\n        this._initState();\n        this._subscribes();\n        this._bindEvents();\n    }\n\n    /**\n     * Обрабатывает события.\n     */\n    private _bindEvents(): void {\n        window.addEventListener('scroll', Utils.debounce(() => {\n            if (!this.isOpenFilter) {\n                this._changeState();\n                this._changeStateAnchor();\n            }\n        }, 10));\n\n        window.addEventListener('resize', Utils.debounce(() => {\n            if (!this.isOpenFilter) {\n                this._setHeight();\n                this._changeState();\n                this._changeStateAnchor();\n            }\n        }, 10));\n    }\n\n    /**\n     * Метод содержит в себе колбэки на события других модулей.\n     * @private\n     */\n    private _subscribes(): void {\n        observer.subscribe('navigation:ready', () => {\n            this._setHeight();\n        });\n\n        observer.subscribe('scrollBy:start', () => {\n            this.scrollByStart = true;\n        });\n\n        observer.subscribe('scrollBy:finish', () => {\n            this.scrollByStart = false;\n        });\n    }\n\n    /**\n     * Ставит изначальное состояние\n     * @private\n     */\n    private _initState(): void {\n        if (!this.noShadowHeader) {\n            this._changeState();\n        }\n\n        this._checkFullScreenNavigation();\n        this._setHeight();\n    }\n\n    /**\n     * Проверяет, используется ли версия полноэкранного меню для всех устройств\n     * @private\n     */\n    private _checkFullScreenNavigation(): void {\n        const fullScreenNavi = this.header.querySelector('.j-navigation-fullscreen__menu');\n\n        if (fullScreenNavi && !this.header.classList.contains(CLASS_FULL_SCREEN_NAV)) {\n            this.header.classList.add(CLASS_FULL_SCREEN_NAV);\n        }\n    }\n\n    /**\n     * Ставит высоту шапки в CSS-переменную\n     * @private\n     */\n    private _setHeight(): void {\n        DOCUMENT_ROOT.style.setProperty('--header-height', `${this.header.clientHeight}px`);\n    }\n\n    /**\n     * Изменяет состояние хэдера\n     * @private\n     */\n    private _changeState(): void {\n        this.scrollPosition = window.scrollY;\n\n        if (this._isScrollInTarget()) {\n            this.header.classList.remove(CLASS_FIXED);\n            this.currentTargetScrollVersion !== '3' && this.header.classList.add(CLASS_TRANSPARENT);\n        } else {\n            this.header.classList.add(CLASS_FIXED);\n            this.header.classList.remove(CLASS_TRANSPARENT);\n        }\n\n        this.prevScrollPosition = this.scrollPosition;\n\n        if (this.scrollPosition < 100 && this.noShadowHeader) {\n            this.header.classList.add(CLASS_NO_SHADOW);\n        } else {\n            this.header.classList.remove(CLASS_NO_SHADOW);\n        }\n    }\n\n    /**\n     * Проверяет скролл вниз\n     * @returns {boolean} - true - скролл вниз\n     */\n    private _isScrollDown(): boolean {\n        const stepScrollBottom = 1;\n\n        // если скролл больше высоты хэдера, и разница между текущим и предыдущим значением скролла больше константы\n        return this.scrollPosition > this.heightHeader &&\n            (this.scrollPosition - this.prevScrollPosition) > stepScrollBottom;\n    }\n\n    /**\n     * Проверяет, является ли текущий сколл в рамках элемента-таргета\n     * @returns {boolean} - true - скролл есть\n     */\n    private _isScrollInTarget(): boolean {\n        if (!this.targetScroll?.length) {\n            return false;\n        }\n\n        return this.targetScroll.some((element: HTMLElement) => {\n            const isTarget = element.getBoundingClientRect().top <= 0 &&\n                element.getBoundingClientRect().top + element.getBoundingClientRect().height >= 0;\n\n            if (isTarget) {\n                this.currentTargetScrollVersion = element.dataset['version'] || '';\n            }\n\n            return isTarget;\n        });\n    }\n\n\n    /**\n     * Меняет состояние якорей при скролле по странице.\n     * @private\n     */\n    private _changeStateAnchor(): void {\n        if (!this.section.length) {\n            return;\n        }\n\n        this.section.forEach((item: HTMLElement) => {\n            // если блок в 1/3 экрана, то состояние изменится (меньше не делать, иначе будут проблемы с мелкими секциями)\n            const safeZone = window.innerHeight / 3;\n            const sectionTop = item.getBoundingClientRect().top + pageYOffset - safeZone;\n\n            if (this.scrollPosition > sectionTop) {\n                if (!this.sections.includes(item)) {\n                    this.sections.push(item);\n                }\n            }\n\n            if (this.scrollPosition < sectionTop) {\n                if (this.sections.includes(item)) {\n                    this.sections.splice(this.sections.length - 1, 1);\n                }\n            }\n\n            // @ts-ignore\n            const sectionId = this.sections.length ? `#${this.sections[this.sections.length - 1].id}` : false;\n\n            if (!this.scrollByStart && sectionId) {\n                observer.publish('anchorChangeSection', sectionId);\n            }\n        });\n    }\n}\n\nexport default Header;\n"],"names":["observer","Observer","CLASS_FIXED","CLASS_TRANSPARENT","CLASS_NO_SHADOW","CLASS_FULL_SCREEN_NAV","DOCUMENT_ROOT","document","documentElement","Header","_classCallCheck","_defineProperty","_toConsumableArray","querySelectorAll","key","value","options","this","header","headerWrap","targetScroll","heightHeader","offsetHeight","noShadowHeader","classList","contains","_initState","_subscribes","_bindEvents","_this","window","addEventListener","Utils","isOpenFilter","_changeState","_changeStateAnchor","_setHeight","_this2","subscribe","scrollByStart","_checkFullScreenNavigation","querySelector","add","style","setProperty","concat","clientHeight","scrollPosition","scrollY","_isScrollInTarget","remove","currentTargetScrollVersion","prevScrollPosition","_this$targetScroll","_this3","length","some","element","isTarget","getBoundingClientRect","top","height","dataset","_this4","section","forEach","item","safeZone","innerHeight","sectionTop","pageYOffset","sections","includes","push","splice","sectionId","id","publish"],"sourceRoot":""}