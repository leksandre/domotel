{"version":3,"file":"js/chunks/mortgage-calculator.aee36c934e3d5a60.js","mappings":"+3BAwKA,EArKmB,oBAAAA,K,4FAAAC,CAAA,KAAAD,EAAA,C,UAkKd,O,EAlKcA,G,EAAA,EAAAE,IAAA,UAAAC,MAMR,SAAQC,GACX,OAAgB,OAATA,IAAkBC,MAAMC,OAAOF,UAA0B,IAATA,CAC3D,GAAC,CAAAF,IAAA,gBAAAC,MAEM,SAAcD,EAAaC,GAC9BI,OAAOC,eAAeC,QAAQP,EAAKC,EAAOO,WAC9C,GAAC,CAAAR,IAAA,mBAAAC,MAEM,SAAiBD,GACpB,OAAOI,OAAOC,OAAOC,eAAeG,QAAQT,GAChD,GAAC,CAAAA,IAAA,gBAAAC,MAEM,SAAcD,GACjBK,OAAOC,eAAeI,WAAWV,EACrC,GAEA,CAAAA,IAAA,OAAAC,MAOO,SAAKU,EAAgBC,EAAWC,GACnC,OAAQF,GACJ,IAAK,eACD,OAAOC,EAAIC,EACf,IAAK,gBACD,OAAOC,UAAWD,EAAID,EAAK,KAAKG,WACpC,QACI,OAAO,IAEnB,GAAC,CAAAf,IAAA,aAAAC,MAEM,SAAWU,EAAgBC,EAAWC,GACzC,OAAQF,GACJ,IAAK,qBACD,MAAO,GAAPK,QAAWJ,EAAIC,GAAGI,eAAe,SAAQ,WAC7C,IAAK,sBACD,MAAO,GAAPD,QAAYH,EAAID,EAAK,KAAKG,UAAS,KACvC,IAAK,uBACD,MAAO,GAAPC,OAAUF,SAASF,EAAEG,WAAWE,eAAe,SAAQ,gBAC3D,QACI,MAAO,6BAAPD,OAAoCL,GAEhD,GAEA,CAAAX,IAAA,aAAAC,MAKO,WACH,IAAMiB,EAAgBC,KAAKC,iBAAiB,cACtCC,EAAmBF,KAAKC,iBAAiB,kBACzCE,EAAkBH,KAAKI,WAAW,sBAAuBL,EAAOG,GAChEG,EAAiBL,KAAKM,KAAK,eAAgBP,EAAOG,IAAa,EACjEF,KAAKI,WAAW,qBAAsBL,EAAOG,GAC7C,IAKJ,OAHAF,KAAKO,cAAc,eAAgBP,KAAKM,KAAK,eAAgBP,EAAOG,IACpEF,KAAKO,cAAc,gBAAiBP,KAAKM,KAAK,gBAAiBP,EAAOG,IAE/D,CACHG,OAAAA,EACAF,QAAAA,EAER,GAEA,CAAAtB,IAAA,gBAAAC,MAKO,SAAc0B,GAGjB,MAFmB,CAAC,EAAG,GAAI,IAETC,SAASD,GAAO,OAAS,KAC/C,GAEA,CAAA3B,IAAA,iBAAAC,MAMO,SAAe4B,EAAgC3B,EAAwB4B,GAC1E,IAAMC,EAAc3B,OAAOyB,EAAa5B,MAAM+B,QAAQF,EAAQ,KAE9D5B,EAAK+B,KAAOF,EAAc7B,EAAKgC,IAC3BhC,EAAKgC,IACLH,EAAc7B,EAAKiC,IAAMjC,EAAKiC,IAAMJ,CAC5C,GAEA,CAAA/B,IAAA,yBAAAC,MAIO,SAAuBmC,IACH,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAEtCR,SAASQ,EAAMC,SAC9BD,EAAMC,MAAQ,IAAMD,EAAMC,MAAQ,MAClCD,EAAMC,MAAQ,KAAOD,EAAMC,MAAQ,MACnCD,EAAMC,MAAQ,KAAOD,EAAMC,MAAQ,MACpCD,EAAME,gBAEd,GAWA,CAAAtC,IAAA,iBAAAC,MACO,SAAemC,EACAlC,EACAqC,EACAC,EACAV,GAClB,OAAQM,EAAMC,OACV,KAAK,GACDlB,KAAKsB,eAAeD,EAAOtC,EAAM4B,GACjCS,EAAIG,oBAAoBxC,EAAM,OAC9BqC,EAAII,SACJH,EAAMI,OACN,MACJ,KAAK,GACDJ,EAAMI,OAKlB,GAAC,CAAA5C,IAAA,eAAAC,MAEM,WACH,QAAKI,OAAOwC,SAASC,OAAOC,QAIV1C,OAAOwC,SAASC,OAAOd,QAAQ,IAAK,IACjDgB,MAAM,KACNC,QAAO,SAACC,EAA6BjD,GAClC,IAAMkD,EAAQlD,EAAM+C,MAAM,KAI1B,OAFAE,EAAIE,mBAAmBC,OAAOF,EAAM,MAAQC,mBAAmBC,OAAOF,EAAM,KAErED,CACX,GACA,CAAC,EAGT,M,8EAACpD,CAAA,CAlKc,G,UCHbwD,EAAiB,SAAUC,GAA0B,IACnDf,EAAQe,EACRC,EAF6CC,UAAAV,OAAA,QAAAW,IAAAD,UAAA,GAAAA,UAAA,GAAE,CAAC,EAGhDE,EAAa,EACbC,EAAY,EACZC,EAAW,EACXC,EAAS,EACTC,EAAmB,KACnBC,EAAS,KACTC,GAAW,EACXC,GAAe,EACfC,GAAc,EACdC,GAAgB,EAChBC,GAAS,EACTC,GAAY,EACZC,GAAW,EACXC,GAAY,EACZC,GAAY,EACZC,GAAY,EACZC,GAAW,EAEXC,EAAS,OAGPC,EAAQ,CACVC,IAAKzE,OACL0E,KAAMC,SAASD,KACfvC,MAAOA,EACPyC,KAAM,KACNC,GAAI,KACJhD,IAAK,KACLC,IAAK,KACLF,KAAM,KACNkD,GAAI,KACJC,OAAQ,KACRC,IAAK,KACLC,KAAM,KACNC,SAAU,KACVC,OAAQ,KACRC,KAAM,KACNC,YAAa,KACbC,UAAW,KACXC,QAAS,KACTC,KAAM,KACNC,KAAM,KACNC,YAAa,IAIXC,EAAS,CAEXC,MAAO,EACPC,UAAW,EAGXC,KAAM,EACNC,SAAU,EACVC,SAAU,EAGVC,MAAO,EACPC,WAAY,EACZC,YAAa,EACbC,OAAQ,EACRC,UAAW,EACXC,SAAU,EACVC,cAAe,EACfC,cAAe,EACfC,YAAa,EACbC,YAAa,EACbC,UAAW,EACXC,UAAW,EACXC,QAAS,EACTC,QAAS,EAGTC,SAAU,EACVC,QAAS,EACTC,IAAK,GACLC,MAAO,GACPC,MAAO,GACPC,MAAO,IAILC,EAAS,CAEXC,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRC,KAAM,EACNC,SAAU,EAGVC,MAAO,EACPC,MAAO,EACPnB,YAAa,EACboB,YAAa,EACblB,UAAW,EACXmB,UAAW,EACXvB,cAAe,EACfwB,cAAe,GAIbC,EAAS,CACXC,KAAM,OACNC,KAAM,SAENrG,IAAK,GACLC,IAAK,IACLF,KAAM,KACNkD,GAAI,KACJqD,KAAM,EAENC,aAAc,EACdC,aAAc,EACdC,eAAe,EAEfC,OAAQ,GACRC,SAAU,GAEVC,YAAY,EACZC,SAAU,KACVC,SAAU,KACVC,aAAa,EAEbC,UAAU,EACVC,OAAQ,KACRC,OAAQ,KACRC,WAAW,EAEXC,kBAAkB,EAClBC,mBAAoB,IACpBC,SAAU,KAEVC,aAAa,EAEbC,UAAU,EAEV5D,MAAM,EACN6D,aAAa,EACbC,SAAU,EACVC,WAAW,EAEXC,cAAc,EACdC,cAAc,EAEdC,OAAQ,GACRC,QAAS,GACTC,YAAa,GACbC,eAAe,EACfC,iBAAkB,MAElBC,uBAAwB,IAExBC,SAAS,EACTC,OAAO,EAEPC,cAAe,GAEfC,MAAO,KACPC,QAAS,KACTC,SAAU,KACVC,SAAU,KACVC,SAAU,MAKS,UAAnBrI,EAAMsI,UACNC,SAAWA,QAAQC,MAAQD,QAAQC,KAAK,kCAAmCxI,GAI/E,IAAMyI,EAAmB,CACrB3C,KAAM9F,EAAM0I,QAAQ5C,KACpBC,KAAM/F,EAAM0I,QAAQ3C,KAEpBrG,IAAKM,EAAM0I,QAAQhJ,IACnBC,IAAKK,EAAM0I,QAAQ/I,IACnBF,KAAMO,EAAM0I,QAAQjJ,KACpBkD,GAAI3C,EAAM0I,QAAQ/F,GAClBqD,KAAMhG,EAAM0I,QAAQ1C,KAEpBC,aAAcjG,EAAM0I,QAAQC,YAC5BzC,aAAclG,EAAM0I,QAAQE,YAC5BzC,cAAenG,EAAM0I,QAAQG,aAE7BzC,OAAQpG,EAAM0I,QAAQtC,OAEtBE,WAAYtG,EAAM0I,QAAQI,UAC1BvC,SAAUvG,EAAM0I,QAAQK,QACxBvC,SAAUxG,EAAM0I,QAAQM,QACxBvC,YAAazG,EAAM0I,QAAQO,WAE3BvC,SAAU1G,EAAM0I,QAAQnK,QACxBoI,OAAQ3G,EAAM0I,QAAQQ,MACtBtC,OAAQ5G,EAAM0I,QAAQS,MACtBtC,UAAW7G,EAAM0I,QAAQU,SAEzBtC,iBAAkB9G,EAAM0I,QAAQW,gBAChCtC,mBAAoB/G,EAAM0I,QAAQY,kBAElCrC,YAAajH,EAAM0I,QAAQa,WAE3BrC,SAAUlH,EAAM0I,QAAQxB,SAExB5D,KAAMtD,EAAM0I,QAAQpF,KACpB6D,YAAanH,EAAM0I,QAAQc,WAC3BpC,SAAUpH,EAAM0I,QAAQe,QACxBpC,UAAWrH,EAAM0I,QAAQgB,SAEzBpC,aAActH,EAAM0I,QAAQiB,WAC5BpC,aAAcvH,EAAM0I,QAAQkB,WAE5BpC,OAAQxH,EAAM0I,QAAQlB,OACtBC,QAASzH,EAAM0I,QAAQjB,QACvBC,YAAa1H,EAAM0I,QAAQmB,WAC3BlC,cAAe3H,EAAM0I,QAAQoB,aAC7BlC,iBAAkB5H,EAAM0I,QAAQqB,gBAEhClC,uBAAwB7H,EAAM0I,QAAQsB,qBAEtClC,QAAS9H,EAAM0I,QAAQZ,QACvBC,MAAO/H,EAAM0I,QAAQX,MAErBC,cAAehI,EAAM0I,QAAQuB,cAKjC,IAAK,IAAIC,KAFTzB,EAAiBrC,OAASqC,EAAiBrC,QAAUqC,EAAiBrC,OAAO5F,MAAM,KAElEiI,EACTA,EAAiB0B,eAAeD,UACDhJ,IAA3BuH,EAAiByB,IAAkD,KAA3BzB,EAAiByB,WAClDzB,EAAiByB,IAOpC,IAAIE,EAAMpK,EAAMvC,WACJyD,IAARkJ,GAA6B,KAARA,KACrBA,EAAMA,EAAI5J,MAAMiI,EAAiBZ,wBAA0B7G,EAAQ6G,wBAA0B,MAErF,IAAMuC,EAAI,KAAOA,EAAI,KACzBA,EAAI,IAAMA,EAAI,IAEdA,EAAI,IAAMA,EAAI,KAAOA,EAAI,KACzBA,EAAI,IAAMA,EAAI,IAGdpJ,GAAWA,EAAQoF,QAAUpF,EAAQoF,OAAO7F,QAC5CsF,EAAOpG,KAAO2K,EAAI,IAAMpJ,EAAQoF,OAAOiE,QAAQD,EAAI,IACnDvE,EAAOlD,GAAKyH,EAAI,IAAMpJ,EAAQoF,OAAOiE,QAAQD,EAAI,MAEjDvE,EAAOpG,KAAO2K,EAAI,KAAOA,EAAI,GAC7BvE,EAAOlD,GAAKyH,EAAI,KAAOA,EAAI,KAKnCE,OAAOC,OAAO1E,EAAQ7E,GAGtBsJ,OAAOC,OAAO1E,EAAQ4C,GACtBzH,EAAU6E,EAEV,IAAI2E,EAAe,CAAC,EAGdC,EAAS,CACXzK,MAAOqC,EAAMrC,MACb0K,OAAQ,KAERhL,IAAKsB,EAAQtB,IACbC,IAAKqB,EAAQrB,IAEbF,KAAMuB,EAAQvB,KACdkL,aAAc,EACdC,WAAY,KAEZjI,GAAI3B,EAAQ2B,GACZkI,WAAY,EACZC,SAAU,MA2BRC,EAAO,SAAUjJ,GACnBH,GAAc,EACd6B,EAAOS,OAAS+G,GAAiBhK,EAAQgF,MAAM,GAE/C5D,EAAS,OAET6I,KACAC,IACAC,IAEIrJ,GACAJ,GAAe,EACfzC,GAAK,GAGLmM,OAEA1J,GAAe,EACfzC,GAAK,GAGLoM,MAIJC,IACJ,EAMMJ,EAAS,WACX,IAAMK,EAAiB,yBAA2BvK,EAAQ8E,KAAO,IAAM9E,EAAQgH,cAAgB,YAC/F3F,EAAMrC,MAAMwL,mBAAmB,cAAeD,GAC9ClJ,EAAMrC,MAAMyL,aAAa,WAAY,QACrCpJ,EAAMI,KAAOJ,EAAMrC,MAAM0L,uBACzBjB,EAAOC,OAASrI,EAAMI,KAEtBJ,EAAMI,KAAKkJ,UA7DX,+PA8DAtJ,EAAMK,GAAKL,EAAMI,KAAKmJ,cAAc,QACpCvJ,EAAM3C,IAAM2C,EAAMI,KAAKmJ,cAAc,YACrCvJ,EAAM1C,IAAM0C,EAAMI,KAAKmJ,cAAc,YACrCvJ,EAAM5C,KAAO4C,EAAMI,KAAKmJ,cAAc,aACtCvJ,EAAMM,GAAKN,EAAMI,KAAKmJ,cAAc,WACpCvJ,EAAMO,OAASP,EAAMI,KAAKmJ,cAAc,eACxCvJ,EAAMS,KAAOT,EAAMI,KAAKmJ,cAAc,aACtCvJ,EAAMiB,KAAOjB,EAAMI,KAAKmJ,cAAc,aAEjB,WAAjB5K,EAAQ+E,MACR1D,EAAMI,KAAK+I,mBAAmB,YAhElC,2JAiEInJ,EAAMQ,IAAMR,EAAMI,KAAKmJ,cAAc,YACrCvJ,EAAMgB,KAAOhB,EAAMI,KAAKmJ,cAAc,oBACtCvJ,EAAMU,SAAWV,EAAMI,KAAKmJ,cAAc,WAC1CvJ,EAAM5C,KAAKoM,MAAMC,WAAa,SAC9BzJ,EAAMM,GAAGkJ,MAAMC,WAAa,SAC5BzJ,EAAMa,YAAcb,EAAMI,KAAKmJ,cAAc,oBAE7CvJ,EAAMI,KAAK+I,mBAAmB,YAnElC,yOAoEInJ,EAAMQ,IAAMR,EAAMI,KAAKmJ,cAAc,YACrCvJ,EAAMW,OAASX,EAAMI,KAAKmJ,cAAc,SACxCvJ,EAAMY,KAAOZ,EAAMI,KAAKmJ,cAAc,OACtCvJ,EAAMc,UAAYd,EAAMI,KAAKmJ,cAAc,gBAC3CvJ,EAAMe,QAAUf,EAAMI,KAAKmJ,cAAc,cAEzCG,KAGA/K,EAAQuG,eACRlF,EAAM5C,KAAKoM,MAAMG,QAAU,OAC3B3J,EAAMM,GAAGkJ,MAAMG,QAAU,OACzB3J,EAAMO,OAAOiJ,MAAMG,QAAU,QAGjCC,KAEIjL,EAAQ8G,SACRoE,IACA7J,EAAMrC,MAAMmM,UAAW,IAEvB9J,EAAMrC,MAAMmM,UAAW,EACvBC,IACAC,KAICrL,EAAQ8G,UACL9G,EAAQ+G,MACRmE,IAEAE,KAIJpL,EAAQmF,gBACR9D,EAAMQ,IAAIgJ,MAAMS,OAAS,YAEjC,EAKMP,EAAgB,WAClB,IAAMrM,EAAMsB,EAAQtB,IAChBC,EAAMqB,EAAQrB,IACdF,EAAOuB,EAAQvB,KACfkD,EAAK3B,EAAQ2B,GAEblD,EAAOC,GAAOiD,IAAOhD,EACrB0C,EAAMW,OAAOuJ,UAAUC,IAAI,aACpB7J,EAAKhD,GACZ0C,EAAMY,KAAKsJ,UAAUC,IAAI,YAEjC,EAmCMN,EAAoB,WACtB7J,EAAMI,KAAK+I,mBAAmB,YAvJ9B,0CAwJAnJ,EAAMI,KAAK8J,UAAUC,IAAI,eAC7B,EAKMJ,EAAoB,WACtB/J,EAAMI,KAAK8J,UAAUE,OAAO,qBAC5BpK,EAAMI,KAAK8J,UAAUE,OAAO,eAChC,EAKMA,EAAS,WACXpK,EAAMI,KAAKgK,SACXpK,EAAMI,KAAO,KAEbJ,EAAMC,IAAIoK,oBAAoB,UAAWlP,EAAImP,KAAKhO,KAAM,aACxD0D,EAAME,KAAKmK,oBAAoB,YAAaE,EAAYD,KAAKhO,OAC7D0D,EAAME,KAAKmK,oBAAoB,YAAaE,EAAYD,KAAKhO,OAC7D0D,EAAMC,IAAIoK,oBAAoB,WAAYG,EAAUF,KAAKhO,OACzD0D,EAAMC,IAAIoK,oBAAoB,UAAWG,EAAUF,KAAKhO,OAExD0D,EAAMkB,YAAc,GACpBC,EAAOsB,IAAM,GACbtB,EAAOuB,MAAQ,GACfvB,EAAOwB,MAAQ,GACfxB,EAAOyB,MAAQ,GAEf6H,qBAAqBtL,EACzB,EAKM6K,EAAa,WACX1K,IAGJU,EAAME,KAAKwK,iBAAiB,YAAaH,EAAYD,KAAKhO,OAC1D0D,EAAME,KAAKwK,iBAAiB,YAAaH,EAAYD,KAAKhO,OAE1D0D,EAAMC,IAAIyK,iBAAiB,WAAYF,EAAUF,KAAKhO,OACtD0D,EAAMC,IAAIyK,iBAAiB,UAAWF,EAAUF,KAAKhO,OAErD0D,EAAMS,KAAKiK,iBAAiB,aAAcC,EAAaL,KAAKhO,KAAM,SAAU,CAACsO,SAAS,IACtF5K,EAAMS,KAAKiK,iBAAiB,YAAaC,EAAaL,KAAKhO,KAAM,UACjE0D,EAAMS,KAAKiK,iBAAiB,QAASG,EAAaP,KAAKhO,OAEnDqC,EAAQmF,eAAkC,WAAjBnF,EAAQ+E,MACjC1D,EAAMQ,IAAIkK,iBAAiB,aAAcI,EAAYR,KAAKhO,KAAM,QAAS,CAACsO,SAAS,IACnF5K,EAAMQ,IAAIkK,iBAAiB,YAAaI,EAAYR,KAAKhO,KAAM,WAE/D0D,EAAMQ,IAAIkK,iBAAiB,aAAcC,EAAaL,KAAKhO,KAAM,SAAU,CAACsO,SAAS,IACrF5K,EAAMQ,IAAIkK,iBAAiB,YAAaC,EAAaL,KAAKhO,KAAM,WAG/C,WAAjBqC,EAAQ+E,MACR1D,EAAMO,OAAOmK,iBAAiB,aAAcI,EAAYR,KAAKhO,KAAM,UAAW,CAACsO,SAAS,IACxF5K,EAAMU,SAASgK,iBAAiB,aAAcI,EAAYR,KAAKhO,KAAM,UAAW,CAACsO,SAAS,IAC1F5K,EAAMa,YAAY6J,iBAAiB,aAAcC,EAAaL,KAAKhO,KAAM,SAAU,CAACsO,SAAS,IAE7F5K,EAAMO,OAAOmK,iBAAiB,YAAaI,EAAYR,KAAKhO,KAAM,WAClE0D,EAAMU,SAASgK,iBAAiB,YAAaI,EAAYR,KAAKhO,KAAM,WACpE0D,EAAMgB,KAAK0J,iBAAiB,YAAaC,EAAaL,KAAKhO,KAAM,UACjE0D,EAAMa,YAAY6J,iBAAiB,aAAcC,EAAaL,KAAKhO,KAAM,SAAU,CAACsO,SAAS,MAE7F5K,EAAMO,OAAOmK,iBAAiB,aAAcI,EAAYR,KAAKhO,KAAM,MAAO,CAACsO,SAAS,IACpF5K,EAAMO,OAAOmK,iBAAiB,YAAaI,EAAYR,KAAKhO,KAAM,OAElE0D,EAAM5C,KAAKsN,iBAAiB,aAAcI,EAAYR,KAAKhO,KAAM,QAAS,CAACsO,SAAS,IACpF5K,EAAMW,OAAO+J,iBAAiB,aAAcI,EAAYR,KAAKhO,KAAM,QAAS,CAACsO,SAAS,IACtF5K,EAAMM,GAAGoK,iBAAiB,aAAcI,EAAYR,KAAKhO,KAAM,MAAO,CAACsO,SAAS,IAChF5K,EAAMY,KAAK8J,iBAAiB,aAAcI,EAAYR,KAAKhO,KAAM,MAAO,CAACsO,SAAS,IAClF5K,EAAMc,UAAU4J,iBAAiB,aAAcC,EAAaL,KAAKhO,KAAM,SAAU,CAACsO,SAAS,IAC3F5K,EAAMe,QAAQ2J,iBAAiB,aAAcC,EAAaL,KAAKhO,KAAM,SAAU,CAACsO,SAAS,IAEzF5K,EAAM5C,KAAKsN,iBAAiB,YAAaI,EAAYR,KAAKhO,KAAM,SAChE0D,EAAMW,OAAO+J,iBAAiB,YAAaI,EAAYR,KAAKhO,KAAM,SAClE0D,EAAMM,GAAGoK,iBAAiB,YAAaI,EAAYR,KAAKhO,KAAM,OAC9D0D,EAAMY,KAAK8J,iBAAiB,YAAaI,EAAYR,KAAKhO,KAAM,OAChE0D,EAAMc,UAAU4J,iBAAiB,YAAaC,EAAaL,KAAKhO,KAAM,UACtE0D,EAAMe,QAAQ2J,iBAAiB,YAAaC,EAAaL,KAAKhO,KAAM,WAGpEqC,EAAQkG,UACR7E,EAAMS,KAAKiK,iBAAiB,UAAWvP,EAAImP,KAAKhO,KAAM,aAE9D,EAOMuO,EAAe,SAAUE,GAEvB,IAAIC,EAAGC,EADNlL,EAaDC,EAAMS,KAAKyK,SAJXF,GALIC,EADiB,WAAjBtM,EAAQ+E,KACE1D,EAAMO,OAENP,EAAM5C,MAGR+N,wBAAwBC,KACpCJ,GAAMC,EAAQE,wBAAwBE,MAAQ,EAAK,EACnDV,EAAa,SAAU,CAAClN,eAAgB,WAAa,EAAG6N,MAAON,IAIvE,EAOMT,EAAc,SAAUQ,GAAG,IAAAQ,EAC7B,GAAKnM,EAAL,CAIA,IAAM4L,EAAID,EAAEO,QAASP,SAAa,QAAZQ,EAADR,EAAGS,QAAQ,UAAE,IAAAD,OAAZ,EAADA,EAAeD,OACpCnK,EAAOE,UAAY2J,EAAI7J,EAAOC,MAC9BxE,GAJA,CAKJ,EAQM4N,EAAY,SAAUO,GACxB,GAAInL,EAAJ,CACIA,GAAY,EAKhB,IAAM6L,EAAazL,EAAMI,KAAKmJ,cAAc,gBAExCkC,GACAA,EAAWvB,UAAUE,OAAO,eAGhC/K,GAAe,EAEf4J,KACAyC,KAEI1L,EAAMI,KAAKuL,SAASZ,EAAEhL,SAAWX,IACjCwM,KAGJxM,GAAW,CAjBX,CAkBJ,EASM0L,EAAc,SAASe,EAAatO,GACnB,eAAfA,EAAMmG,MACNnG,EAAME,iBAGV,IAAMuN,EAAIzN,EAAM+N,QAAS/N,aAAK,EAALA,EAAOiO,QAAQ,GAAGF,OAEtB,IAAjB/N,EAAMuO,SAIU,SAAhBD,GACAE,IAGCF,IACDA,EAAc9L,GAAU,QAG5BA,EAAS8L,EAETjM,GAAY,EACZR,GAAW,EAEX+B,EAAOC,MAAQpB,EAAMK,GAAG8K,wBAAwBC,KAChDjK,EAAOE,UAAY2J,EAAI7J,EAAOC,MAE9B4K,IAhOgB,SAAUjM,GAC1B,OAAQA,GACJ,IAAK,SACDoB,EAAOM,MAAQvF,GAAQiF,EAAOU,UAAYV,EAAOY,eACjD/B,EAAMU,SAASwJ,UAAUC,IAAI,eAC7B,MACJ,IAAK,OACDhJ,EAAOM,MAAQvF,GAAQiF,EAAOU,UAAYV,EAAOc,aACjDjC,EAAMW,OAAOuJ,UAAUC,IAAI,cAAe,aAC1CnK,EAAMY,KAAKsJ,UAAUE,OAAO,aAC5B,MACJ,IAAK,KACDjJ,EAAOM,MAAQvF,GAAQiF,EAAOU,UAAYV,EAAOgB,WACjDnC,EAAMY,KAAKsJ,UAAUC,IAAI,cAAe,aACxCnK,EAAMW,OAAOuJ,UAAUE,OAAO,aAC9B,MACJ,IAAK,OACDjJ,EAAOO,WAAaxF,GAAQiF,EAAOU,UAAYV,EAAOc,aACtDd,EAAOQ,YAAczF,GAAQiF,EAAOgB,UAAYhB,EAAOU,WACvD7B,EAAMY,KAAKsJ,UAAUE,OAAO,aAC5BpK,EAAMW,OAAOuJ,UAAUE,OAAO,aAG1C,CA0MI6B,CAAYJ,GAEZ7L,EAAMS,KAAKyL,cAAc,IAAIC,MAAM,UAEnClD,KACJ,EASM0B,EAAe,SAASkB,EAAad,GACvCA,EAAEtN,iBACF,IAAMuN,EAAID,EAAEO,QAASP,aAAC,EAADA,EAAGS,QAAQ,GAAGF,OAClB,IAAbP,EAAEe,SAIN/L,EAAS8L,EAET/L,GAAW,EACXqB,EAAOC,MAAQpB,EAAMK,GAAG8K,wBAAwBC,KAChDjK,EAAOE,YAAc2J,EAAI7J,EAAOC,OAAOlF,UAEvCmD,GAAe,EACfzC,IAEAoD,EAAMS,KAAKyL,cAAc,IAAIC,MAAM,UACvC,EASMhR,EAAM,SAAU0Q,EAAad,GAC/B,KAAIA,EAAEqB,QAAUrB,EAAEsB,SAAWtB,EAAEuB,UAAYvB,EAAEwB,SAI7C,OAAQxB,EAAEvN,OACN,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACDuN,EAAEtN,iBACF+O,GAAU,GACV,MAEJ,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACDzB,EAAEtN,iBACF+O,GAAU,GAGtB,EAOMA,EAAY,SAAUC,GACxB,IAAIC,EAAIvL,EAAOU,UACTD,EAASjD,EAAQgF,OAAShF,EAAQrB,IAAMqB,EAAQtB,KAAO,KAE7DoP,EAAQC,GAAK9K,EAAS8K,GAAK9K,EAE3BT,EAAOE,UAAYnF,GAAQiF,EAAOG,KAAO,IAAMoL,GAC/ClN,GAAS,EACT5C,GACJ,EAMMkM,EAAY,WACd,GAAKnK,EAAL,CAIA,GAAIA,EAAQsG,aAGR,OAFAjF,EAAM3C,IAAImM,MAAMG,QAAU,YAC1B3J,EAAM1C,IAAIkM,MAAMG,QAAU,QAI9B,GAAIhL,EAAQoF,OAAO7F,OACf8B,EAAM3C,IAAIiM,UAAYqD,GAAShO,EAAQqF,SAASrF,EAAQtB,MACxD2C,EAAM1C,IAAIgM,UAAYqD,GAAShO,EAAQqF,SAASrF,EAAQrB,UACrD,CACH,IAAMsP,EAAaC,GAAUlO,EAAQtB,KAC/ByP,EAAaD,GAAUlO,EAAQrB,KAErC8K,EAAOwE,WAAaA,EACpBxE,EAAO0E,WAAaA,EAEpB9M,EAAM3C,IAAIiM,UAAYqD,GAASC,EAAYjO,EAAQtB,KACnD2C,EAAM1C,IAAIgM,UAAYqD,GAASG,EAAYnO,EAAQrB,IACvD,CAEAuF,EAAOC,MAAQ9C,EAAM3C,IAAI0P,YACzBlK,EAAOE,MAAQ/C,EAAM1C,IAAIyP,WAvBzB,CAwBJ,EAMMhB,EAAqB,WACvB,IAAMiB,EAAW5E,EAAO9H,GAAK8H,EAAOhL,KAEX,OAArB8B,IACAA,EAAmBP,EAAQiF,cAG/BjF,EAAQiF,aAAeoJ,CAC3B,EAEMtB,EAA6B,WACN,OAArBxM,IACAP,EAAQiF,aAAe1E,EACvBA,EAAmB,KAE3B,EAUMtC,EAAO,SAAUkB,GACnB,GAAKa,KAMc,OAFnBG,GAEyBhB,KACrBgB,EAAa,EACbqC,EAAOG,KAAOtB,EAAMK,GAAG0M,YAEvBE,KAGC9L,EAAOG,MAAZ,CAIA0K,IACA,IAAIkB,EAAWC,IAmBf,OAhBe,SAAXpN,IACAoB,EAAOM,MAAQ,EACfyL,EAAWC,KAGA,UAAXpN,IACAoB,EAAOM,MAAQN,EAAOW,SAAW,EACjCoL,EAAWC,IAGPpN,EADApB,EAAQmF,cACC,WAEAsJ,EAAaF,IAItBnN,GACJ,IAAK,OACD,IAAMsN,GAAK1O,EAAQrB,IAAMqB,EAAQtB,KAAO,IACpCiQ,GAAKlF,EAAOhL,KAAOuB,EAAQtB,KAAOgQ,EAClCE,GAAKnF,EAAO9H,GAAK3B,EAAQtB,KAAOgQ,EAEpClM,EAAOa,cAAgB9F,GAAQoR,GAC/BnM,EAAOe,YAAchG,GAAQoR,GAC7BnM,EAAOiB,UAAYlG,GAAQqR,GAE3BpM,EAAOa,cAAgBwL,GAAcrM,EAAOa,cAAerD,EAAQuF,SAAUvF,EAAQwF,UACrFhD,EAAOe,YAAcsL,GAAcrM,EAAOe,YAAavD,EAAQuF,SAAUvF,EAAQwF,UACjFhD,EAAOiB,UAAYoL,GAAcrM,EAAOiB,UAAWzD,EAAQ2F,OAAQ3F,EAAQ4F,QAE3EpD,EAAOY,cAAgB0L,EAAqBtM,EAAOa,eACnDb,EAAOc,YAAcwL,EAAqBtM,EAAOe,aACjDf,EAAOgB,UAAYsL,EAAqBtM,EAAOiB,WAE/CrC,EAAS,KAET,MAEJ,IAAK,SACD,GAAIpB,EAAQsF,WACR,MAGJ9C,EAAOa,cAAgB0L,EAAqBR,GAC5C/L,EAAOa,cAAgB2L,GAAaxM,EAAOa,eAC3Cb,EAAOa,cAAgBwL,GAAcrM,EAAOa,cAAerD,EAAQuF,SAAUvF,EAAQwF,UAErFhD,EAAOY,cAAgB0L,EAAqBtM,EAAOa,eAEnD,MAEJ,IAAK,OACD,GAAIrD,EAAQsF,WACR,MAGJ9C,EAAOe,YAAcwL,EAAqBR,GAC1C/L,EAAOe,YAAcyL,GAAaxM,EAAOe,aACrCf,EAAOe,YAAcf,EAAOiB,YAC5BjB,EAAOe,YAAcf,EAAOiB,WAEhCjB,EAAOe,YAAcsL,GAAcrM,EAAOe,YAAavD,EAAQuF,SAAUvF,EAAQwF,UACjFhD,EAAOe,YAAc0L,GAAiBzM,EAAOe,YAAaf,EAAOiB,UAAW,QAC5EjB,EAAOe,YAAc2L,GAAiB1M,EAAOe,YAAaf,EAAOiB,UAAW,QAE5EjB,EAAOc,YAAcwL,EAAqBtM,EAAOe,aAEjD,MAEJ,IAAK,KACD,GAAIvD,EAAQ0F,SACR,MAGJlD,EAAOiB,UAAYsL,EAAqBR,GACxC/L,EAAOiB,UAAYuL,GAAaxM,EAAOiB,WACnCjB,EAAOiB,UAAYjB,EAAOe,cAC1Bf,EAAOiB,UAAYjB,EAAOe,aAE9Bf,EAAOiB,UAAYoL,GAAcrM,EAAOiB,UAAWzD,EAAQ2F,OAAQ3F,EAAQ4F,QAC3EpD,EAAOiB,UAAYwL,GAAiBzM,EAAOiB,UAAWjB,EAAOe,YAAa,MAC1Ef,EAAOiB,UAAYyL,GAAiB1M,EAAOiB,UAAWjB,EAAOe,YAAa,MAE1Ef,EAAOgB,UAAYsL,EAAqBtM,EAAOiB,WAE/C,MAEJ,IAAK,OACD,GAAIzD,EAAQsF,YAActF,EAAQ0F,SAC9B,MAGJ6I,EAAWhR,GAAQgR,EAA8B,KAAlB/L,EAAOW,UAEtCX,EAAOe,YAAcwL,EAAqBR,GAAY/L,EAAOO,WAC7DP,EAAOe,YAAcyL,GAAaxM,EAAOe,aACzCf,EAAOe,YAAcsL,GAAcrM,EAAOe,YAAavD,EAAQuF,SAAUvF,EAAQwF,UACjFhD,EAAOe,YAAc0L,GAAiBzM,EAAOe,YAAaf,EAAOiB,UAAW,QAC5EjB,EAAOc,YAAcwL,EAAqBtM,EAAOe,aAEjDf,EAAOiB,UAAYsL,EAAqBR,GAAY/L,EAAOQ,YAC3DR,EAAOiB,UAAYuL,GAAaxM,EAAOiB,WACvCjB,EAAOiB,UAAYoL,GAAcrM,EAAOiB,UAAWzD,EAAQ2F,OAAQ3F,EAAQ4F,QAC3EpD,EAAOiB,UAAYwL,GAAiBzM,EAAOiB,UAAWjB,EAAOe,YAAa,MAC1Ef,EAAOgB,UAAYsL,EAAqBtM,EAAOiB,WAE/C,MAEJ,IAAK,WACD,GAAIzD,EAAQsF,YAActF,EAAQ0F,SAC9B,MAGJ,IAAMyJ,EAASJ,EAAqBR,GAChC9P,EAAOgL,EAAOE,aAEdyF,EADK3F,EAAOI,WACApL,EACZ4Q,EAAOD,EAAO,EACdE,EAAWH,EAASE,EACpBE,EAASJ,EAASE,EAElBC,EAAW,IAEXC,GADAD,EAAW,GACSF,GAGpBG,EAAS,MAETD,GADAC,EAAS,KACWH,GAGxB5M,EAAOe,YAAcyL,GAAaM,GAClC9M,EAAOe,YAAcsL,GAAcrM,EAAOe,YAAavD,EAAQuF,SAAUvF,EAAQwF,UACjFhD,EAAOc,YAAcwL,EAAqBtM,EAAOe,aAEjDf,EAAOiB,UAAYuL,GAAaO,GAChC/M,EAAOiB,UAAYoL,GAAcrM,EAAOiB,UAAWzD,EAAQ2F,OAAQ3F,EAAQ4F,QAC3EpD,EAAOgB,UAAYsL,EAAqBtM,EAAOiB,WAKlC,WAAjBzD,EAAQ+E,MACRvC,EAAOkB,QAAWlB,EAAOW,SAAW,EACpCX,EAAOmB,QAAUnB,EAAOY,cAExBqG,EAAOE,aAAenH,EAAOa,cAC7BoG,EAAOhL,KAAO+Q,GAAehN,EAAOa,eACpCoG,EAAOgG,YAAcvB,GAAUzE,EAAOhL,MAElCuB,EAAQoF,OAAO7F,SACfkK,EAAOG,WAAa5J,EAAQoF,OAAOqE,EAAOhL,SAG9C+D,EAAOkB,QAAUnG,GAAQiF,EAAOc,YAAed,EAAOW,SAAW,GACjEX,EAAOmB,QAAUpG,GAAQiF,EAAOgB,UAAYhB,EAAOc,aACnDmG,EAAOE,aAAenH,EAAOe,YAC7BkG,EAAOhL,KAAO+Q,GAAehN,EAAOe,aACpCkG,EAAOgG,YAAcvB,GAAUzE,EAAOhL,MACtCgL,EAAOI,WAAarH,EAAOiB,UAC3BgG,EAAO9H,GAAK6N,GAAehN,EAAOiB,WAClCgG,EAAOiG,UAAYxB,GAAUzE,EAAO9H,IAEhC3B,EAAQoF,OAAO7F,SACfkK,EAAOG,WAAa5J,EAAQoF,OAAOqE,EAAOhL,MAC1CgL,EAAOK,SAAW9J,EAAQoF,OAAOqE,EAAO9H,MAIhDgO,KACAC,IAhLA,CAiLJ,EAMMvC,EAAqB,WAClB7K,EAAOG,MAKRH,EAAOE,UAAY,GAAK/F,MAAM6F,EAAOE,WACrCF,EAAOE,UAAY,EACZF,EAAOE,UAAYF,EAAOG,OACjCH,EAAOE,UAAYF,EAAOG,MAG9BH,EAAOU,UAAY3F,GAAQiF,EAAOE,UAAYF,EAAOG,KAAO,MAVxDH,EAAOU,UAAY,CAW3B,EAGM6L,EAAuB,SAAUc,GAEnC,OAAOA,GADM,IAAMrN,EAAOW,UACL,GACzB,EAEM2L,EAAuB,SAAUgB,GAEnC,OAAOA,EAAO,KADD,IAAMtN,EAAOW,SAE9B,EAEMqL,EAAa,WACf,IAAM7P,EAAM,IAAM6D,EAAOW,SACrBkJ,EAAI9O,GAAQiF,EAAOU,UAAYV,EAAOM,OAQ1C,OANIuJ,EAAI,EACJA,EAAI,EACGA,EAAI1N,IACX0N,EAAI1N,GAGD0N,CACX,EAEMiC,EAAoB,WACD,WAAjBtO,EAAQ+E,KACRvC,EAAOK,SAAWxB,EAAMU,SAASqM,YAEjC5L,EAAOK,SAAWxB,EAAMW,OAAOoM,YAGnC5L,EAAOW,SAAW5F,GAAQiF,EAAOK,SAAWL,EAAOG,KAAO,IAC9D,EAQM8L,EAAe,SAAUU,GAC3B,MAAqB,WAAjBnP,EAAQ+E,KACD,SAGHoK,GADY3M,EAAOe,aAAgBf,EAAOiB,UAAYjB,EAAOe,aAAe,EAErEvD,EAAQ0F,SAAW,OAAS,KAE5B1F,EAAQsF,WAAa,KAAO,MAG/C,EAKMqK,GAAa,WACVnN,EAAOG,OAIZuB,EAAOM,MAAQN,EAAOC,MAAQ3B,EAAOG,KAAO,IAC5CuB,EAAOO,MAAQP,EAAOE,MAAQ5B,EAAOG,KAAO,IAChD,EAKMiN,GAAa,WACVpN,EAAOG,OAAQ3C,EAAQuG,eAIP,WAAjBvG,EAAQ+E,MACRb,EAAOK,SAAWlD,EAAMO,OAAOwM,YAC/BlK,EAAOd,cAAgBc,EAAOK,SAAW/B,EAAOG,KAAO,IACvDuB,EAAOU,cAAgBpC,EAAOY,cAAiBZ,EAAOW,SAAW,EAAMe,EAAOd,cAAgB,EAC9Fc,EAAOU,cAAgBmL,GAAW7L,EAAOU,cAAeV,EAAOd,iBAG/Dc,EAAOG,OAAShD,EAAM5C,KAAK2P,YAC3BlK,EAAOZ,YAAcY,EAAOG,OAAS7B,EAAOG,KAAO,IACnDuB,EAAOQ,YAAclC,EAAOc,YAAed,EAAOW,SAAW,EAAMe,EAAOZ,YAAc,EACxFY,EAAOQ,YAAcnH,GAAQ2G,EAAOQ,aACpCR,EAAOQ,YAAcqL,GAAW7L,EAAOQ,YAAaR,EAAOZ,aAE3DY,EAAOI,KAAOjD,EAAMM,GAAGyM,YACvBlK,EAAOV,UAAYU,EAAOI,KAAO9B,EAAOG,KAAO,IAC/CuB,EAAOS,UAAYnC,EAAOgB,UAAahB,EAAOW,SAAW,EAAMe,EAAOV,UAAY,EAClFU,EAAOS,UAAYpH,GAAQ2G,EAAOS,WAClCT,EAAOS,UAAYoL,GAAW7L,EAAOS,UAAWT,EAAOV,WAEvDU,EAAOK,SAAWlD,EAAMO,OAAOwM,YAC/BlK,EAAOd,cAAgBc,EAAOK,SAAW/B,EAAOG,KAAO,IACvDuB,EAAOU,eAAkBV,EAAOQ,YAAcR,EAAOS,UAAYT,EAAOV,WAAa,EAAMU,EAAOd,cAAgB,EAClHc,EAAOU,cAAgBrH,GAAQ2G,EAAOU,eACtCV,EAAOU,cAAgBmL,GAAW7L,EAAOU,cAAeV,EAAOd,gBAGvE,EAQMkH,GAAc,SAAdA,IACE9J,IACAsL,qBAAqBtL,GACrBA,EAAS,MAGbwP,aAAa5P,GACbA,EAAY,KAEPJ,IAILiQ,KAEIhP,EACAT,EAAS0P,sBAAsB5F,GAE/BlK,EAAY+P,WAAW7F,EAAa,KAE5C,EAKM2F,GAAc,WAChBzN,EAAOG,KAAOtB,EAAMK,GAAG0M,YAClB5L,EAAOG,OAIRH,EAAOG,OAASH,EAAOI,WACvBxB,EAAS,OACTF,GAAY,IAGZsB,EAAOG,OAASH,EAAOI,UAAYlC,KACnCyJ,IACAlM,GAAK,GACLmS,KACIpQ,EAAQsC,OACR+N,KACAC,MAEJ5P,GAAe,EACf8B,EAAOI,SAAWJ,EAAOG,KACzB4N,MAGC/N,EAAOG,OAIPlC,GAAaC,GAAiBG,MAI/BR,IAAaoJ,EAAOhL,MAAQ6B,IAAWmJ,EAAO9H,IAAMjB,GAAgBG,KACpEuP,KAEA/O,EAAMQ,IAAIgJ,MAAM4B,KAAOjK,EAAOkB,QAAU,IACxCrC,EAAMQ,IAAIgJ,MAAM6B,MAAQlK,EAAOmB,QAAU,IAEpB,WAAjB3D,EAAQ+E,MACR1D,EAAMQ,IAAIgJ,MAAM4B,KAAO,IACvBpL,EAAMQ,IAAIgJ,MAAM6B,MAAQlK,EAAOmB,QAAUnB,EAAOkB,QAAU,IAE1DrC,EAAMU,SAAS8I,MAAM4B,KAAOjK,EAAOY,cAAgB,IAEnD/B,EAAMO,OAAOiJ,MAAM4B,KAAOvI,EAAOU,cAAgB,MAEjDvD,EAAMW,OAAO6I,MAAM4B,KAAOjK,EAAOc,YAAc,IAC/CjC,EAAMY,KAAK4I,MAAM4B,KAAOjK,EAAOgB,UAAY,KAEvCnD,IAAaoJ,EAAOhL,MAAQiC,KAC5BW,EAAM5C,KAAKoM,MAAM4B,KAAOvI,EAAOQ,YAAc,MAE7CpE,IAAWmJ,EAAO9H,IAAMjB,KACxBW,EAAMM,GAAGkJ,MAAM4B,KAAOvI,EAAOS,UAAY,KAG7CtD,EAAMO,OAAOiJ,MAAM4B,KAAOvI,EAAOU,cAAgB,KAGrD4L,KAEKnQ,IAAaoJ,EAAOhL,MAAQ6B,IAAWmJ,EAAO9H,IAAQZ,IACvDM,EAAMrC,MAAMuO,cAAc,IAAIC,MAAM,WACpCnM,EAAMrC,MAAMuO,cAAc,IAAIC,MAAM,WAGxCnN,EAAWoJ,EAAOhL,KAClB6B,EAASmJ,EAAO9H,GAGXT,GAAcJ,GAAcC,GAAaC,GAC1CyP,MAEA5P,GAAUM,KACVN,GAAS,EACTM,GAAW,EACX8L,MAGJnM,GAAY,EACZI,GAAY,EACZF,GAAY,GAGhBD,GAAW,EACXF,GAAS,EACTM,GAAW,EACXT,GAAe,GACnB,EAOM0P,GAAa,WACf,GAAKpQ,EAAL,CAIA,IAEI0Q,EACAC,EACAC,EACAnB,EACAC,EANEmB,EAAa7Q,EAAQoF,OAAO7F,OAC9B8F,EAAWrF,EAAQqF,SAOvB,IAAIrF,EAAQuG,aAIZ,GAAqB,WAAjBvG,EAAQ+E,KAEJ8L,GACAH,EAAc1C,GAAS3I,EAASoE,EAAOhL,OACvC4C,EAAMO,OAAO+I,UAAY+F,IAEzBjB,EAAcvB,GAAUzE,EAAOhL,MAE/BiS,EAAc1C,GAASyB,EAAahG,EAAOhL,MAC3C4C,EAAMO,OAAO+I,UAAY+F,GAG7Bd,KAEI1L,EAAOU,cAAgBV,EAAOM,MAAQ,EACtCnD,EAAM3C,IAAImM,MAAMC,WAAa,SAE7BzJ,EAAM3C,IAAImM,MAAMC,WAAa,UAG7B5G,EAAOU,cAAgBV,EAAOd,cAAgB,IAAMc,EAAOO,MAAQ,EACnEpD,EAAM1C,IAAIkM,MAAMC,WAAa,SAE7BzJ,EAAM1C,IAAIkM,MAAMC,WAAa,cAG9B,CACC+F,GAEI7Q,EAAQ2G,eACR+J,EAAc1C,GAAS3I,EAASoE,EAAOhL,OACvCiS,GAAe1Q,EAAQ4G,iBACvB8J,GAAe1C,GAAS3I,EAASoE,EAAO9H,MAExC+O,EAAc1C,GAAS3I,EAASoE,EAAOhL,MAAQuB,EAAQ4G,iBAAmBvB,EAASoE,EAAO9H,KAE9FgP,EAAY3C,GAAS3I,EAASoE,EAAOhL,OACrCmS,EAAU5C,GAAS3I,EAASoE,EAAO9H,KACnCN,EAAMO,OAAO+I,UAAY+F,EACzBrP,EAAM5C,KAAKkM,UAAYgG,EACvBtP,EAAMM,GAAGgJ,UAAYiG,IAGrBnB,EAAcvB,GAAUzE,EAAOhL,MAC/BiR,EAAYxB,GAAUzE,EAAO9H,IAEzB3B,EAAQ2G,eACR+J,EAAc1C,GAASyB,EAAahG,EAAOhL,MAC3CiS,GAAe1Q,EAAQ4G,iBACvB8J,GAAe1C,GAAS0B,EAAWjG,EAAO9H,KAE1C+O,EAAc1C,GAASyB,EAAczP,EAAQ4G,iBAAmB8I,EAAWjG,EAAO9H,IAEtFgP,EAAY3C,GAASyB,EAAahG,EAAOhL,MACzCmS,EAAU5C,GAAS0B,EAAWjG,EAAO9H,IAErCN,EAAMO,OAAO+I,UAAY+F,EACzBrP,EAAM5C,KAAKkM,UAAYgG,EACvBtP,EAAMM,GAAGgJ,UAAYiG,GAIzBhB,KAEA,IAAMlR,EAAMoS,KAAKpS,IAAIwF,EAAOU,cAAeV,EAAOQ,aAC9CqM,EAAc7M,EAAOU,cAAgBV,EAAOd,cAC5C4N,EAAU9M,EAAOS,UAAYT,EAAOV,UACpC7E,EAAMmS,KAAKnS,IAAIoS,EAAaC,GAE5B9M,EAAOQ,YAAcR,EAAOZ,aAAeY,EAAOS,WAClDtD,EAAM5C,KAAKoM,MAAMC,WAAa,SAC9BzJ,EAAMM,GAAGkJ,MAAMC,WAAa,SAC5BzJ,EAAMO,OAAOiJ,MAAMC,WAAa,UAE5BrB,EAAOhL,OAASgL,EAAO9H,IACR,SAAXP,EACAC,EAAM5C,KAAKoM,MAAMC,WAAa,UACZ,OAAX1J,EACPC,EAAMM,GAAGkJ,MAAMC,WAAa,UACpB1J,IACRC,EAAM5C,KAAKoM,MAAMC,WAAa,WAElCzJ,EAAMO,OAAOiJ,MAAMC,WAAa,SAChCnM,EAAMqS,IAEN3P,EAAM5C,KAAKoM,MAAMC,WAAa,SAC9BzJ,EAAMM,GAAGkJ,MAAMC,WAAa,SAC5BzJ,EAAMO,OAAOiJ,MAAMC,WAAa,UAChCnM,EAAMmS,KAAKnS,IAAIoS,EAAaC,MAGhC3P,EAAM5C,KAAKoM,MAAMC,WAAa,UAC9BzJ,EAAMM,GAAGkJ,MAAMC,WAAa,UAC5BzJ,EAAMO,OAAOiJ,MAAMC,WAAa,UAGpCpM,EAAMwF,EAAOM,MAAQ,EAAInD,EAAM3C,IAAImM,MAAMC,WAAa,SAAWzJ,EAAM3C,IAAImM,MAAMC,WAAa,UAC9FnM,EAAM,IAAMuF,EAAOO,MAAQ,EAAIpD,EAAM1C,IAAIkM,MAAMC,WAAa,SAAWzJ,EAAM1C,IAAIkM,MAAMC,WAAa,SACxG,CAhHA,CAiHJ,EAKMyF,GAAa,WACf,IAQIhL,EACAC,EACAG,EACAC,EAXEqL,EAAIjR,EACNkR,EAAI7P,EAEJ8P,EAAoC,iBAAfF,EAAE1L,WAA0B5I,MAAMsU,EAAE1L,UACzD6L,EAAoC,iBAAfH,EAAEzL,WAA0B7I,MAAMsU,EAAEzL,UACzD6L,EAAgC,iBAAbJ,EAAEtL,SAAwBhJ,MAAMsU,EAAEtL,QACrD2L,EAAgC,iBAAbL,EAAErL,SAAwBjJ,MAAMsU,EAAErL,QAO1C,WAAXqL,EAAElM,KACEkM,EAAExL,cAAgB0L,GAAeC,IACjC7L,EAAWyE,GAAiBmH,EAAcF,EAAE1L,SAAW0L,EAAEvS,KACzD8G,EAAWwE,GAAiBoH,EAAcH,EAAEzL,SAAWyL,EAAEtS,KAAO4G,EAChEA,EAAWhI,GAAQgI,EAAY/C,EAAOW,SAAW,IAAMoC,GACvDC,EAAWjI,GAAQiI,EAAYhD,EAAOW,SAAW,IAAMqC,GACvDD,GAAuB/C,EAAOW,SAAW,EAEzC+N,EAAEhP,YAAY2I,MAAMG,QAAU,QAC9BkG,EAAEhP,YAAY2I,MAAM4B,KAAOlH,EAAW,IACtC2L,EAAEhP,YAAY2I,MAAM6B,MAAQlH,EAAW,KAEvC0L,EAAEhP,YAAY2I,MAAMG,QAAU,QAG9BiG,EAAExL,cAAgB0L,GAAeC,IACjC7L,EAAWyE,GAAiBmH,EAAcF,EAAE1L,SAAW0L,EAAEvS,KACzD8G,EAAWwE,GAAiBoH,EAAcH,EAAEzL,SAAWyL,EAAEtS,KAAO4G,EAChEA,EAAWhI,GAAQgI,EAAY/C,EAAOW,SAAW,IAAMoC,GACvDC,EAAWjI,GAAQiI,EAAYhD,EAAOW,SAAW,IAAMqC,GACvDD,GAAuB/C,EAAOW,SAAW,EAEzC+N,EAAE/O,UAAU0I,MAAMG,QAAU,QAC5BkG,EAAE/O,UAAU0I,MAAM4B,KAAOlH,EAAW,IACpC2L,EAAE/O,UAAU0I,MAAM6B,MAAQlH,EAAW,KAErC0L,EAAE/O,UAAU0I,MAAMG,QAAU,OAG5BiG,EAAEpL,YAAcwL,GAAaC,IAC7B3L,EAASqE,GAAiBqH,EAAYJ,EAAEtL,OAASsL,EAAEvS,KACnDkH,EAASoE,GAAiBsH,EAAYL,EAAErL,OAASqL,EAAEtS,KAAOgH,EAC1DA,EAASpI,GAAQoI,EAAUnD,EAAOW,SAAW,IAAMwC,GACnDC,EAASrI,GAAQqI,EAAUpD,EAAOW,SAAW,IAAMyC,GACnDD,GAAmBnD,EAAOW,SAAW,EAErC+N,EAAE9O,QAAQyI,MAAMG,QAAU,QAC1BkG,EAAE9O,QAAQyI,MAAM4B,KAAO9G,EAAS,IAChCuL,EAAE9O,QAAQyI,MAAM6B,MAAQ9G,EAAS,KAEjCsL,EAAE9O,QAAQyI,MAAMG,QAAU,OAGtC,EAMMwF,GAAe,WACI,WAAjBxQ,EAAQ+E,MACJ/E,EAAQoF,OAAO7F,OACf8B,EAAMrC,MAAMyL,aAAa,QAAShB,EAAOG,YAEzCvI,EAAMrC,MAAMyL,aAAa,QAAShB,EAAOhL,MAE7C4C,EAAMrC,MAAM0I,QAAQjJ,KAAOgL,EAAOhL,OAE9BuB,EAAQoF,OAAO7F,OACf8B,EAAMrC,MAAMyL,aAAa,QAAShB,EAAOG,WAAa5J,EAAQ6G,uBAAyB4C,EAAOK,UAE9FzI,EAAMrC,MAAMyL,aAAa,QAAShB,EAAOhL,KAAOuB,EAAQ6G,uBAAyB4C,EAAO9H,IAE5FN,EAAMrC,MAAM0I,QAAQjJ,KAAOgL,EAAOhL,KAClC4C,EAAMrC,MAAM0I,QAAQ/F,GAAK8H,EAAO9H,GAExC,EAIM0I,GAAc,WAChBmG,KAEIxQ,EAAQkH,SAAsC,mBAApBlH,EAAQkH,UAC9BlH,EAAQiH,MACRjH,EAAQkH,QAAQqK,KAAKvR,EAAQiH,MAAOwC,GAEpCzJ,EAAQkH,QAAQuC,GAG5B,EACMgH,GAAe,WACjBD,KAEIxQ,EAAQmH,UAAwC,mBAArBnH,EAAQmH,WAC/BnH,EAAQiH,MACRjH,EAAQmH,SAASoK,KAAKvR,EAAQiH,MAAOwC,GAErCzJ,EAAQmH,SAASsC,GAG7B,EACMwD,GAAe,WACjBuD,KAEIxQ,EAAQoH,UAAwC,mBAArBpH,EAAQoH,WAC/BpH,EAAQiH,MACRjH,EAAQoH,SAASmK,KAAKvR,EAAQiH,MAAOwC,GAErCzJ,EAAQoH,SAASqC,GAG7B,EACMW,GAAe,WACjBoG,KAEIxQ,EAAQqH,UAAwC,mBAArBrH,EAAQqH,WAC/BrH,EAAQiH,MACRjH,EAAQqH,SAASkK,KAAKvR,EAAQiH,MAAOwC,GAErCzJ,EAAQqH,SAASoC,GAG7B,EAIMQ,GAAc,WAChB5I,EAAMrC,MAAMuM,UAAUiG,OAAO,oBAEzB5Q,EACAS,EAAMrC,MAAMyL,aAAa,WAAY,MAErCpJ,EAAMrC,MAAMyS,gBAAgB,YAGhC7Q,GAAiBA,CACrB,EASMoJ,GAAmB,SAAUvN,EAAOiV,GACtC,IAEItI,EAFAuI,EAAW3R,EAAQrB,IAAMqB,EAAQtB,IACjCkT,EAAcD,EAAW,IAG7B,OAAKA,GAMDvI,EADAsI,EACMjV,EAEAA,EAAQuD,EAAQtB,IAKnBnB,GAFG6L,EAAMwI,KAVZjR,GAAc,EACP,EAYf,EAQM6O,GAAiB,SAAU1R,GAC7B,IAII+T,EAAYC,EAJZpT,EAAMsB,EAAQtB,IACdC,EAAMqB,EAAQrB,IACdoT,EAAerT,EAAI1B,WAAWwC,MAAM,KAAK,GACzCwS,EAAerT,EAAI3B,WAAWwC,MAAM,KAAK,GAEzCyS,EAAe,EACfC,EAAM,EAEV,GAAgB,IAAZpU,EACA,OAAOkC,EAAQtB,IAEnB,GAAgB,MAAZZ,EACA,OAAOkC,EAAQrB,IAIfoT,IAEAE,EADAJ,EAAaE,EAAaxS,QAG1ByS,IAEAC,EADAH,EAAaE,EAAazS,QAG1BsS,GAAcC,IACdG,EAAgBJ,GAAcC,EAAcD,EAAaC,GAGzDpT,EAAM,IAENA,IAAQA,GADRwT,EAAMpB,KAAKoB,IAAIxT,KACInB,QAAQ0U,GAC3BtT,IAAQA,EAAMuT,GAAK3U,QAAQ0U,IAG/B,IAEIxI,EAFA0I,GAAWxT,EAAMD,GAAO,IAAMZ,EAAWY,EACzC0T,EAASpS,EAAQgF,KAAKhI,WAAWwC,MAAM,KAAK,GAwBhD,OArBI4S,EACAD,GAAUA,EAAO5U,QAAQ6U,EAAO7S,SAEhC4S,GAAkBnS,EAAQgF,KAG1BmN,IAFAA,GAAkBnS,EAAQgF,MAETzH,QAAQ,IAGzB2U,IACAC,GAAUD,IAGLzI,EAAT2I,GAAmBD,EAAO5U,QAAQ6U,EAAO7S,QAAmBhC,GAAQ4U,IAEvDnS,EAAQtB,IACjB+K,EAASzJ,EAAQtB,IACV+K,EAASzJ,EAAQrB,MACxB8K,EAASzJ,EAAQrB,KAGd8K,CACX,EAQMuF,GAAe,SAAUlR,GAC3B,IAAIuU,EAAUvB,KAAKwB,MAAMxU,EAAU0E,EAAOS,QAAUT,EAAOS,OAS3D,OAPIoP,EAAU,MACVA,EAAU,KAEE,MAAZvU,IACAuU,EAAU,KAGP9U,GAAQ8U,EACnB,EAEMpD,GAAmB,SAAUsD,EAAWC,EAAQzN,GAClD,IAAiB0N,EAASC,EAAtBzB,EAAIjR,EAER,OAAKiR,EAAEhM,cAIPwN,EAAUjD,GAAe+C,GACzBG,EAAOlD,GAAegD,GAET,SAATzN,EACI2N,EAAOD,EAAUxB,EAAEhM,eACnBwN,EAAUC,EAAOzB,EAAEhM,cAGnBwN,EAAUC,EAAOzB,EAAEhM,eACnBwN,EAAUC,EAAOzB,EAAEhM,cAIpB+E,GAAiByI,IAhBbF,CAiBf,EAEMrD,GAAmB,SAAUqD,EAAWC,EAAQzN,GAClD,IAAiB0N,EAASC,EAAtBzB,EAAIjR,EAER,OAAKiR,EAAE/L,cAIPuN,EAAUjD,GAAe+C,GACzBG,EAAOlD,GAAegD,GAET,SAATzN,EACI2N,EAAOD,EAAUxB,EAAE/L,eACnBuN,EAAUC,EAAOzB,EAAE/L,cAGnBuN,EAAUC,EAAOzB,EAAE/L,eACnBuN,EAAUC,EAAOzB,EAAE/L,cAIpB8E,GAAiByI,IAhBbF,CAiBf,EAEM1D,GAAgB,SAAU8D,EAAOjU,EAAKC,GACxC,IAAIR,EAAMqR,GAAemD,GAQzB,MANe,iBAARjU,IAAmBA,EAAMsB,EAAQtB,KACzB,iBAARC,IAAmBA,EAAMqB,EAAQrB,KAExCR,EAAMO,IAAMP,EAAMO,GAClBP,EAAMQ,IAAMR,EAAMQ,GAEXqL,GAAiB7L,EAC5B,EAEMZ,GAAU,SAAUY,GAEtB,QADAA,EAAMA,EAAIZ,QAAQ,IAEtB,EAEM2Q,GAAY,SAAU/P,GACxB,OAAK6B,EAAQ8F,iBAIT9F,EAAQgG,UAAwC,mBAArBhG,EAAQgG,SAC5BhG,EAAQgG,SAAS7H,GAEjB6H,GAAS7H,GANTA,CAQf,EAEM6H,GAAW,SAAU7H,GACvB,OAAOA,EAAInB,WAAWwB,QAAQ,kCAAmC,KAAOwB,EAAQ+F,mBACpF,EAEMgK,GAAa,SAAUtD,EAAMC,GAC/B,OAAK1M,EAAQiG,aAEbwG,EAAO,EAAIA,EAAO,EAAIA,EAAO,IAAMC,IAAQD,EAAO,IAAMC,GAEjDnP,GAAQkP,IAJkBlP,GAAQkP,EAK7C,EAEMmG,GAAW,WACb,IAIInW,EACAoW,EALA5B,EAAIjR,EACJ8S,EAAIrJ,EACJsJ,EAAI9B,EAAE7L,OACN4N,EAAKD,EAAExT,OAqBX,GAjBqB,iBAAV0R,EAAEvS,MAAkBuS,EAAEvS,KAAOuS,EAAEvS,KACrB,iBAAVuS,EAAEtS,MAAkBsS,EAAEtS,KAAOsS,EAAEtS,KACpB,iBAAXsS,EAAExS,OAAmBwS,EAAExS,MAAQwS,EAAExS,MACxB,iBAATwS,EAAEtP,KAAiBsP,EAAEtP,IAAMsP,EAAEtP,IAClB,iBAAXsP,EAAEjM,OAAmBiM,EAAEjM,MAAQiM,EAAEjM,MAElB,iBAAfiM,EAAE1L,WAAuB0L,EAAE1L,UAAY0L,EAAE1L,UAC1B,iBAAf0L,EAAEzL,WAAuByL,EAAEzL,UAAYyL,EAAEzL,UAC5B,iBAAbyL,EAAEtL,SAAqBsL,EAAEtL,QAAUsL,EAAEtL,QACxB,iBAAbsL,EAAErL,SAAqBqL,EAAErL,QAAUqL,EAAErL,QAEtB,iBAAfqL,EAAE7K,WAAuB6K,EAAE7K,UAAY6K,EAAE7K,UAEhD6K,EAAEtS,IAAMsS,EAAEvS,MACVuS,EAAEtS,IAAMsS,EAAEvS,KAGVsU,EAQA,IAPA/B,EAAE5L,SAAW,GACb4L,EAAEvS,IAAM,EACRuS,EAAEtS,IAAMqU,EAAK,EACb/B,EAAEjM,KAAO,EACTiM,EAAE7K,SAAW6K,EAAEtS,IACfsS,EAAE5K,WAAY,EAETwM,EAAI,EAAGA,EAAIG,EAAIH,IAChBpW,GAASsW,EAAEF,GAENlW,MAAMF,GAIPA,EAAQsW,EAAEF,IAHVE,EAAEF,GAAKpW,EACPA,EAAQyR,GAAUzR,IAKtBwU,EAAE5L,SAAS4N,KAAKxW,IAIF,iBAAXwU,EAAExS,MAAqB9B,MAAMsU,EAAExS,SAAOwS,EAAExS,KAAOwS,EAAEvS,MACxC,iBAATuS,EAAEtP,IAAmBhF,MAAMsU,EAAEtP,OAAKsP,EAAEtP,GAAKsP,EAAEtS,KAEvC,WAAXsS,EAAElM,MACEkM,EAAExS,KAAOwS,EAAEvS,MAAKuS,EAAExS,KAAOwS,EAAEvS,KAC3BuS,EAAExS,KAAOwS,EAAEtS,MAAKsS,EAAExS,KAAOwS,EAAEtS,OAE3BsS,EAAExS,KAAOwS,EAAEvS,MAAKuS,EAAExS,KAAOwS,EAAEvS,KAC3BuS,EAAExS,KAAOwS,EAAEtS,MAAKsS,EAAExS,KAAOwS,EAAEtS,KAE3BsS,EAAEtP,GAAKsP,EAAEvS,MAAKuS,EAAEtP,GAAKsP,EAAEvS,KACvBuS,EAAEtP,GAAKsP,EAAEtS,MAAKsS,EAAEtP,GAAKsP,EAAEtS,KAEvB6K,EAAa/K,OAET+K,EAAa/K,OAASwS,EAAExS,MACpBwS,EAAExS,KAAOwS,EAAEtP,KAAIsP,EAAExS,KAAOwS,EAAEtP,IAE9B6H,EAAa7H,KAAOsP,EAAEtP,IAClBsP,EAAEtP,GAAKsP,EAAExS,OAAMwS,EAAEtP,GAAKsP,EAAExS,OAKhCwS,EAAExS,KAAOwS,EAAEtP,KAAIsP,EAAExS,KAAOwS,EAAEtP,IAC1BsP,EAAEtP,GAAKsP,EAAExS,OAAMwS,EAAEtP,GAAKsP,EAAExS,QAIV,iBAAXwS,EAAEjM,MAAqBrI,MAAMsU,EAAEjM,QAAUiM,EAAEjM,MAAQiM,EAAEjM,KAAO,KACnEiM,EAAEjM,KAAO,GAGa,iBAAfiM,EAAE1L,UAAyB0L,EAAExS,KAAOwS,EAAE1L,WAC7C0L,EAAExS,KAAOwS,EAAE1L,UAGW,iBAAf0L,EAAEzL,UAAyByL,EAAExS,KAAOwS,EAAEzL,WAC7CyL,EAAExS,KAAOwS,EAAEzL,UAGS,iBAAbyL,EAAEtL,QAAuBsL,EAAEtP,GAAKsP,EAAEtL,SACzCsL,EAAEtP,GAAKsP,EAAEtL,QAGW,iBAAbsL,EAAErL,QAAuBqL,EAAExS,KAAOwS,EAAErL,SAC3CqL,EAAEtP,GAAKsP,EAAErL,QAGTkN,IACIA,EAAEpU,MAAQuS,EAAEvS,MAAKoU,EAAEpU,IAAMuS,EAAEvS,KAC3BoU,EAAEnU,MAAQsS,EAAEtS,MAAKmU,EAAEnU,IAAMsS,EAAEtS,MAC3BmU,EAAErU,KAAOqU,EAAEpU,KAAOoU,EAAErU,KAAOqU,EAAEnU,OAAKmU,EAAErU,KAAOwS,EAAExS,OAC7CqU,EAAEnR,GAAKmR,EAAEpU,KAAOoU,EAAEnR,GAAKmR,EAAEnU,OAAKmU,EAAEnR,GAAKsP,EAAEtP,MAGjB,iBAAnBsP,EAAEhM,cAA6BtI,MAAMsU,EAAEhM,gBAAkBgM,EAAEhM,cAAgBgM,EAAEhM,aAAe,KACnGgM,EAAEhM,aAAe,IAGS,iBAAnBgM,EAAE/L,cAA6BvI,MAAMsU,EAAE/L,gBAAkB+L,EAAE/L,cAAgB+L,EAAE/L,aAAe,KACnG+L,EAAE/L,aAAe,GAGjB+L,EAAEhM,cAAgBgM,EAAEhM,aAAegM,EAAEtS,IAAMsS,EAAEvS,MAC7CuS,EAAEhM,aAAegM,EAAEtS,IAAMsS,EAAEvS,KAG3BuS,EAAE/L,cAAgB+L,EAAE/L,aAAe+L,EAAEtS,IAAMsS,EAAEvS,MAC7CuS,EAAE/L,aAAe+L,EAAEtS,IAAMsS,EAAEvS,IAEnC,EAEMsP,GAAW,SAAU7P,EAAK+U,GAC5B,IAAIC,EAAY,GACZlC,EAAIjR,EA0BR,OAxBIiR,EAAEzK,SACF2M,GAAalC,EAAEzK,QAGnB2M,GAAahV,EAET8S,EAAEvK,cACEuK,EAAE7L,OAAO7F,QAAUpB,IAAQ8S,EAAE5L,SAAS4L,EAAEtS,MAKjCuU,IAAajC,EAAEtS,OAJtBwU,GAAalC,EAAEvK,YACXuK,EAAExK,UACF0M,GAAa,MAUrBlC,EAAExK,UACF0M,GAAalC,EAAExK,SAGZ0M,CACX,EAoBMC,GAAe,WACjB3J,EAAO/K,IAAMsB,EAAQtB,IACrB+K,EAAO9K,IAAMqB,EAAQrB,IAnBrB8K,EAAOhL,KAAOuB,EAAQvB,KACtBgL,EAAOE,aAAeK,GAAiBP,EAAOhL,MAC9CgL,EAAOgG,YAAcvB,GAAUzE,EAAOhL,MAClCuB,EAAQoF,SACRqE,EAAOG,WAAa5J,EAAQoF,OAAOqE,EAAOhL,OAK9CgL,EAAO9H,GAAK3B,EAAQ2B,GACpB8H,EAAOI,WAAaG,GAAiBP,EAAO9H,IAC5C8H,EAAOiG,UAAYxB,GAAUzE,EAAO9H,IAChC3B,EAAQoF,SACRqE,EAAOK,SAAW9J,EAAQoF,OAAOqE,EAAO9H,IAShD,EAIMsJ,GAAa,WACf,GAAKjL,EAAQsC,KAAb,CAIA,IACIuQ,EAAGQ,EAIHrP,EAIAsP,EACAC,EAGA9J,EAbAwH,EAAIjR,EAGJwT,EAAQvC,EAAEtS,IAAMsS,EAAEvS,IAClBmF,EAAUoN,EAAE7K,SAEZrC,EAAQ,EAER0P,EAAY,EAMZC,EAAO,GAyBX,IAtBArD,KAEIY,EAAE5K,YACFxC,EAAU2P,EAAQvC,EAAEjM,MAGpBnB,EAAU,KAAIA,EAAU,IAC5BG,EAAQzG,GAAQ,IAAMsG,GAElBA,EAAU,IACV4P,EAAY,GAEZ5P,EAAU,IACV4P,EAAY,GAEZ5P,EAAU,KACV4P,EAAY,GAEZ5P,EAAU,KACV4P,EAAY,GAGXZ,EAAI,EAAGA,EAAIhP,EAAU,EAAGgP,IAAK,CAY9B,IAXAS,EAAkBG,GAElB1P,EAAQxG,GAAQyG,EAAQ6O,IAEZ,MACR9O,EAAQ,KAEZvB,EAAOsB,IAAI+O,GAAK9O,EAEhBwP,GAAWxP,EAASC,GAAS6O,EAAI,KAAQS,EAAkB,GAEtDD,EAAI,EAAGA,GAAKC,GACC,IAAVvP,EAD0BsP,IAO9BK,GAAQ,iDAFEnW,GAAQwG,EAASwP,EAAUF,GAEgC,aAGzEK,GAAQ,2CAA6C3P,EAAQ,aAE7D0F,EAAS+F,GAAezL,GAOxB2P,GAAQ,2CAA6Cb,EAAI,kBAAoB9O,EAAQ,OALjF0F,EADAwH,EAAE7L,OAAO7F,OACA0R,EAAE5L,SAASoE,GAEXyE,GAAUzE,IAG+E,SAC1G,CACAjH,EAAOqB,QAAUiN,KAAK6C,KAAK9P,EAAU,GAErCxC,EAAMI,KAAK8J,UAAUC,IAAI,iBACzBnK,EAAMiB,KAAKqI,UAAY+I,EACvBE,IA9EA,CA+EJ,EAEMA,GAAkB,WACpB,IAAK,IAAIf,EAAI,EAAGA,EAAIrQ,EAAOqB,QAASgP,IAChCxR,EAAMkB,YAAY0Q,KAAK5R,EAAMiB,KAAKsI,cAAc,iBAAmBiI,IAGvEvC,IACJ,EAEMA,GAAiB,WAGnB,IAFA,IAAMuD,EAAQ,GAAIC,EAAS,GACvB3V,EAAMqE,EAAOqB,QACRgP,EAAI,EAAGA,EAAI1U,EAAK0U,IACrBrQ,EAAOuB,MAAM8O,GAAKxR,EAAMkB,YAAYsQ,GAAGzE,YACvC5L,EAAOwB,MAAM6O,GAAKtV,GAAQiF,EAAOuB,MAAM8O,GAAKrQ,EAAOG,KAAO,KAC1DH,EAAOyB,MAAM4O,GAAKtV,GAAQiF,EAAOwB,MAAM6O,GAAK,GAE5CgB,EAAMhB,GAAKtV,GAAQiF,EAAOsB,IAAI+O,GAAKrQ,EAAOyB,MAAM4O,IAChDiB,EAAOjB,GAAKtV,GAAQsW,EAAMhB,GAAKrQ,EAAOwB,MAAM6O,IAG5C7S,EAAQiG,cACJ4N,EAAM,IAAMrR,EAAOoB,WACnBiQ,EAAM,IAAMrR,EAAOoB,SACnBkQ,EAAO,GAAKvW,GAAQsW,EAAM,GAAKrR,EAAOwB,MAAM,IAE5CxB,EAAOyB,MAAM,GAAKzB,EAAOoB,UAGzBkQ,EAAO3V,EAAM,GAAK,IAAMqE,EAAOoB,WAC/BkQ,EAAO3V,EAAM,GAAK,IAAMqE,EAAOoB,SAC/BiQ,EAAM1V,EAAM,GAAKZ,GAAQuW,EAAO3V,EAAM,GAAKqE,EAAOwB,MAAM7F,EAAM,IAE9DqE,EAAOyB,MAAM9F,EAAM,GAAKZ,GAAQiF,EAAOwB,MAAM7F,EAAM,GAAKqE,EAAOoB,YAIvEmQ,GAAkB,EAAGF,EAAOC,GAC5BC,GAAkB,EAAGF,EAAOC,GAE5B,IAAK,IAAIjB,EAAI,EAAGA,EAAI1U,EAAK0U,IAAK,CAC1B,IAAMmB,EAAQ3S,EAAMkB,YAAYsQ,GAC5BrQ,EAAOyB,MAAM4O,KAAOjW,OAAOqX,oBAC3BD,EAAMnJ,MAAMqJ,YAAc1R,EAAOyB,MAAM4O,GAAK,IAEpD,CACJ,EAIMkB,GAAoB,SAAU/O,EAAM6O,EAAOC,GAG7C,IAFA,IAAM3V,EAAMqE,EAAOqB,QAEVgP,EAAI,EAAGA,EAAI1U,EAAK0U,GAAK7N,EAAM,CAChC,IAAImP,EAAStB,EAAK7N,EAAO,EACzB,GAAImP,GAAUhW,EACV,MAEJ,IAAM6V,EAAQ3S,EAAMkB,YAAY4R,GAE5BL,EAAOjB,IAAMgB,EAAMM,GACnBH,EAAMnJ,MAAMC,WAAa,UAEzBkJ,EAAMnJ,MAAMC,WAAa,QAEjC,CACJ,EAEMuF,GAAiB,WACdrQ,EAAQmG,cAIb3D,EAAOG,KAAOtB,EAAMK,GAAG0M,YAClB5L,EAAOG,OAIS,WAAjB3C,EAAQ+E,KACRvC,EAAOK,SAAWxB,EAAMU,SAASqM,YAEjC5L,EAAOK,SAAWxB,EAAMW,OAAOoM,YAEnC5L,EAAOW,SAAW5F,GAAQiF,EAAOK,SAAWL,EAAOG,KAAO,KAC1DH,EAAOoB,SAAWrG,GAASiF,EAAOW,SAAW,EAAK,IAElD9B,EAAMiB,KAAKuI,MAAM6B,MAAQnP,GAAQ,IAAMiF,EAAOW,UAAY,IAC1D9B,EAAMiB,KAAKuI,MAAM4B,KAAOjK,EAAOoB,SAAW,KAC9C,EAGMzE,GAAS,SAAUiV,GAChBpV,IAIL8B,GAAY,EAEZd,EAAQvB,KAAOgL,EAAOhL,KACtBuB,EAAQ2B,GAAK8H,EAAO9H,GACpB6H,EAAa/K,KAAOgL,EAAOhL,KAC3B+K,EAAa7H,GAAK8H,EAAO9H,GAEzB3B,EAAWsJ,OAAOC,OAAOvJ,EAASoU,GAClCxB,KACAQ,KAEAnJ,KACAwB,IACA1B,GAAK,GACT,EAwBA,MAAO,CACH5K,OAAQ,SAASa,GACbb,GAAOa,EACX,EACAqU,MAAQ,WAzBHrV,IAILoU,KACAjU,KAsBA,EACAmV,QAAU,WAnBLtV,IAILiL,KACAjL,EAAMyS,gBAAgB,YAEtBhG,IACAzM,EAAQ,KACRgB,EAAU,KAYV,EACA+J,KAAO,WAIH,OAHA6I,KACA7I,IAEOpM,IACX,EACAqC,QAAAA,EACAK,SAAAA,EAER,EAQe,SAASkU,EAAexU,GAAyB,IAAhBC,EAAOC,UAAAV,OAAA,QAAAW,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAOtD,MANuB,iBAAZF,IACPA,EAAUyB,SAASoJ,cAAc7K,IAGd,IAAID,EAAeC,EAASC,GAE7B+J,MAC1B,C,81BC3kEA,IAAMyK,EAAsB,IAAIC,EAAAA,EAE1BC,EAAW,WASb,SAAAA,EAAY1U,GAA6B,IAAA2U,G,4FAAApY,CAAA,KAAAmY,GAAAE,EAAA,uBAAAA,EAAA,sBAAAA,EAAA,qBAAAA,EAAA,eALhB,GAACA,EAAA,sCAAAA,EAAA,uBAAAA,EAAA,4BAMtBjX,KAAKkX,QAAU7U,EAAQ6U,QAEvBlX,KAAK+L,OAAS/L,KAAKkX,QAAQjK,cAAc,yBACzCjN,KAAKqB,MAAQrB,KAAKkX,QAAQjK,cAAc,0BACxCjN,KAAKmX,aAAmC,QAAvBH,EAAG3U,EAAQ8U,oBAAY,IAAAH,EAAAA,EAAIhX,KAAK+L,OAAOhC,OAC5D,C,UAsNC,O,EApNDgN,E,EAAA,EAAAlY,IAAA,OAAAC,MAGO,WACHkB,KAAKoX,cACLpX,KAAKqX,mBACLrX,KAAKsX,cACLtX,KAAKuX,cACLvX,KAAKwX,YACT,GAEA,CAAA3Y,IAAA,cAAAC,MAGQ,WAAW,IAAA2Y,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,KACfnY,KAAKqC,QAAU,CACX+E,MAAmC,QAAjBqQ,EAAAzX,KAAKmX,oBAAY,IAAAM,OAAA,EAAjBA,EAAmBrQ,OAAQ,KAC7CrG,IAAkB9B,OAAwB,QAAlByY,EAAC1X,KAAKmX,oBAAY,IAAAO,OAAA,EAAjBA,EAAmB3W,MAAQ,EACpDC,IAAkB/B,OAAwB,QAAlB0Y,EAAC3X,KAAKmX,oBAAY,IAAAQ,OAAA,EAAjBA,EAAmB3W,MAAQ,EACpDF,KAAkB7B,OAAwB,QAAlB2Y,EAAC5X,KAAKmX,oBAAY,IAAAS,OAAA,EAAjBA,EAAmB9W,OAAS,EACrDkD,GAAkB/E,OAAwB,QAAlB4Y,EAAC7X,KAAKmX,oBAAY,IAAAU,OAAA,EAAjBA,EAAmB7T,KAAO,EACnDqD,KAAkBpI,OAAwB,QAAlB6Y,EAAC9X,KAAKmX,oBAAY,IAAAW,OAAA,EAAjBA,EAAmBzQ,OAAS,KACrDC,aAAkBrI,OAAwB,QAAlB8Y,EAAC/X,KAAKmX,oBAAY,IAAAY,OAAA,EAAjBA,EAAmB1Q,OAAS,KACrD+Q,MAAkBC,QAAyB,QAAlBL,EAAChY,KAAKmX,oBAAY,IAAAa,OAAA,EAAjBA,EAAmBI,SAAU,EACvDjP,QAAkBkP,QAAyB,QAAlBJ,EAACjY,KAAKmX,oBAAY,IAAAc,OAAA,EAAjBA,EAAmB9O,WAAY,EACzD8L,SAAmC,QAA3BiD,EAAUlY,KAAKmX,oBAAY,IAAAe,OAAA,EAAjBA,EAAmBjD,SACrCrM,cAAkB,EAClBD,cAAkB,EAClBR,kBAAkB,EAClBoB,QAAkB,SAACxK,GACf8X,EAASyB,QAAQ,oBAAqBvZ,EAAMoZ,EAChD,EACA3O,SAAU,SAACzK,GACPoZ,EAAKI,cAAcxZ,GACnB8X,EAASyB,QAAQ,qBAAsBvZ,EAC3C,EACA0K,SAAU,SAAC1K,GACP8X,EAASyB,QAAQ,qBAAsBvZ,EAC3C,EACA2K,SAAU,SAAC3K,GACPoZ,EAAKI,cAAcxZ,GACnB8X,EAASyB,QAAQ,qBAAsBvZ,EAC3C,EAER,GAEA,CAAAF,IAAA,mBAAAC,MAGQ,WACAkB,KAAK+L,SAEL/L,KAAKwY,uBAAyB,IAAIrW,EAAenC,KAAK+L,OAAQ/L,KAAKqC,SAEnErC,KAAKwY,uBAAuBhX,OAAO,CAC/BR,IAAMhB,KAAKmX,aAAcnW,IACzBF,KAAMd,KAAKmX,aAAcrW,KACzBkD,GAAMhE,KAAKmX,aAAcnT,KAGrC,GAAC,CAAAnF,IAAA,cAAAC,MAEO,WAAW,IAAA2Z,EAAA,KACf5B,EAAS6B,UAAU,wBAAwB,WACvCD,EAAKD,uBAAuB9B,OAChC,GACJ,GAEA,CAAA7X,IAAA,cAAAC,MAGQ,WAAW,IAAA6Z,EAAA,KACV3Y,KAAKqB,QAIVrB,KAAKqB,MAAM+M,iBAAiB,UAAU,WAClCuK,EAAKC,oBACT,IAEA5Y,KAAKqB,MAAM+M,iBAAiB,SAAS,SAACnN,GAClC,IAAMwC,EAASxC,EAAMwC,OACf3E,EAAQ2E,EAAO3E,MAErB6Z,EAAKE,UAAUpV,GACfkV,EAAKG,UAAUrV,EAAQ3E,EAC3B,IACJ,GAEA,CAAAD,IAAA,qBAAAC,MAGQ,WAEJ,IAAIA,EAAQkB,KAAK+Y,WAAW/Y,KAAKqB,MAAMvC,OACjCka,EAAY/Z,OAAOe,KAAK+L,OAAOhC,QAAY,IAE7CjL,EAAQkB,KAAKqC,QAAQtB,IACrBjC,EAAQkB,KAAKqC,QAAQtB,IACdjC,EAAQka,IACfla,EAAQkB,KAAKqC,QAAQrB,KAGzBhB,KAAKqB,MAAMvC,MAAQA,EAAMO,WAGzBW,KAAK8Y,UAAU9Y,KAAKqB,MAAOvC,GAC3BkB,KAAKiZ,QAAQ,CACTnY,KAAMhC,GAEd,GAEA,CAAAD,IAAA,YAAAC,MAIQ,SAAU2E,GACd,IAAM2D,EAAOpH,KAAKqC,QAAQ4S,SAE1B,GAAK7N,EAIL,OAAQA,GACJ,IAAK,SACDpH,KAAKkZ,gBAAgBzV,GACrB,MACJ,IAAK,iBACDzD,KAAKmZ,uBAAuB1V,GAKxC,GAEA,CAAA5E,IAAA,kBAAAC,MAIQ,SAAgB2E,GACpB,IACMqI,EADQ,MACOsN,KAAK3V,EAAO3E,OAE7BgN,GAA+B,iBAAdA,EAAO,KACxBrI,EAAO3E,MAAQgN,EAAO,GAE9B,GAEA,CAAAjN,IAAA,yBAAAC,MAIQ,SAAuB2E,GAC3B,IACMqI,EADQ,aACOsN,KAAK3V,EAAO3E,OAE7BgN,GAA+B,iBAAdA,EAAO,KACxBrI,EAAO3E,MAAQgN,EAAO,GAE9B,GAAC,CAAAjN,IAAA,UAAAC,MAEO,SAAQC,GACZiB,KAAKwY,uBAAuBhX,OAAOzC,EACvC,GAEA,CAAAF,IAAA,gBAAAC,MAIQ,SAAcC,GAClBiB,KAAK8Y,UAAU9Y,KAAKqB,MAAOtC,EAAK+B,MAChCd,KAAKqZ,QAAUta,EAAK+B,IACxB,GAEA,CAAAjC,IAAA,aAAAC,MAGQ,WACAkB,KAAKqC,QAAQ+V,OAASpY,KAAKqB,OAC3BrB,KAAK8Y,UAAU9Y,KAAKqB,MAE5B,GAEA,CAAAxC,IAAA,YAAAC,MAKQ,SAAUuC,GAAoD,IAA3BvC,EAAAwD,UAAAV,OAAA,QAAAW,IAAAD,UAAA,GAAAA,UAAA,GAAyB,GAGhE,GAFatC,KAAKqC,QAAQ+V,MAE1B,CAIA,IAAMrZ,EAAOD,GAAgBuC,EAAMvC,MAC7B0V,EAASxU,KAAK+Y,WAAWha,EAAKM,YAAYA,WAEhDgC,EAAMvC,MAAQwa,EAAAA,EAAAA,eAAqB9E,E,CACvC,GAEA,CAAA3V,IAAA,aAAAC,MAKQ,SAAWya,GACf,OAAKA,EAIED,EAAAA,EAAAA,gBAAsBC,GAHlB,CAIf,I,iFAACxC,CAAA,CArOY,GAwOjB,I,8kDC/OA,IACMyC,EAAiB,cACjBC,EAAe,YACf5C,EAAsB,IAAIC,EAAAA,EAC1B4C,EAAoB,IAAI/a,EAkhB9B,EAhhBwB,WAoBpB,SAAAgb,EAAYzC,I,4FAAoBtY,CAAA,KAAA+a,GAAA1C,EAAA,uBAAAA,EAAA,yBAlBI,KAAGA,EAAA,oBACA,IAAEA,EAAA,uBAAAA,EAAA,6BAAAA,EAAA,6BAAAA,EAAA,+BAAAA,EAAA,wBAAAA,EAAA,qCAAAA,EAAA,8BAAAA,EAAA,+BAAAA,EAAA,4BAAAA,EAAA,iBAUN,MAAIA,EAAA,yBAAAA,EAAA,2BAAAA,EAAA,kCAAAA,EAAA,gCAQnCjX,KAAKkX,QAAUA,EAEflX,KAAK4Z,qBACT,C,UAkCC,O,EAhCDD,E,EAmfC,EAAA9a,IAAA,WAAAC,MA7eD,SAAgBA,EAAeC,GAC3BA,EAAKsC,MAAMvC,MAAQA,EAAMgB,eAAe,QAC5C,GAEA,CAAAjB,IAAA,iBAAAC,MAYA,SAAsB+a,GAClB,IAAM3E,EAAI2E,EAAO,GAAK,IAChBC,EAA4C,GAAxCJ,EAAEzZ,iBAAiB,mBAKvB8Z,EAJa7E,EAAI/B,KAAK6G,IAAI,EAAI9E,EAAG4E,IAClB3G,KAAK6G,IAAI,EAAI9E,EAAG4E,GAAK,GAE/BJ,EAAEzZ,iBAAiB,gBAG9B,OAAO8Z,EAAK,EAAI,IAAMA,CAC1B,K,EAhCA,EAAAlb,IAAA,OAAAC,MAqCO,WACHkB,KAAKsX,cACLtX,KAAKia,mBACLja,KAAKuX,cACLvX,KAAKka,qBACLla,KAAKma,gBAAe,EACxB,GAEA,CAAAtb,IAAA,sBAAAC,MAKO,SAAoBC,EAAwBqb,GAC/Cpa,KAAKqa,YAAYtb,EAAMqb,GACvBT,EAAmBW,SAASrb,OAAOF,EAAK+B,MAAO/B,GAC/CiB,KAAKua,YACT,GAEA,CAAA1b,IAAA,SAAAC,MAGO,WACHkB,KAAKwa,qBACLxa,KAAKya,gBACLza,KAAK0a,kBACL1a,KAAK2a,oBACL3a,KAAK4a,YACL5a,KAAKka,oBACT,GAEA,CAAArb,IAAA,sBAAAC,MAGQ,WACJkB,KAAK6a,QAAUC,EAAI9a,KAAKkX,QAAQ6D,iBAAiB,qBAAuB,GACxE/a,KAAKgb,cAAgBhb,KAAKkX,QAAQjK,cAAc,4CAChDjN,KAAKib,cAAgBjb,KAAKkX,QAAQjK,cAAc,2CAChDjN,KAAKkb,gBAAkBlb,KAAKkX,QAAQjK,cAAc,8CAClDjN,KAAKmb,SAAWL,EAAI9a,KAAKkX,QAAQ6D,iBAAiB,qCAAuC,GACzF/a,KAAKob,sBAAwBpb,KAAKkX,QAAQjK,cAAc,wCACxDjN,KAAKqb,eAAiBrb,KAAKkX,QAAQjK,cAAc,2CACjDjN,KAAKsb,gBAAkBtb,KAAKkX,QAAQjK,cAAc,mCAClDjN,KAAKub,aAAevb,KAAKkX,QAAQjK,cAAc,kCAAmD,IACtG,GAEA,CAAApO,IAAA,mBAAAC,MAIQ,WAAgB,IAAA0c,EAAArD,EAAA,KACpBnY,KAAK6a,QAAQY,SAAQ,SAAC1P,GAClBoM,EAAKuD,YAAY3P,EACrB,IAEA/L,KAAK2b,sBACL3b,KAAK4b,uBAGL5b,KAAK6b,WAA4B,QAAhBL,EAAAxb,KAAK8b,mBAAW,IAAAN,OAAA,EAAhBA,EAAkBnC,UAAW,KAE9CrZ,KAAK+b,mBACT,GAAC,CAAAld,IAAA,cAAAC,MAEO,SAAYiN,GAChB,IAAMiQ,EAA4B,IAAIjF,EAAY,CAC9CG,QAASnL,IAGbiQ,EAAY5P,OAEZpM,KAAKic,aAAa3G,KAAK0G,EAC3B,GAEA,CAAAnd,IAAA,cAAAC,MAIQ,WAAW,IAAA2Z,EAAA,KACf5B,EAAS6B,UAAU,qBAAqB,SAAC3Z,EAAwBid,GAC7Djd,EAAKsC,MAAQ2a,EAAY3a,MACzBtC,EAAKid,YAAcA,EACnBvD,EAAKlX,oBAAoBxC,GACzB0Z,EAAKyD,aAAand,GAClB0Z,EAAKjX,QACT,IAEAqV,EAAS6B,UAAU,sBAAsB,SAAC3Z,GACtC0Z,EAAKlX,oBAAoBxC,EAAM,OAC/B0Z,EAAKjX,QACT,IAEAqV,EAAS6B,UAAU,sBAAsB,WACrCD,EAAK8B,aACL9B,EAAK0B,gBAAe,EACxB,GACJ,GAAC,CAAAtb,IAAA,cAAAC,MAEO,WAAW,IAAA6Z,EAAA,KACX3Y,KAAKub,cACLvb,KAAKub,aAAanN,iBAAiB,SAAS,WACxCuK,EAAKwD,YACT,GAER,GAAC,CAAAtd,IAAA,aAAAC,MAEO,WACJ+X,EAASyB,QAAQ,wBACjBtY,KAAKwB,SACLtC,OAAOkd,QAAQC,UAAU,KAAM,GAAInd,OAAOwC,SAAS4a,SACvD,GAEA,CAAAzd,IAAA,cAAAC,MAKQ,SAAYC,EAAwBqb,GACxC,IAAMvb,EAAME,EAAKsC,MAAMkb,aAAa,QAEpC,GAAK1d,EAAL,CAIA,IAAM2d,EAAazd,EAAKsC,MAAMmM,SACxBiP,EAAWnD,EAAAA,EAAAA,aAAmBza,GAEhC4d,GAAY9c,SAAS8c,IAAsB,QAATrC,IAAmBoC,EACrDzd,EAAK+B,KAAOnB,SAAS8c,GAErB1d,EAAK+B,KAAOnB,SAAS,GAADE,OAAId,EAAK+B,OAEjC4Y,EAAEnZ,cAAc1B,EAAKE,EAAK+B,K,CAC9B,GAEA,CAAAjC,IAAA,aAAAC,MAIQ,WACJ,IAAM4d,EAAahD,EAAEiD,aACfC,EAASjd,SAAS+c,EAAWvc,UAAY,GAAK,MAAQ,SAE5DH,KAAKqb,eAAerO,UAAY0P,EAAWrc,OAC3CL,KAAKsb,gBAAgBtO,UAAY0P,EAAWvc,QAC5CH,KAAKsb,gBAAgB1N,UAAUgP,GAtNnB,WAuNhB,GAEA,CAAA/d,IAAA,eAAAC,MAIQ,SAAaC,GACjBiB,KAAK6c,wBAAwB9d,EAAM,SACnCiB,KAAK6c,wBAAwB9d,EAAM,QACnCiB,KAAK6c,wBAAwB9d,EAAM,SACnCiB,KAAK6c,wBAAwB9d,EAAM,UACvC,GAEA,CAAAF,IAAA,0BAAAC,MAKQ,SAAwBC,EAAwB+d,GACpD,IAAMC,EAAoB,WACpBC,EAAOhd,KAGbjB,EAAKsC,MAAM+M,iBAAiB0O,GAAa,SAAuB7b,GAE5D,IAAMI,EAAQrB,KAEd,OAAQ8c,GACJ,IAAK,QACDzb,EAAMvC,MAAQ,GACd,MACJ,IAAK,OAGM,IAAAme,EAAAC,EAFa,KAAhB7b,EAAMvC,MACN6a,EAAmBW,SAASrb,OAAOF,EAAK+B,MAAO/B,IAE/C2a,EAAEpY,eAAeD,EAAOtC,EAAMge,GAC9BC,EAAKzb,oBAAoBxC,EAAM,OACf,QAAhBke,EAAAle,EAAKid,mBAAW,IAAAiB,GAAwB,QAAxBC,EAAhBD,EAAkBzE,8BAAsB,IAAA0E,GAAxCA,EAA0C1b,SAC1Cwb,EAAKxb,UAET,MACJ,IAAK,QACGH,EAAMvC,OACN6a,EAAmBW,SAASrb,OAAOoC,EAAMvC,MAAM+B,QAAQkc,EAAmB,KAAMhe,GAEpF,MACJ,IAAK,UACD2a,EAAEyD,uBAAuBlc,GACzByY,EAAE0D,eAAenc,EAAwBlC,EAAMie,EAAM3b,EAAO0b,GAC5D,MACJ,QAASnT,QAAQyT,MAAM,6BAE/B,GAEJ,GAEA,CAAAxe,IAAA,qBAAAC,MAGQ,WAAkB,IAAAwe,EAAA,KACtBtd,KAAKmb,SAASM,SAAQ,SAAC8B,GACnBD,EAAKE,oBAAoBD,EAC7B,GACJ,GAAC,CAAA1e,IAAA,sBAAAC,MAEO,SAAoBye,GACxB,IAAM1D,EAAO5a,OAAQse,EAAKtQ,cAAc,gCAAiDlD,QAAc,MACjG0T,EAAiBF,EAAKtQ,cAAc,mCAErCwQ,IAILA,EAAezQ,UACX0M,EAAEgE,QAAQ/D,EAAmBgE,eAAe9D,IAExCH,EAAEtZ,WAAW,uBAAwBuZ,EAAmBgE,eAAe9D,GAAO,MAC9E,IAER4D,EAAe1T,QAAiB,QAC5B2P,EAAEgE,QAAQ/D,EAAmBgE,eAAe9D,IACxC,GAAAha,OACGF,SAASga,EAAmBgE,eAAe9D,GAAMja,YACpD,IACZ,GAEA,CAAAf,IAAA,gBAAAC,MAIQ,WAAa,IAAA8e,EAAA,KACjB5d,KAAKmb,SAASM,SAAQ,SAAC8B,GACnBK,EAAKC,aAAaN,EACtB,GACJ,GAEA,CAAA1e,IAAA,eAAAC,MAKQ,SAAaye,GACjB,IAAMO,EAAiBP,EAAKtQ,cAAc,mCACpC8Q,EAAmBR,EAAKtQ,cAAc,yCACtC+Q,EAAe/e,OAAO8e,EAAiBhU,QAAsB,cAC7DkU,EAAkBhf,OAAO8e,EAAiBhU,QAAyB,iBACnEmU,EAAiBX,EAAKtQ,cAAc,sCACpCkR,EAAalf,OAAOif,EAAenU,QAAoB,YACvDqU,EAAgBnf,OAAOif,EAAenU,QAAuB,eAE/D2P,EAAEzZ,iBAAiB,iBAAmB+d,GACtCtE,EAAEzZ,iBAAiB,iBAAmBge,GACtCvE,EAAEzZ,iBAAiB,mBAAqBke,GACxCzE,EAAEzZ,iBAAiB,mBAAqBme,GACxCN,EAAe9Q,UAAY,IAC3BuQ,EAAK3P,UAAUC,IAAI2L,IAEnB+D,EAAK3P,UAAUE,OAAO0L,EAE9B,GAEA,CAAA3a,IAAA,kBAAAC,MAIQ,WACJ,IAAMuf,EAAwBre,KAAKse,kBAAkB1c,OAC/C2c,EAAiBjF,EAAAA,EAAAA,WAAiB+E,EAAuB,CAAC,WAAY,WAAY,aAClFG,EAAmBlF,EAAAA,EAAAA,WAAiB+E,EAAuB,CAAC,cAAe,cAAe,gBAEhGre,KAAKob,sBAAsBqD,UAAY,GAAH5e,OAAM0e,EAAc,KAAA1e,OAAIwe,EAAqB,KAAAxe,OAAI2e,EACzF,GAEA,CAAA3f,IAAA,oBAAAC,MAIQ,WACJ,IAAM4f,EAAWrG,SAASrY,KAAKse,kBAAkB1c,QAC3C+c,EAAeD,EAAW,MAAQ,SAClCE,EAAiBF,EAAW,SAAW,MAE7C1e,KAAKib,cAAcrN,UAAU+Q,GAAclF,GAC3CzZ,KAAKgb,cAAcpN,UAAU+Q,GAAclF,GAC3CzZ,KAAKkb,gBAAgBtN,UAAUgR,GAAgBnF,GAC/C5C,EAASyB,QAAQ,qBAAsBoG,EAC3C,GAEA,CAAA7f,IAAA,YAAAC,MAGQ,WAAS,IAAA+f,EAAA,KACb7e,KAAKmb,SAASM,SAAQ,SAAC8B,GACnBsB,EAAKC,cAAcvB,EACvB,GACJ,GAEA,CAAA1e,IAAA,gBAAAC,MAKQ,SAAcigB,GAClB,IAAMC,EAA0B,IAC5BC,EAAUhgB,OAAO8f,EAAS9R,cAAc,mCAAoCD,UAC3EnM,QAAQ,UAAW,KAExBke,EAASjS,aAAa,eAAgC,GAAHjN,OAAD,IAAZof,EAAmBD,EAA+BC,IAEpFF,EAAShV,QAAc,OAAMgV,EAASnR,UAAUyB,SAASmK,KACzDyF,EAAUhgB,OAAO8f,EAAShV,QAAc,OAG5CgV,EAAS7R,MAAMgS,MAAwB,GAAHrf,OAAD,IAAZof,EAAmBD,EAA+BC,EAC7E,GAAC,CAAApgB,IAAA,qBAAAC,MAEO,WAEJ,IAAMqgB,EAAqBrE,EAAkB9a,KAAKkX,QAAQ6D,iBAAiB,oCAErEqE,EAA+B,GAErCD,EAAsB1D,SAAQ,SAAC8B,GAC3B,IAAMnb,EAAUmb,EAEhBnb,EAAQ2H,QAAiB,SAAKqV,EAAmB9J,KAAKrW,OAAOmD,EAAQ2H,QAAiB,SAC1F,IAEA,IAAMsV,EAAmCD,EAAmBE,MAAK,SAAC7f,EAAWC,GACzE,OAAOD,EAAIC,CACf,IAEAM,KAAKuf,kBAAoBF,EAAuBzd,OAAM,GAAA/B,OAC/Cwf,EAAuB,IAC1B,IAEJrf,KAAKkX,QAAQnN,QAAoB,WAAI/J,KAAKuf,kBAE1C1I,EAASyB,QAAQ,yBAA0BtY,KAAKuf,kBACpD,GAAC,CAAA1gB,IAAA,iBAAAC,MAEO,SAAe0gB,GACnB,IAAMC,EAAQ,IAAIC,gBACZC,EAAOzgB,OAAOwC,SAASie,KAE7BF,EAAMlT,OAAO,aAAc,GAAF1M,OAAK6Z,EAAEzZ,iBAAiB,gBACjDwf,EAAMlT,OAAO,iBAAkB,GAAF1M,OAAK6Z,EAAEzZ,iBAAiB,oBACrDwf,EAAMlT,OAAO,kBAAmB,GAAF1M,OAAK6Z,EAAEzZ,iBAAiB,qBAElDuf,GACAtgB,OAAOkd,QAAQC,UAAU,KAAM,GAAI,IAAFxc,OAAM4f,EAAMpgB,YAAUQ,OAAG8f,GAElE,GAAC,CAAA9gB,IAAA,kBAAAC,MAEO,WACJ,OAAOkB,KAAKmb,SAASyE,QAAO,SAACC,GACzB,OAAQA,EAAQjS,UAAUyB,SAAS,cACvC,GACJ,GAEA,CAAAxQ,IAAA,oBAAAC,MAGQ,WAAiB,IAAAghB,EAAA,KAErB9f,KAAK+f,UAAYrG,EAAEsG,eAEdhgB,KAAK+f,WAIV/f,KAAKic,aAAaR,SAAQ,SAACO,GACvB,IAAMiE,EAAcjE,EAAY3a,MAC1B6e,EAAOD,aAAW,EAAXA,EAAaC,KACpBC,EAAaL,EAAKC,UAAUG,GAE9BC,GAAclhB,OAAOkhB,GAAcnE,EAAY3Z,QAAQtB,MAC1C,mBAATmf,GAIAlE,EAAY3C,QAAUyG,EAAKjE,WAAasE,EAA8B,GAAjBL,EAAKjE,UACrC,GAAjBiE,EAAKjE,UACLsE,EAEJF,EAAYnhB,MAAQwa,EAAAA,EAAAA,eAAqB,GAADzZ,OAAImc,EAAY3C,UAExDyG,EAAKM,4BAA4BpE,IAEjCiE,EAAYnhB,MAAQwa,EAAAA,EAAAA,eAAqB6G,IAIpC,eAATD,GAAmD,UAA1BlE,EAAYjQ,OAAOsU,IAC5CP,EAAKvF,YAEb,GACJ,GAAC,CAAA1b,IAAA,sBAAAC,MAEO,WACCkB,KAAKic,aAAara,SAIvB5B,KAAK8b,YAAc9b,KAAKic,aAAaqE,MAAK,SAACtE,GACvC,MAAiC,UAA1BA,EAAYjQ,OAAOsU,EAC9B,IAEArgB,KAAKugB,mBAAqBvgB,KAAKic,aAAaqE,MAAK,SAACtE,GAC9C,MAAiC,cAA1BA,EAAYjQ,OAAOsU,EAC9B,IAEArgB,KAAKwgB,iBAAmBxgB,KAAKic,aAAaqE,MAAK,SAACtE,GAC5C,MAAiC,eAA1BA,EAAYjQ,OAAOsU,EAC9B,IACJ,GAAC,CAAAxhB,IAAA,uBAAAC,MAEO,WAAoB,IAAA2hB,EACH,QAAjBA,EAACzgB,KAAK8b,mBAAW,IAAA2E,GAAhBA,EAAkBpH,UAIvBrZ,KAAK6b,UAAY5c,OAAOe,KAAK8b,YAAYzC,SACzCrZ,KAAK0gB,oBAAoB1gB,KAAK6b,WAC9B7b,KAAKua,aACLva,KAAKwB,SACT,GAEA,CAAA3C,IAAA,sBAAAC,MAIQ,SAAoBgC,GAGnBd,KAAKugB,qBAQVvgB,KAAKugB,mBAAmBlH,QAAU1Z,SAAS+Z,EAAEiD,aAAaxc,UAAY,GAClEgT,KAAKwN,MAAa,GAAP7f,GACXd,KAAKugB,mBAAmBlH,QAE5BrZ,KAAKogB,4BAA4BpgB,KAAKugB,oBAC1C,GAAC,CAAA1hB,IAAA,8BAAAC,MAEO,SAA4BiN,GAAoB,IAAA6U,EACvB,QAA7BA,EAAA7U,EAAOyM,8BAAsB,IAAAoI,GAA7BA,EAA+Bpf,OAAO,CAClCR,IAAM/B,OAAOe,KAAK6b,WAClB/a,KAAM7B,OAAO8M,EAAOsN,SACpBrV,GAAM/E,OAAOe,KAAK6b,YAE1B,M,8EAndClC,CAAA,CA1DmB,E","sources":["webpack://multi-kelnik-2.0/./frontend/src/components/mortgage-calculator/utils.ts","webpack://multi-kelnik-2.0/./frontend/libs/vanilla-rangeslider-master/js/rangeslider.js","webpack://multi-kelnik-2.0/./frontend/src/components/range-slider/index.ts","webpack://multi-kelnik-2.0/./frontend/src/components/mortgage-calculator/index.ts"],"sourcesContent":["import type {IMortgageCalculator, IMortgageUtils} from './types';\r\nimport type {IRangeSliderData} from '../range-slider/types';\r\n\r\nclass MortgageUtils implements IMortgageUtils {\r\n    /**\r\n     * Проверяем примитив или объект на существование\r\n     * @param {*} data - примитив или объект\r\n     * @return {boolean} - определён ли параметр\r\n     */\r\n    public isExist(data: unknown): boolean {\r\n        return data !== null && !isNaN(Number(data)) && typeof data !== 'undefined';\r\n    }\r\n\r\n    public saveToStorage(key: string, value: number): void {\r\n        window.sessionStorage.setItem(key, value!.toString());\r\n    }\r\n\r\n    public getAccessStorage(key: string): number {\r\n        return Number(window.sessionStorage.getItem(key));\r\n    }\r\n\r\n    public removeStorage(key: string): void {\r\n        window.sessionStorage.removeItem(key);\r\n    }\r\n\r\n    /**\r\n     * Совершаем нужные вычисления для операндов\r\n     * @param {String} action - флаг, определяющий, какое действие необходимо совершить над операндами\r\n     * @param {number} a - операнд\r\n     * @param {number} b - операнд\r\n     * @return {number|string} - результат операций\r\n     */\r\n    public calc(action: string, a: number, b: number): number {\r\n        switch (action) {\r\n            case 'creditAmount':\r\n                return a - b;\r\n            case 'creditPercent':\r\n                return parseInt(((b / a) * 100).toFixed());\r\n            default:\r\n                return -Infinity;\r\n        }\r\n    }\r\n\r\n    public calcString(action: string, a: number, b: number): string {\r\n        switch (action) {\r\n            case 'creditAmountPretty':\r\n                return `${(a - b).toLocaleString('ru-Ru')}&nbsp;₽`;\r\n            case 'creditPercentPretty':\r\n                return `${((b / a) * 100).toFixed()}%`;\r\n            case 'monthlyPaymentPretty':\r\n                return `${parseInt(a.toFixed()).toLocaleString('ru-Ru')}&nbsp;₽/мес.`;\r\n            default:\r\n                return `Неверный параметр action: ${action}`;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Высчитываем сумму и процент кредита\r\n     * Если процент больше 100, выделяем его красным, а сумму кредита не выводим\r\n     * @return {object} - сумма и процент кредита\r\n     */\r\n    public calcCredit(): {amount: string, percent: string} {\r\n        const price: number = this.getAccessStorage('price[min]');\r\n        const firstPay: number = this.getAccessStorage('first-pay[min]');\r\n        const percent: string = this.calcString('creditPercentPretty', price, firstPay);\r\n        const amount: string = this.calc('creditAmount', price, firstPay) >= 0 ?\r\n            this.calcString('creditAmountPretty', price, firstPay) :\r\n            '—';\r\n\r\n        this.saveToStorage('creditAmount', this.calc('creditAmount', price, firstPay));\r\n        this.saveToStorage('creditPercent', this.calc('creditPercent', price, firstPay));\r\n\r\n        return {\r\n            amount,\r\n            percent\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Выбираем необходимое склонение постфикса\r\n     * @param {number} num - число, определяющее склонение\r\n     * @return {string} - склонение\r\n     */\r\n    public decodePostfix(num: number): string {\r\n        const postfixGod = [1, 21, 31];\r\n\r\n        return postfixGod.includes(num) ? 'года' : 'лет';\r\n    }\r\n\r\n    /**\r\n     * Проверка на наличие значений в инпуте\r\n     * @param {object} inputElement - элемент Инпута\r\n     * @param {object} data - все значения слайдера\r\n     * @param {String} regexp - регулярное выражение, исключающее всё, кроме цифр и точки\r\n     */\r\n    public checkInputData(inputElement: HTMLInputElement, data: IRangeSliderData, regexp: RegExp): void {\r\n        const newDataFrom = Number(inputElement.value.replace(regexp, ''));\r\n\r\n        data.from = newDataFrom < data.min ?\r\n            data.min :\r\n            newDataFrom > data.max ? data.max : newDataFrom;\r\n    }\r\n\r\n    /**\r\n     * Функция ограничения ввода символов с клавиатуры\r\n     * @param {Event} event - событие\r\n     */\r\n    public preventNaNSymbolsEnter(event: KeyboardEvent): void {\r\n        const functionalKeys = [8, 9, 13, 17, 18, 35, 36, 37, 39, 46];\r\n\r\n        if (!functionalKeys.includes(event.which) &&\r\n            (event.which > 57 || event.which < 48) &&\r\n            (event.which > 105 || event.which < 96) &&\r\n            (event.which > 123 || event.which < 112)) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Обработчик нажатий клавиш Tab, Enter, Escape\r\n     * Tab, Enter проверяют корректность заполнения инпута, обновляют слайдеры и значения банков\r\n     * @param {KeyboardEvent} event - событие\r\n     * @param {object} data - все значения слайдера\r\n     * @param {object} obj - экземпляр HTB для текущего ползунка\r\n     * @param {object} input - активный DOM элемент input\r\n     * @param {String} regexp - регулярное выражение, исключающее всё, кроме цифр и точки\r\n     */\r\n    // eslint-disable-next-line max-params\r\n    public onKeyDownEvent(event: KeyboardEvent,\r\n                          data: IRangeSliderData,\r\n                          obj: IMortgageCalculator,\r\n                          input: HTMLInputElement,\r\n                          regexp: RegExp): void {\r\n        switch (event.which) {\r\n            case 13:\r\n                this.checkInputData(input, data, regexp);\r\n                obj.updateSlidersValues(data, 'set');\r\n                obj.update();\r\n                input.blur();\r\n                break;\r\n            case 27:\r\n                input.blur();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    public getQueryData(): Record<string, string> | false {\r\n        if (!window.location.search.length) {\r\n            return false;\r\n        }\r\n\r\n        const queryLine = window.location.search.replace('?', '')\r\n            .split('&')\r\n            .reduce((acc: Record<string, string>, value: string) => {\r\n                const param = value.split('=');\r\n\r\n                acc[decodeURIComponent(String(param[0]))] = decodeURIComponent(String(param[1]));\r\n\r\n                return acc;\r\n            },\r\n            {});\r\n\r\n        return queryLine;\r\n    }\r\n}\r\n\r\nexport default MortgageUtils;\r\n","const IonRangeSlider = function (element, initOptions= {}) {\r\n    let input = element;\r\n    let options = initOptions;\r\n    let calc_count = 0;\r\n    let update_tm = 0;\r\n    let old_from = 0;\r\n    let old_to = 0;\r\n    let old_min_interval = null;\r\n    let raf_id = null;\r\n    let dragging = false;\r\n    let force_redraw = false;\r\n    let no_diapason = false;\r\n    let has_tab_index = true;\r\n    let is_key = false;\r\n    let is_update = false;\r\n    let is_start = true;\r\n    let is_finish = false;\r\n    let is_active = false;\r\n    let is_resize = false;\r\n    let is_click = false;\r\n\r\n    let target = \"base\";\r\n\r\n    // cache for links to all DOM elements\r\n    const cache = {\r\n        win: window,\r\n        body: document.body,\r\n        input: input,\r\n        cont: null,\r\n        rs: null,\r\n        min: null,\r\n        max: null,\r\n        from: null,\r\n        to: null,\r\n        single: null,\r\n        bar: null,\r\n        line: null,\r\n        s_single: null,\r\n        s_from: null,\r\n        s_to: null,\r\n        shad_single: null,\r\n        shad_from: null,\r\n        shad_to: null,\r\n        edge: null,\r\n        grid: null,\r\n        grid_labels: []\r\n    };\r\n\r\n    // storage for measure variables\r\n    const coords = {\r\n        // left\r\n        x_gap: 0,\r\n        x_pointer: 0,\r\n\r\n        // width\r\n        w_rs: 0,\r\n        w_rs_old: 0,\r\n        w_handle: 0,\r\n\r\n        // percents\r\n        p_gap: 0,\r\n        p_gap_left: 0,\r\n        p_gap_right: 0,\r\n        p_step: 0,\r\n        p_pointer: 0,\r\n        p_handle: 0,\r\n        p_single_fake: 0,\r\n        p_single_real: 0,\r\n        p_from_fake: 0,\r\n        p_from_real: 0,\r\n        p_to_fake: 0,\r\n        p_to_real: 0,\r\n        p_bar_x: 0,\r\n        p_bar_w: 0,\r\n\r\n        // grid\r\n        grid_gap: 0,\r\n        big_num: 0,\r\n        big: [],\r\n        big_w: [],\r\n        big_p: [],\r\n        big_x: []\r\n    };\r\n\r\n    // storage for labels measure variables\r\n    const labels = {\r\n        // width\r\n        w_min: 0,\r\n        w_max: 0,\r\n        w_from: 0,\r\n        w_to: 0,\r\n        w_single: 0,\r\n\r\n        // percents\r\n        p_min: 0,\r\n        p_max: 0,\r\n        p_from_fake: 0,\r\n        p_from_left: 0,\r\n        p_to_fake: 0,\r\n        p_to_left: 0,\r\n        p_single_fake: 0,\r\n        p_single_left: 0\r\n    };\r\n\r\n    // default config\r\n    const config = {\r\n        skin: \"flat\",\r\n        type: \"single\",\r\n\r\n        min: 10,\r\n        max: 100,\r\n        from: null,\r\n        to: null,\r\n        step: 1,\r\n\r\n        min_interval: 0,\r\n        max_interval: 0,\r\n        drag_interval: false,\r\n\r\n        values: [],\r\n        p_values: [],\r\n\r\n        from_fixed: false,\r\n        from_min: null,\r\n        from_max: null,\r\n        from_shadow: false,\r\n\r\n        to_fixed: false,\r\n        to_min: null,\r\n        to_max: null,\r\n        to_shadow: false,\r\n\r\n        prettify_enabled: true,\r\n        prettify_separator: \" \",\r\n        prettify: null,\r\n\r\n        force_edges: false,\r\n\r\n        keyboard: true,\r\n\r\n        grid: false,\r\n        grid_margin: true,\r\n        grid_num: 4,\r\n        grid_snap: false,\r\n\r\n        hide_min_max: false,\r\n        hide_from_to: false,\r\n\r\n        prefix: \"\",\r\n        postfix: \"\",\r\n        max_postfix: \"\",\r\n        decorate_both: true,\r\n        values_separator: \" — \",\r\n\r\n        input_values_separator: \";\",\r\n\r\n        disable: false,\r\n        block: false,\r\n\r\n        extra_classes: \"\",\r\n\r\n        scope: null,\r\n        onStart: null,\r\n        onChange: null,\r\n        onFinish: null,\r\n        onUpdate: null\r\n    };\r\n\r\n\r\n    // check if base element is input\r\n    if (input.nodeName !== \"INPUT\") {\r\n        console && console.warn && console.warn(\"Base element should be <input>!\", input);\r\n    }\r\n\r\n    // config from data-attributes extends js config\r\n    const config_from_data = {\r\n        skin: input.dataset.skin,\r\n        type: input.dataset.type,\r\n\r\n        min: input.dataset.min,\r\n        max: input.dataset.max,\r\n        from: input.dataset.from,\r\n        to: input.dataset.to,\r\n        step: input.dataset.step,\r\n\r\n        min_interval: input.dataset.minInterval,\r\n        max_interval: input.dataset.maxInterval,\r\n        drag_interval: input.dataset.dragInterval,\r\n\r\n        values: input.dataset.values,\r\n\r\n        from_fixed: input.dataset.fromFixed,\r\n        from_min: input.dataset.fromMin,\r\n        from_max: input.dataset.fromMax,\r\n        from_shadow: input.dataset.fromShadow,\r\n\r\n        to_fixed: input.dataset.toFixed,\r\n        to_min: input.dataset.toMin,\r\n        to_max: input.dataset.toMax,\r\n        to_shadow: input.dataset.toShadow,\r\n\r\n        prettify_enabled: input.dataset.prettifyEnabled,\r\n        prettify_separator: input.dataset.prettifySeparator,\r\n\r\n        force_edges: input.dataset.forceEdges,\r\n\r\n        keyboard: input.dataset.keyboard,\r\n\r\n        grid: input.dataset.grid,\r\n        grid_margin: input.dataset.gridMargin,\r\n        grid_num: input.dataset.gridNum,\r\n        grid_snap: input.dataset.gridSnap,\r\n\r\n        hide_min_max: input.dataset.hideMinMax,\r\n        hide_from_to: input.dataset.hideFromTo,\r\n\r\n        prefix: input.dataset.prefix,\r\n        postfix: input.dataset.postfix,\r\n        max_postfix: input.dataset.maxPostfix,\r\n        decorate_both: input.dataset.decorateBoth,\r\n        values_separator: input.dataset.valuesSeparator,\r\n\r\n        input_values_separator: input.dataset.inputValuesSeparator,\r\n\r\n        disable: input.dataset.disable,\r\n        block: input.dataset.block,\r\n\r\n        extra_classes: input.dataset.extraClasses,\r\n    };\r\n\r\n    config_from_data.values = config_from_data.values && config_from_data.values.split(\",\");\r\n\r\n    for (let prop in config_from_data) {\r\n        if (config_from_data.hasOwnProperty(prop)) {\r\n            if (config_from_data[prop] === undefined || config_from_data[prop] === \"\") {\r\n                delete config_from_data[prop];\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // input value extends default config\r\n    let val = input.value;\r\n    if (val !== undefined && val !== \"\") {\r\n        val = val.split(config_from_data.input_values_separator || options.input_values_separator || \";\");\r\n\r\n        if (val[0] && val[0] == +val[0]) {\r\n            val[0] = +val[0];\r\n        }\r\n        if (val[1] && val[1] == +val[1]) {\r\n            val[1] = +val[1];\r\n        }\r\n\r\n        if (options && options.values && options.values.length) {\r\n            config.from = val[0] && options.values.indexOf(val[0]);\r\n            config.to = val[1] && options.values.indexOf(val[1]);\r\n        } else {\r\n            config.from = val[0] && +val[0];\r\n            config.to = val[1] && +val[1];\r\n        }\r\n    }\r\n\r\n    // js config extends default config\r\n    Object.assign(config, options);\r\n\r\n    // data config extends config\r\n    Object.assign(config, config_from_data);\r\n    options = config;\r\n\r\n    let update_check = {};\r\n\r\n    // default result object, returned to callbacks\r\n    const result = {\r\n        input: cache.input,\r\n        slider: null,\r\n\r\n        min: options.min,\r\n        max: options.max,\r\n\r\n        from: options.from,\r\n        from_percent: 0,\r\n        from_value: null,\r\n\r\n        to: options.to,\r\n        to_percent: 0,\r\n        to_value: null\r\n    };\r\n\r\n    // HTML Templates\r\n    const base_html =\r\n        '<span class=\"irs\">' +\r\n        '<span class=\"irs-line\" tabindex=\"0\"></span>' +\r\n        '<span class=\"irs-min\">0</span><span class=\"irs-max\">1</span>' +\r\n        '<span class=\"irs-from\">0</span><span class=\"irs-to\">0</span><span class=\"irs-single\">0</span>' +\r\n        '</span>' +\r\n        '<span class=\"irs-grid\">1</span>';\r\n\r\n    const single_html =\r\n        '<span class=\"irs-bar irs-bar--single\"></span>' +\r\n        '<span class=\"irs-shadow shadow-single\"></span>' +\r\n        '<span class=\"irs-handle single\"><i></i><i></i><i></i></span>';\r\n\r\n    const double_html =\r\n        '<span class=\"irs-bar\"></span>' +\r\n        '<span class=\"irs-shadow shadow-from\"></span>' +\r\n        '<span class=\"irs-shadow shadow-to\"></span>' +\r\n        '<span class=\"irs-handle from\"><i></i><i></i><i></i></span>' +\r\n        '<span class=\"irs-handle to\"><i></i><i></i><i></i></span>';\r\n\r\n    const disable_html =\r\n        '<span class=\"irs-disable-mask\"></span>';\r\n\r\n    const init = function (is_update) {\r\n        no_diapason = false;\r\n        coords.p_step = convertToPercent(options.step, true);\r\n\r\n        target = \"base\";\r\n\r\n        toggleInput();\r\n        append();\r\n        setMinMax();\r\n\r\n        if (is_update) {\r\n            force_redraw = true;\r\n            calc(true);\r\n\r\n            // callbacks called\r\n            callOnUpdate();\r\n        } else {\r\n            force_redraw = true;\r\n            calc(true);\r\n\r\n            // callbacks called\r\n            callOnStart();\r\n\r\n        }\r\n\r\n        updateScene();\r\n    };\r\n\r\n\r\n    /**\r\n     * Appends slider template to a DOM\r\n     */\r\n    const append = function () {\r\n        const container_html = '<span class=\"irs irs--' + options.skin + ' ' + options.extra_classes + '\"></span>';\r\n        cache.input.insertAdjacentHTML('beforebegin', container_html);\r\n        cache.input.setAttribute(\"readonly\", \"true\");\r\n        cache.cont = cache.input.previousElementSibling;\r\n        result.slider = cache.cont;\r\n\r\n        cache.cont.innerHTML = base_html;\r\n        cache.rs = cache.cont.querySelector(\".irs\");\r\n        cache.min = cache.cont.querySelector(\".irs-min\");\r\n        cache.max = cache.cont.querySelector(\".irs-max\");\r\n        cache.from = cache.cont.querySelector(\".irs-from\");\r\n        cache.to = cache.cont.querySelector(\".irs-to\");\r\n        cache.single = cache.cont.querySelector(\".irs-single\");\r\n        cache.line = cache.cont.querySelector(\".irs-line\");\r\n        cache.grid = cache.cont.querySelector(\".irs-grid\");\r\n\r\n        if (options.type === \"single\") {\r\n            cache.cont.insertAdjacentHTML('beforeend', single_html);\r\n            cache.bar = cache.cont.querySelector(\".irs-bar\");\r\n            cache.edge = cache.cont.querySelector(\".irs-bar--single\");\r\n            cache.s_single = cache.cont.querySelector(\".single\");\r\n            cache.from.style.visibility = \"hidden\";\r\n            cache.to.style.visibility = \"hidden\";\r\n            cache.shad_single = cache.cont.querySelector(\".shadow-single\");\r\n        } else {\r\n            cache.cont.insertAdjacentHTML('beforeend', double_html);\r\n            cache.bar = cache.cont.querySelector(\".irs-bar\");\r\n            cache.s_from = cache.cont.querySelector(\".from\");\r\n            cache.s_to = cache.cont.querySelector(\".to\");\r\n            cache.shad_from = cache.cont.querySelector(\".shadow-from\");\r\n            cache.shad_to = cache.cont.querySelector(\".shadow-to\");\r\n\r\n            setTopHandler();\r\n        }\r\n\r\n        if (options.hide_from_to) {\r\n            cache.from.style.display = \"none\";\r\n            cache.to.style.display = \"none\";\r\n            cache.single.style.display = \"none\";\r\n        }\r\n\r\n        appendGrid();\r\n\r\n        if (options.disable) {\r\n            appendDisableMask();\r\n            cache.input.disabled = true;\r\n        } else {\r\n            cache.input.disabled = false;\r\n            removeDisableMask();\r\n            bindEvents();\r\n        }\r\n\r\n        // block only if not disabled\r\n        if (!options.disable) {\r\n            if (options.block) {\r\n                appendDisableMask();\r\n            } else {\r\n                removeDisableMask();\r\n            }\r\n        }\r\n\r\n        if (options.drag_interval) {\r\n            cache.bar.style.cursor = \"ew-resize\";\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Determine which handler has a priority (works only for double slider type)\r\n     */\r\n    const setTopHandler = function () {\r\n        const min = options.min,\r\n            max = options.max,\r\n            from = options.from,\r\n            to = options.to;\r\n\r\n        if (from > min && to === max) {\r\n            cache.s_from.classList.add(\"type_last\");\r\n        } else if (to < max) {\r\n            cache.s_to.classList.add(\"type_last\");\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Determine which handles was clicked last and which handler should have hover effect\r\n     *\r\n     * @param target {String}\r\n     */\r\n    const changeLevel = function (target) {\r\n        switch (target) {\r\n            case \"single\":\r\n                coords.p_gap = toFixed(coords.p_pointer - coords.p_single_fake);\r\n                cache.s_single.classList.add(\"state_hover\");\r\n                break;\r\n            case \"from\":\r\n                coords.p_gap = toFixed(coords.p_pointer - coords.p_from_fake);\r\n                cache.s_from.classList.add(\"state_hover\", \"type_last\");\r\n                cache.s_to.classList.remove(\"type_last\");\r\n                break;\r\n            case \"to\":\r\n                coords.p_gap = toFixed(coords.p_pointer - coords.p_to_fake);\r\n                cache.s_to.classList.add(\"state_hover\", \"type_last\");\r\n                cache.s_from.classList.remove(\"type_last\");\r\n                break;\r\n            case \"both\":\r\n                coords.p_gap_left = toFixed(coords.p_pointer - coords.p_from_fake);\r\n                coords.p_gap_right = toFixed(coords.p_to_fake - coords.p_pointer);\r\n                cache.s_to.classList.remove(\"type_last\");\r\n                cache.s_from.classList.remove(\"type_last\");\r\n                break;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Then slider is disabled -> append extra layer with opacity\r\n     */\r\n    const appendDisableMask = function () {\r\n        cache.cont.insertAdjacentHTML('beforeend', disable_html);\r\n        cache.cont.classList.add(\"irs-disabled\");\r\n    };\r\n\r\n    /**\r\n     * Then slider is not disabled -> remove disable mask\r\n     */\r\n    const removeDisableMask = function () {\r\n        cache.cont.classList.remove(\".irs-disable-mask\");\r\n        cache.cont.classList.remove(\"irs-disabled\");\r\n    };\r\n\r\n    /**\r\n     * Remove slider instance and unbind all events\r\n     */\r\n    const remove = function () {\r\n        cache.cont.remove();\r\n        cache.cont = null;\r\n\r\n        cache.win.removeEventListener(\"keydown\", key.bind(this, 'keyboard'));\r\n        cache.body.removeEventListener(\"touchmove\", pointerMove.bind(this));\r\n        cache.body.removeEventListener(\"mousemove\", pointerMove.bind(this));\r\n        cache.win.removeEventListener(\"touchend\", pointerUp.bind(this));\r\n        cache.win.removeEventListener(\"mouseup\", pointerUp.bind(this));\r\n\r\n        cache.grid_labels = [];\r\n        coords.big = [];\r\n        coords.big_w = [];\r\n        coords.big_p = [];\r\n        coords.big_x = [];\r\n\r\n        cancelAnimationFrame(raf_id);\r\n    };\r\n\r\n    /**\r\n     * bind all slider events\r\n     */\r\n    const bindEvents = function () {\r\n        if (no_diapason) {\r\n            return;\r\n        }\r\n        cache.body.addEventListener('touchmove', pointerMove.bind(this));\r\n        cache.body.addEventListener('mousemove', pointerMove.bind(this));\r\n\r\n        cache.win.addEventListener('touchend', pointerUp.bind(this));\r\n        cache.win.addEventListener('mouseup', pointerUp.bind(this));\r\n\r\n        cache.line.addEventListener('touchstart', pointerClick.bind(this, 'click'), {passive: true});\r\n        cache.line.addEventListener('mousedown', pointerClick.bind(this, 'click'));\r\n        cache.line.addEventListener('focus', pointerFocus.bind(this));\r\n\r\n        if (options.drag_interval && options.type === \"double\") {\r\n            cache.bar.addEventListener('touchstart', pointerDown.bind(this, 'both'), {passive: true});\r\n            cache.bar.addEventListener('mousedown', pointerDown.bind(this, 'both'));\r\n        } else {\r\n            cache.bar.addEventListener('touchstart', pointerClick.bind(this, 'click'), {passive: true});\r\n            cache.bar.addEventListener('mousedown', pointerClick.bind(this, 'click'));\r\n        }\r\n\r\n        if (options.type === \"single\") {\r\n            cache.single.addEventListener('touchstart', pointerDown.bind(this, 'single'), {passive: true});\r\n            cache.s_single.addEventListener('touchstart', pointerDown.bind(this, 'single'), {passive: true});\r\n            cache.shad_single.addEventListener('touchstart', pointerClick.bind(this, 'click'), {passive: true});\r\n\r\n            cache.single.addEventListener('mousedown', pointerDown.bind(this, 'single'));\r\n            cache.s_single.addEventListener('mousedown', pointerDown.bind(this, 'single'));\r\n            cache.edge.addEventListener('mousedown', pointerClick.bind(this, 'click'));\r\n            cache.shad_single.addEventListener('touchstart', pointerClick.bind(this, 'click'), {passive: true});\r\n        } else {\r\n            cache.single.addEventListener('touchstart', pointerDown.bind(this, null), {passive: true});\r\n            cache.single.addEventListener('mousedown', pointerDown.bind(this, null));\r\n\r\n            cache.from.addEventListener('touchstart', pointerDown.bind(this, 'from'), {passive: true});\r\n            cache.s_from.addEventListener('touchstart', pointerDown.bind(this, 'from'), {passive: true});\r\n            cache.to.addEventListener('touchstart', pointerDown.bind(this, 'to'), {passive: true});\r\n            cache.s_to.addEventListener('touchstart', pointerDown.bind(this, 'to'), {passive: true});\r\n            cache.shad_from.addEventListener('touchstart', pointerClick.bind(this, 'click'), {passive: true});\r\n            cache.shad_to.addEventListener('touchstart', pointerClick.bind(this, 'click'), {passive: true});\r\n\r\n            cache.from.addEventListener('mousedown', pointerDown.bind(this, 'from'));\r\n            cache.s_from.addEventListener('mousedown', pointerDown.bind(this, 'from'));\r\n            cache.to.addEventListener('mousedown', pointerDown.bind(this, 'to'));\r\n            cache.s_to.addEventListener('mousedown', pointerDown.bind(this, 'to'));\r\n            cache.shad_from.addEventListener('mousedown', pointerClick.bind(this, 'click'));\r\n            cache.shad_to.addEventListener('mousedown', pointerClick.bind(this, 'click'));\r\n        }\r\n\r\n        if (options.keyboard) {\r\n            cache.line.addEventListener('keydown', key.bind(this, 'keyboard'));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Focus with tabIndex\r\n     *\r\n     * @param e {Object} event object\r\n     */\r\n    const pointerFocus = function (e) {\r\n        if (!target) {\r\n            let x, $handle;\r\n\r\n            if (options.type === \"single\") {\r\n                $handle = cache.single;\r\n            } else {\r\n                $handle = cache.from;\r\n            }\r\n\r\n            x = $handle.getBoundingClientRect().left;\r\n            x += ($handle.getBoundingClientRect().width / 2) - 1;\r\n            pointerClick(\"single\", {preventDefault: function () {}, pageX: x});\r\n        } else {\r\n            cache.line.focus();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Mousemove or touchmove (only for handlers)\r\n     *\r\n     * @param e {Object} event object\r\n     */\r\n    const pointerMove = function (e) {\r\n        if (!dragging) {\r\n            return;\r\n        }\r\n\r\n        const x = e.pageX || e?.touches[0]?.pageX; // TODO\r\n        coords.x_pointer = x - coords.x_gap;\r\n        calc();\r\n    };\r\n\r\n    /**\r\n     * Mouseup or touchend\r\n     * only for handlers\r\n     *\r\n     * @param e {Object} event object\r\n     */\r\n    const pointerUp = function (e) {\r\n        if (is_active) {\r\n            is_active = false;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        const hoverState = cache.cont.querySelector(\".state_hover\");\r\n\r\n        if (hoverState) {\r\n            hoverState.classList.remove(\"state_hover\");\r\n        }\r\n\r\n        force_redraw = true;\r\n\r\n        updateScene();\r\n        restoreOriginalMinInterval();\r\n        // callbacks call\r\n        if (cache.cont.contains(e.target) || dragging) {\r\n            callOnFinish();\r\n        }\r\n\r\n        dragging = false;\r\n    };\r\n\r\n    /**\r\n     * Mousedown or touchstart\r\n     * only for handlers\r\n     *\r\n     * @param destination {String|null}\r\n     * @param event {Object} event object\r\n     */\r\n    const pointerDown = function(destination, event) {\r\n        if (event.type !== 'touchstart') {\r\n            event.preventDefault();\r\n        }\r\n\r\n        const x = event.pageX || event?.touches[0].pageX; // TODO??\r\n\r\n        if (event.button === 2) {\r\n            return;\r\n        }\r\n\r\n        if (destination === 'both') {\r\n            setTempMinInterval();\r\n        }\r\n\r\n        if (!destination) {\r\n            destination = target || 'from';\r\n        }\r\n\r\n        target = destination;\r\n\r\n        is_active = true;\r\n        dragging = true;\r\n\r\n        coords.x_gap = cache.rs.getBoundingClientRect().left;\r\n        coords.x_pointer = x - coords.x_gap;\r\n\r\n        calcPointerPercent();\r\n        changeLevel(destination);\r\n\r\n        cache.line.dispatchEvent(new Event('focus'));\r\n\r\n        updateScene();\r\n    };\r\n\r\n    /**\r\n     * Mousedown or touchstart\r\n     * for other slider elements, like diapason line\r\n     *\r\n     * @param destination {String}\r\n     * @param e {Object} event object\r\n     */\r\n    const pointerClick = function(destination, e) {\r\n        e.preventDefault();\r\n        const x = e.pageX || e?.touches[0].pageX; // TODO\r\n        if (e.button === 2) {\r\n            return;\r\n        }\r\n\r\n        target = destination;\r\n\r\n        is_click = true;\r\n        coords.x_gap = cache.rs.getBoundingClientRect().left;\r\n        coords.x_pointer = +(x - coords.x_gap).toFixed();\r\n\r\n        force_redraw = true;\r\n        calc();\r\n\r\n        cache.line.dispatchEvent(new Event(\"focus\"));\r\n    };\r\n\r\n    /**\r\n     * Keyboard controls for focused slider\r\n     *\r\n     * @param destination {String}\r\n     * @param e {Object} event object\r\n     * @returns {boolean|undefined}\r\n     */\r\n    const key = function (destination, e) {\r\n        if (e.altKey || e.ctrlKey || e.shiftKey || e.metaKey) {\r\n            return;\r\n        }\r\n\r\n        switch (e.which) {\r\n            case 83: // W\r\n            case 65: // A\r\n            case 40: // DOWN\r\n            case 37: // LEFT\r\n                e.preventDefault();\r\n                moveByKey(false);\r\n                break;\r\n\r\n            case 87: // S\r\n            case 68: // D\r\n            case 38: // UP\r\n            case 39: // RIGHT\r\n                e.preventDefault();\r\n                moveByKey(true);\r\n                break;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Move by key\r\n     *\r\n     * @param right {boolean} direction to move\r\n     */\r\n    const moveByKey = function (right) {\r\n        let p = coords.p_pointer;\r\n        const p_step = options.step / ((options.max - options.min) / 100);\r\n\r\n        right ? p += p_step : p -= p_step;\r\n\r\n        coords.x_pointer = toFixed(coords.w_rs / 100 * p);\r\n        is_key = true;\r\n        calc();\r\n    };\r\n\r\n    /**\r\n     * Set visibility and content\r\n     * of Min and Max labels\r\n     */\r\n    const setMinMax = function () {\r\n        if (!options) {\r\n            return;\r\n        }\r\n\r\n        if (options.hide_min_max) {\r\n            cache.min.style.display = \"none\";\r\n            cache.max.style.display = \"none\";\r\n            return;\r\n        }\r\n\r\n        if (options.values.length) {\r\n            cache.min.innerHTML = decorate(options.p_values[options.min]);\r\n            cache.max.innerHTML = decorate(options.p_values[options.max]);\r\n        } else {\r\n            const min_pretty = _prettify(options.min);\r\n            const max_pretty = _prettify(options.max);\r\n\r\n            result.min_pretty = min_pretty;\r\n            result.max_pretty = max_pretty;\r\n\r\n            cache.min.innerHTML = decorate(min_pretty, options.min);\r\n            cache.max.innerHTML = decorate(max_pretty, options.max);\r\n        }\r\n\r\n        labels.w_min = cache.min.offsetWidth;\r\n        labels.w_max = cache.max.offsetWidth;\r\n    };\r\n\r\n    /**\r\n     * Then dragging interval, prevent interval collapsing\r\n     * using min_interval option\r\n     */\r\n    const setTempMinInterval = function () {\r\n        const interval = result.to - result.from;\r\n\r\n        if (old_min_interval === null) {\r\n            old_min_interval = options.min_interval;\r\n        }\r\n\r\n        options.min_interval = interval;\r\n    };\r\n\r\n    const restoreOriginalMinInterval = function () {\r\n        if (old_min_interval !== null) {\r\n            options.min_interval = old_min_interval;\r\n            old_min_interval = null;\r\n        }\r\n    };\r\n\r\n\r\n    // Calculations\r\n\r\n    /**\r\n     * All calculations and measures start here\r\n     *\r\n     * @param update {boolean=}\r\n     */\r\n    const calc = function (update) {\r\n        if (!options) {\r\n            return;\r\n        }\r\n\r\n        calc_count++;\r\n\r\n        if (calc_count === 10 || update) {\r\n            calc_count = 0;\r\n            coords.w_rs = cache.rs.offsetWidth;\r\n\r\n            calcHandlePercent();\r\n        }\r\n\r\n        if (!coords.w_rs) {\r\n            return;\r\n        }\r\n\r\n        calcPointerPercent();\r\n        let handle_x = getHandleX();\r\n\r\n\r\n        if (target === \"both\") {\r\n            coords.p_gap = 0;\r\n            handle_x = getHandleX();\r\n        }\r\n\r\n        if (target === \"click\") {\r\n            coords.p_gap = coords.p_handle / 2;\r\n            handle_x = getHandleX();\r\n\r\n            if (options.drag_interval) {\r\n                target = \"both_one\";\r\n            } else {\r\n                target = chooseHandle(handle_x);\r\n            }\r\n        }\r\n\r\n        switch (target) {\r\n            case \"base\":\r\n                const w = (options.max - options.min) / 100,\r\n                    f = (result.from - options.min) / w,\r\n                    t = (result.to - options.min) / w;\r\n\r\n                coords.p_single_real = toFixed(f);\r\n                coords.p_from_real = toFixed(f);\r\n                coords.p_to_real = toFixed(t);\r\n\r\n                coords.p_single_real = checkDiapason(coords.p_single_real, options.from_min, options.from_max);\r\n                coords.p_from_real = checkDiapason(coords.p_from_real, options.from_min, options.from_max);\r\n                coords.p_to_real = checkDiapason(coords.p_to_real, options.to_min, options.to_max);\r\n\r\n                coords.p_single_fake = convertToFakePercent(coords.p_single_real);\r\n                coords.p_from_fake = convertToFakePercent(coords.p_from_real);\r\n                coords.p_to_fake = convertToFakePercent(coords.p_to_real);\r\n\r\n                target = null;\r\n\r\n                break;\r\n\r\n            case \"single\":\r\n                if (options.from_fixed) {\r\n                    break;\r\n                }\r\n\r\n                coords.p_single_real = convertToRealPercent(handle_x);\r\n                coords.p_single_real = calcWithStep(coords.p_single_real);\r\n                coords.p_single_real = checkDiapason(coords.p_single_real, options.from_min, options.from_max);\r\n\r\n                coords.p_single_fake = convertToFakePercent(coords.p_single_real);\r\n\r\n                break;\r\n\r\n            case \"from\":\r\n                if (options.from_fixed) {\r\n                    break;\r\n                }\r\n\r\n                coords.p_from_real = convertToRealPercent(handle_x);\r\n                coords.p_from_real = calcWithStep(coords.p_from_real);\r\n                if (coords.p_from_real > coords.p_to_real) {\r\n                    coords.p_from_real = coords.p_to_real;\r\n                }\r\n                coords.p_from_real = checkDiapason(coords.p_from_real, options.from_min, options.from_max);\r\n                coords.p_from_real = checkMinInterval(coords.p_from_real, coords.p_to_real, \"from\");\r\n                coords.p_from_real = checkMaxInterval(coords.p_from_real, coords.p_to_real, \"from\");\r\n\r\n                coords.p_from_fake = convertToFakePercent(coords.p_from_real);\r\n\r\n                break;\r\n\r\n            case \"to\":\r\n                if (options.to_fixed) {\r\n                    break;\r\n                }\r\n\r\n                coords.p_to_real = convertToRealPercent(handle_x);\r\n                coords.p_to_real = calcWithStep(coords.p_to_real);\r\n                if (coords.p_to_real < coords.p_from_real) {\r\n                    coords.p_to_real = coords.p_from_real;\r\n                }\r\n                coords.p_to_real = checkDiapason(coords.p_to_real, options.to_min, options.to_max);\r\n                coords.p_to_real = checkMinInterval(coords.p_to_real, coords.p_from_real, \"to\");\r\n                coords.p_to_real = checkMaxInterval(coords.p_to_real, coords.p_from_real, \"to\");\r\n\r\n                coords.p_to_fake = convertToFakePercent(coords.p_to_real);\r\n\r\n                break;\r\n\r\n            case \"both\":\r\n                if (options.from_fixed || options.to_fixed) {\r\n                    break;\r\n                }\r\n\r\n                handle_x = toFixed(handle_x + (coords.p_handle * 0.001));\r\n\r\n                coords.p_from_real = convertToRealPercent(handle_x) - coords.p_gap_left;\r\n                coords.p_from_real = calcWithStep(coords.p_from_real);\r\n                coords.p_from_real = checkDiapason(coords.p_from_real, options.from_min, options.from_max);\r\n                coords.p_from_real = checkMinInterval(coords.p_from_real, coords.p_to_real, \"from\");\r\n                coords.p_from_fake = convertToFakePercent(coords.p_from_real);\r\n\r\n                coords.p_to_real = convertToRealPercent(handle_x) + coords.p_gap_right;\r\n                coords.p_to_real = calcWithStep(coords.p_to_real);\r\n                coords.p_to_real = checkDiapason(coords.p_to_real, options.to_min, options.to_max);\r\n                coords.p_to_real = checkMinInterval(coords.p_to_real, coords.p_from_real, \"to\");\r\n                coords.p_to_fake = convertToFakePercent(coords.p_to_real);\r\n\r\n                break;\r\n\r\n            case \"both_one\":\r\n                if (options.from_fixed || options.to_fixed) {\r\n                    break;\r\n                }\r\n\r\n                const real_x = convertToRealPercent(handle_x),\r\n                    from = result.from_percent,\r\n                    to = result.to_percent,\r\n                    full = to - from,\r\n                    half = full / 2;\r\n                let new_from = real_x - half,\r\n                    new_to = real_x + half;\r\n\r\n                if (new_from < 0) {\r\n                    new_from = 0;\r\n                    new_to = new_from + full;\r\n                }\r\n\r\n                if (new_to > 100) {\r\n                    new_to = 100;\r\n                    new_from = new_to - full;\r\n                }\r\n\r\n                coords.p_from_real = calcWithStep(new_from);\r\n                coords.p_from_real = checkDiapason(coords.p_from_real, options.from_min, options.from_max);\r\n                coords.p_from_fake = convertToFakePercent(coords.p_from_real);\r\n\r\n                coords.p_to_real = calcWithStep(new_to);\r\n                coords.p_to_real = checkDiapason(coords.p_to_real, options.to_min, options.to_max);\r\n                coords.p_to_fake = convertToFakePercent(coords.p_to_real);\r\n\r\n                break;\r\n        }\r\n\r\n        if (options.type === \"single\") {\r\n            coords.p_bar_x = (coords.p_handle / 2);\r\n            coords.p_bar_w = coords.p_single_fake;\r\n\r\n            result.from_percent = coords.p_single_real;\r\n            result.from = convertToValue(coords.p_single_real);\r\n            result.from_pretty = _prettify(result.from);\r\n\r\n            if (options.values.length) {\r\n                result.from_value = options.values[result.from];\r\n            }\r\n        } else {\r\n            coords.p_bar_x = toFixed(coords.p_from_fake + (coords.p_handle / 2));\r\n            coords.p_bar_w = toFixed(coords.p_to_fake - coords.p_from_fake);\r\n            result.from_percent = coords.p_from_real;\r\n            result.from = convertToValue(coords.p_from_real);\r\n            result.from_pretty = _prettify(result.from);\r\n            result.to_percent = coords.p_to_real;\r\n            result.to = convertToValue(coords.p_to_real);\r\n            result.to_pretty = _prettify(result.to);\r\n\r\n            if (options.values.length) {\r\n                result.from_value = options.values[result.from];\r\n                result.to_value = options.values[result.to];\r\n            }\r\n        }\r\n\r\n        calcMinMax();\r\n        calcLabels();\r\n    };\r\n\r\n\r\n    /**\r\n     * calculates pointer X in percent\r\n     */\r\n    const calcPointerPercent = function () {\r\n        if (!coords.w_rs) {\r\n            coords.p_pointer = 0;\r\n            return;\r\n        }\r\n\r\n        if (coords.x_pointer < 0 || isNaN(coords.x_pointer)) {\r\n            coords.x_pointer = 0;\r\n        } else if (coords.x_pointer > coords.w_rs) {\r\n            coords.x_pointer = coords.w_rs;\r\n        }\r\n\r\n        coords.p_pointer = toFixed(coords.x_pointer / coords.w_rs * 100);\r\n    };\r\n\r\n    // TODO refactor next 2 functions\r\n    const convertToRealPercent = function (fake) {\r\n        const full = 100 - coords.p_handle;\r\n        return fake / full * 100;\r\n    };\r\n\r\n    const convertToFakePercent = function (real) {\r\n        const full = 100 - coords.p_handle;\r\n        return real / 100 * full;\r\n    };\r\n\r\n    const getHandleX = function () {\r\n        const max = 100 - coords.p_handle;\r\n        let x = toFixed(coords.p_pointer - coords.p_gap);\r\n\r\n        if (x < 0) {\r\n            x = 0;\r\n        } else if (x > max) {\r\n            x = max;\r\n        }\r\n\r\n        return x;\r\n    };\r\n\r\n    const calcHandlePercent = function () {\r\n        if (options.type === \"single\") {\r\n            coords.w_handle = cache.s_single.offsetWidth;\r\n        } else {\r\n            coords.w_handle = cache.s_from.offsetWidth;\r\n        }\r\n\r\n        coords.p_handle = toFixed(coords.w_handle / coords.w_rs * 100);\r\n    };\r\n\r\n    /**\r\n     * Find closest handle to pointer click\r\n     *\r\n     * @param real_x {Number}\r\n     * @returns {String}\r\n     */\r\n    const chooseHandle = function (real_x) {\r\n        if (options.type === \"single\") {\r\n            return \"single\";\r\n        } else {\r\n            const m_point = coords.p_from_real + ((coords.p_to_real - coords.p_from_real) / 2);\r\n            if (real_x >= m_point) {\r\n                return options.to_fixed ? \"from\" : \"to\";\r\n            } else {\r\n                return options.from_fixed ? \"to\" : \"from\";\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Measure Min and Max labels width in percent\r\n     */\r\n    const calcMinMax = function () {\r\n        if (!coords.w_rs) {\r\n            return;\r\n        }\r\n\r\n        labels.p_min = labels.w_min / coords.w_rs * 100;\r\n        labels.p_max = labels.w_max / coords.w_rs * 100;\r\n    };\r\n\r\n    /**\r\n     * Measure labels width and X in percent\r\n     */\r\n    const calcLabels = function () {\r\n        if (!coords.w_rs || options.hide_from_to) {\r\n            return;\r\n        }\r\n\r\n        if (options.type === \"single\") {\r\n            labels.w_single = cache.single.offsetWidth;\r\n            labels.p_single_fake = labels.w_single / coords.w_rs * 100;\r\n            labels.p_single_left = coords.p_single_fake + (coords.p_handle / 2) - (labels.p_single_fake / 2);\r\n            labels.p_single_left = checkEdges(labels.p_single_left, labels.p_single_fake);\r\n\r\n        } else {\r\n            labels.w_from = cache.from.offsetWidth;\r\n            labels.p_from_fake = labels.w_from / coords.w_rs * 100;\r\n            labels.p_from_left = coords.p_from_fake + (coords.p_handle / 2) - (labels.p_from_fake / 2);\r\n            labels.p_from_left = toFixed(labels.p_from_left);\r\n            labels.p_from_left = checkEdges(labels.p_from_left, labels.p_from_fake);\r\n\r\n            labels.w_to = cache.to.offsetWidth;\r\n            labels.p_to_fake = labels.w_to / coords.w_rs * 100;\r\n            labels.p_to_left = coords.p_to_fake + (coords.p_handle / 2) - (labels.p_to_fake / 2);\r\n            labels.p_to_left = toFixed(labels.p_to_left);\r\n            labels.p_to_left = checkEdges(labels.p_to_left, labels.p_to_fake);\r\n\r\n            labels.w_single = cache.single.offsetWidth;\r\n            labels.p_single_fake = labels.w_single / coords.w_rs * 100;\r\n            labels.p_single_left = ((labels.p_from_left + labels.p_to_left + labels.p_to_fake) / 2) - (labels.p_single_fake / 2);\r\n            labels.p_single_left = toFixed(labels.p_single_left);\r\n            labels.p_single_left = checkEdges(labels.p_single_left, labels.p_single_fake);\r\n\r\n        }\r\n    };\r\n\r\n    // Drawings\r\n\r\n    /**\r\n     * Main function called in request animation frame\r\n     * to update everything\r\n     */\r\n    const updateScene = function () {\r\n        if (raf_id) {\r\n            cancelAnimationFrame(raf_id);\r\n            raf_id = null;\r\n        }\r\n\r\n        clearTimeout(update_tm);\r\n        update_tm = null;\r\n\r\n        if (!options) {\r\n            return;\r\n        }\r\n\r\n        drawHandles();\r\n\r\n        if (is_active) {\r\n            raf_id = requestAnimationFrame(updateScene);\r\n        } else {\r\n            update_tm = setTimeout(updateScene, 300);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Draw handles\r\n     */\r\n    const drawHandles = function () {\r\n        coords.w_rs = cache.rs.offsetWidth;\r\n        if (!coords.w_rs) {\r\n            return;\r\n        }\r\n\r\n        if (coords.w_rs !== coords.w_rs_old) {\r\n            target = \"base\";\r\n            is_resize = true;\r\n        }\r\n\r\n        if (coords.w_rs !== coords.w_rs_old || force_redraw) {\r\n            setMinMax();\r\n            calc(true);\r\n            drawLabels();\r\n            if (options.grid) {\r\n                calcGridMargin();\r\n                calcGridLabels();\r\n            }\r\n            force_redraw = true;\r\n            coords.w_rs_old = coords.w_rs;\r\n            drawShadow();\r\n        }\r\n\r\n        if (!coords.w_rs) {\r\n            return;\r\n        }\r\n\r\n        if (!dragging && !force_redraw && !is_key) {\r\n            return;\r\n        }\r\n\r\n        if (old_from !== result.from || old_to !== result.to || force_redraw || is_key) {\r\n            drawLabels();\r\n\r\n            cache.bar.style.left = coords.p_bar_x + \"%\";\r\n            cache.bar.style.width = coords.p_bar_w + \"%\";\r\n\r\n            if (options.type === \"single\") {\r\n                cache.bar.style.left = \"0\";\r\n                cache.bar.style.width = coords.p_bar_w + coords.p_bar_x + \"%\";\r\n\r\n                cache.s_single.style.left = coords.p_single_fake + \"%\";\r\n\r\n                cache.single.style.left = labels.p_single_left + \"%\";\r\n            } else {\r\n                cache.s_from.style.left = coords.p_from_fake + \"%\";\r\n                cache.s_to.style.left = coords.p_to_fake + \"%\";\r\n\r\n                if (old_from !== result.from || force_redraw) {\r\n                    cache.from.style.left = labels.p_from_left + \"%\";\r\n                }\r\n                if (old_to !== result.to || force_redraw) {\r\n                    cache.to.style.left = labels.p_to_left + \"%\";\r\n                }\r\n\r\n                cache.single.style.left = labels.p_single_left + \"%\";\r\n            }\r\n\r\n            writeToInput();\r\n\r\n            if ((old_from !== result.from || old_to !== result.to) && !is_start) {\r\n                cache.input.dispatchEvent(new Event(\"change\"));\r\n                cache.input.dispatchEvent(new Event(\"input\"));\r\n            }\r\n\r\n            old_from = result.from;\r\n            old_to = result.to;\r\n\r\n            // callbacks call\r\n            if (!is_resize && !is_update && !is_start && !is_finish) {\r\n                callOnChange();\r\n            }\r\n            if (is_key || is_click) {\r\n                is_key = false;\r\n                is_click = false;\r\n                callOnFinish();\r\n            }\r\n\r\n            is_update = false;\r\n            is_resize = false;\r\n            is_finish = false;\r\n        }\r\n\r\n        is_start = false;\r\n        is_key = false;\r\n        is_click = false;\r\n        force_redraw = false;\r\n    };\r\n\r\n    /**\r\n     * Draw labels\r\n     * measure labels collisions\r\n     * collapse close labels\r\n     */\r\n    const drawLabels = function () {\r\n        if (!options) {\r\n            return;\r\n        }\r\n\r\n        const values_num = options.values.length,\r\n            p_values = options.p_values;\r\n        let text_single,\r\n            text_from,\r\n            text_to,\r\n            from_pretty,\r\n            to_pretty;\r\n\r\n        if (options.hide_from_to) {\r\n            return;\r\n        }\r\n\r\n        if (options.type === \"single\") {\r\n\r\n            if (values_num) {\r\n                text_single = decorate(p_values[result.from]);\r\n                cache.single.innerHTML = text_single;\r\n            } else {\r\n                from_pretty = _prettify(result.from);\r\n\r\n                text_single = decorate(from_pretty, result.from);\r\n                cache.single.innerHTML = text_single;\r\n            }\r\n\r\n            calcLabels();\r\n\r\n            if (labels.p_single_left < labels.p_min + 1) {\r\n                cache.min.style.visibility = \"hidden\";\r\n            } else {\r\n                cache.min.style.visibility = \"visible\";\r\n            }\r\n\r\n            if (labels.p_single_left + labels.p_single_fake > 100 - labels.p_max - 1) {\r\n                cache.max.style.visibility = \"hidden\";\r\n            } else {\r\n                cache.max.style.visibility = \"visible\";\r\n            }\r\n\r\n        } else {\r\n            if (values_num) {\r\n\r\n                if (options.decorate_both) {\r\n                    text_single = decorate(p_values[result.from]);\r\n                    text_single += options.values_separator;\r\n                    text_single += decorate(p_values[result.to]);\r\n                } else {\r\n                    text_single = decorate(p_values[result.from] + options.values_separator + p_values[result.to]);\r\n                }\r\n                text_from = decorate(p_values[result.from]);\r\n                text_to = decorate(p_values[result.to]);\r\n                cache.single.innerHTML = text_single;\r\n                cache.from.innerHTML = text_from;\r\n                cache.to.innerHTML = text_to;\r\n\r\n            } else {\r\n                from_pretty = _prettify(result.from);\r\n                to_pretty = _prettify(result.to);\r\n\r\n                if (options.decorate_both) {\r\n                    text_single = decorate(from_pretty, result.from);\r\n                    text_single += options.values_separator;\r\n                    text_single += decorate(to_pretty, result.to);\r\n                } else {\r\n                    text_single = decorate(from_pretty + options.values_separator + to_pretty, result.to);\r\n                }\r\n                text_from = decorate(from_pretty, result.from);\r\n                text_to = decorate(to_pretty, result.to);\r\n\r\n                cache.single.innerHTML = text_single;\r\n                cache.from.innerHTML = text_from;\r\n                cache.to.innerHTML = text_to;\r\n\r\n            }\r\n\r\n            calcLabels();\r\n\r\n            const min = Math.min(labels.p_single_left, labels.p_from_left),\r\n                single_left = labels.p_single_left + labels.p_single_fake,\r\n                to_left = labels.p_to_left + labels.p_to_fake;\r\n            let max = Math.max(single_left, to_left);\r\n\r\n            if (labels.p_from_left + labels.p_from_fake >= labels.p_to_left) {\r\n                cache.from.style.visibility = \"hidden\";\r\n                cache.to.style.visibility = \"hidden\";\r\n                cache.single.style.visibility = \"visible\";\r\n\r\n                if (result.from === result.to) {\r\n                    if (target === \"from\") {\r\n                        cache.from.style.visibility = \"visible\";\r\n                    } else if (target === \"to\") {\r\n                        cache.to.style.visibility = \"visible\";\r\n                    } else if (!target) {\r\n                        cache.from.style.visibility = \"visible\";\r\n                    }\r\n                    cache.single.style.visibility = \"hidden\";\r\n                    max = to_left;\r\n                } else {\r\n                    cache.from.style.visibility = \"hidden\";\r\n                    cache.to.style.visibility = \"hidden\";\r\n                    cache.single.style.visibility = \"visible\";\r\n                    max = Math.max(single_left, to_left);\r\n                }\r\n            } else {\r\n                cache.from.style.visibility = \"visible\";\r\n                cache.to.style.visibility = \"visible\";\r\n                cache.single.style.visibility = \"hidden\";\r\n            }\r\n\r\n            min < labels.p_min + 1 ? cache.min.style.visibility = \"hidden\" : cache.min.style.visibility = \"visible\";\r\n            max > 100 - labels.p_max - 1 ? cache.max.style.visibility = \"hidden\" : cache.max.style.visibility = \"visible\";\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Draw shadow intervals\r\n     */\r\n    const drawShadow = function () {\r\n        const o = options,\r\n            c = cache,\r\n\r\n            is_from_min = typeof o.from_min === \"number\" && !isNaN(o.from_min),\r\n            is_from_max = typeof o.from_max === \"number\" && !isNaN(o.from_max),\r\n            is_to_min = typeof o.to_min === \"number\" && !isNaN(o.to_min),\r\n            is_to_max = typeof o.to_max === \"number\" && !isNaN(o.to_max);\r\n\r\n        let from_min,\r\n            from_max,\r\n            to_min,\r\n            to_max;\r\n\r\n        if (o.type === \"single\") {\r\n            if (o.from_shadow && (is_from_min || is_from_max)) {\r\n                from_min = convertToPercent(is_from_min ? o.from_min : o.min);\r\n                from_max = convertToPercent(is_from_max ? o.from_max : o.max) - from_min;\r\n                from_min = toFixed(from_min - (coords.p_handle / 100 * from_min));\r\n                from_max = toFixed(from_max - (coords.p_handle / 100 * from_max));\r\n                from_min = from_min + (coords.p_handle / 2);\r\n\r\n                c.shad_single.style.display = \"block\";\r\n                c.shad_single.style.left = from_min + \"%\";\r\n                c.shad_single.style.width = from_max + \"%\";\r\n            } else {\r\n                c.shad_single.style.display = \"none\";\r\n            }\r\n        } else {\r\n            if (o.from_shadow && (is_from_min || is_from_max)) {\r\n                from_min = convertToPercent(is_from_min ? o.from_min : o.min);\r\n                from_max = convertToPercent(is_from_max ? o.from_max : o.max) - from_min;\r\n                from_min = toFixed(from_min - (coords.p_handle / 100 * from_min));\r\n                from_max = toFixed(from_max - (coords.p_handle / 100 * from_max));\r\n                from_min = from_min + (coords.p_handle / 2);\r\n\r\n                c.shad_from.style.display = \"block\";\r\n                c.shad_from.style.left = from_min + \"%\";\r\n                c.shad_from.style.width = from_max + \"%\";\r\n            } else {\r\n                c.shad_from.style.display = \"none\";\r\n            }\r\n\r\n            if (o.to_shadow && (is_to_min || is_to_max)) {\r\n                to_min = convertToPercent(is_to_min ? o.to_min : o.min);\r\n                to_max = convertToPercent(is_to_max ? o.to_max : o.max) - to_min;\r\n                to_min = toFixed(to_min - (coords.p_handle / 100 * to_min));\r\n                to_max = toFixed(to_max - (coords.p_handle / 100 * to_max));\r\n                to_min = to_min + (coords.p_handle / 2);\r\n\r\n                c.shad_to.style.display = \"block\";\r\n                c.shad_to.style.left = to_min + \"%\";\r\n                c.shad_to.style.width = to_max + \"%\";\r\n            } else {\r\n                c.shad_to.style.display = \"none\";\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * Write values to input element\r\n     */\r\n    const writeToInput = function () {\r\n        if (options.type === \"single\") {\r\n            if (options.values.length) {\r\n                cache.input.setAttribute(\"value\", result.from_value);\r\n            } else {\r\n                cache.input.setAttribute(\"value\", result.from);\r\n            }\r\n            cache.input.dataset.from = result.from;\r\n        } else {\r\n            if (options.values.length) {\r\n                cache.input.setAttribute(\"value\", result.from_value + options.input_values_separator + result.to_value);\r\n            } else {\r\n                cache.input.setAttribute(\"value\", result.from + options.input_values_separator + result.to);\r\n            }\r\n            cache.input.dataset.from = result.from;\r\n            cache.input.dataset.to = result.to;\r\n        }\r\n    };\r\n\r\n    // Callbacks\r\n\r\n    const callOnStart = function () {\r\n        writeToInput();\r\n\r\n        if (options.onStart && typeof options.onStart === \"function\") {\r\n            if (options.scope) {\r\n                options.onStart.call(options.scope, result);\r\n            } else {\r\n                options.onStart(result);\r\n            }\r\n        }\r\n    };\r\n    const callOnChange = function () {\r\n        writeToInput();\r\n\r\n        if (options.onChange && typeof options.onChange === \"function\") {\r\n            if (options.scope) {\r\n                options.onChange.call(options.scope, result);\r\n            } else {\r\n                options.onChange(result);\r\n            }\r\n        }\r\n    };\r\n    const callOnFinish = function () {\r\n        writeToInput();\r\n\r\n        if (options.onFinish && typeof options.onFinish === \"function\") {\r\n            if (options.scope) {\r\n                options.onFinish.call(options.scope, result);\r\n            } else {\r\n                options.onFinish(result);\r\n            }\r\n        }\r\n    };\r\n    const callOnUpdate = function () {\r\n        writeToInput();\r\n\r\n        if (options.onUpdate && typeof options.onUpdate === \"function\") {\r\n            if (options.scope) {\r\n                options.onUpdate.call(options.scope, result);\r\n            } else {\r\n                options.onUpdate(result);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Service methods\r\n\r\n    const toggleInput = function () {\r\n        cache.input.classList.toggle(\"irs-hidden-input\");\r\n\r\n        if (has_tab_index) {\r\n            cache.input.setAttribute(\"tabindex\", \"-1\");\r\n        } else {\r\n            cache.input.removeAttribute(\"tabindex\");\r\n        }\r\n\r\n        has_tab_index = !has_tab_index;\r\n    };\r\n\r\n    /**\r\n     * Convert real value to percent\r\n     *\r\n     * @param value {Number} X in real\r\n     * @param no_min {boolean=} don't use min value\r\n     * @returns {Number} X in percent\r\n     */\r\n    const convertToPercent = function (value, no_min) {\r\n        let diapason = options.max - options.min,\r\n            one_percent = diapason / 100,\r\n            val, percent;\r\n\r\n        if (!diapason) {\r\n            no_diapason = true;\r\n            return 0;\r\n        }\r\n\r\n        if (no_min) {\r\n            val = value;\r\n        } else {\r\n            val = value - options.min;\r\n        }\r\n\r\n        percent = val / one_percent;\r\n\r\n        return toFixed(percent);\r\n    };\r\n\r\n    /**\r\n     * Convert percent to real values\r\n     *\r\n     * @param percent {Number} X in percent\r\n     * @returns {Number} X in real\r\n     */\r\n    const convertToValue = function (percent) {\r\n        let min = options.min,\r\n            max = options.max,\r\n            min_decimals = min.toString().split(\".\")[1],\r\n            max_decimals = max.toString().split(\".\")[1],\r\n            min_length, max_length,\r\n            avg_decimals = 0,\r\n            abs = 0;\r\n\r\n        if (percent === 0) {\r\n            return options.min;\r\n        }\r\n        if (percent === 100) {\r\n            return options.max;\r\n        }\r\n\r\n\r\n        if (min_decimals) {\r\n            min_length = min_decimals.length;\r\n            avg_decimals = min_length;\r\n        }\r\n        if (max_decimals) {\r\n            max_length = max_decimals.length;\r\n            avg_decimals = max_length;\r\n        }\r\n        if (min_length && max_length) {\r\n            avg_decimals = (min_length >= max_length) ? min_length : max_length;\r\n        }\r\n\r\n        if (min < 0) {\r\n            abs = Math.abs(min);\r\n            min = +(min + abs).toFixed(avg_decimals);\r\n            max = +(max + abs).toFixed(avg_decimals);\r\n        }\r\n\r\n        let number = ((max - min) / 100 * percent) + min,\r\n            string = options.step.toString().split(\".\")[1],\r\n            result;\r\n\r\n        if (string) {\r\n            number = +number.toFixed(string.length);\r\n        } else {\r\n            number = number / options.step;\r\n            number = number * options.step;\r\n\r\n            number = +number.toFixed(0);\r\n        }\r\n\r\n        if (abs) {\r\n            number -= abs;\r\n        }\r\n\r\n        string ? result = +number.toFixed(string.length) : result = toFixed(number);\r\n\r\n        if (result < options.min) {\r\n            result = options.min;\r\n        } else if (result > options.max) {\r\n            result = options.max;\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Round percent value with step\r\n     *\r\n     * @param percent {Number}\r\n     * @returns percent {Number} rounded\r\n     */\r\n    const calcWithStep = function (percent) {\r\n        let rounded = Math.round(percent / coords.p_step) * coords.p_step;\r\n\r\n        if (rounded > 100) {\r\n            rounded = 100;\r\n        }\r\n        if (percent === 100) {\r\n            rounded = 100;\r\n        }\r\n\r\n        return toFixed(rounded);\r\n    };\r\n\r\n    const checkMinInterval = function (p_current, p_next, type) {\r\n        let o = options, current, next;\r\n\r\n        if (!o.min_interval) {\r\n            return p_current;\r\n        }\r\n\r\n        current = convertToValue(p_current);\r\n        next = convertToValue(p_next);\r\n\r\n        if (type === \"from\") {\r\n            if (next - current < o.min_interval) {\r\n                current = next - o.min_interval;\r\n            }\r\n        } else {\r\n            if (current - next < o.min_interval) {\r\n                current = next + o.min_interval;\r\n            }\r\n        }\r\n\r\n        return convertToPercent(current);\r\n    };\r\n\r\n    const checkMaxInterval = function (p_current, p_next, type) {\r\n        let o = options, current, next;\r\n\r\n        if (!o.max_interval) {\r\n            return p_current;\r\n        }\r\n\r\n        current = convertToValue(p_current);\r\n        next = convertToValue(p_next);\r\n\r\n        if (type === \"from\") {\r\n            if (next - current > o.max_interval) {\r\n                current = next - o.max_interval;\r\n            }\r\n        } else {\r\n            if (current - next > o.max_interval) {\r\n                current = next + o.max_interval;\r\n            }\r\n        }\r\n\r\n        return convertToPercent(current);\r\n    };\r\n\r\n    const checkDiapason = function (p_num, min, max) {\r\n        let num = convertToValue(p_num);\r\n\r\n        typeof min !== 'number' ? min = options.min : min;\r\n        typeof max !== 'number' ? max = options.max : max;\r\n\r\n        num < min ? num = min : num;\r\n        num > max ? num = max : num;\r\n\r\n        return convertToPercent(num);\r\n    };\r\n\r\n    const toFixed = function (num) {\r\n        num = num.toFixed(20);\r\n        return +num;\r\n    };\r\n\r\n    const _prettify = function (num) {\r\n        if (!options.prettify_enabled) {\r\n            return num;\r\n        }\r\n\r\n        if (options.prettify && typeof options.prettify === \"function\") {\r\n            return options.prettify(num);\r\n        } else {\r\n            return prettify(num);\r\n        }\r\n    };\r\n\r\n    const prettify = function (num) {\r\n        return num.toString().replace(/(\\d{1,3}(?=(?:\\d\\d\\d)+(?!\\d)))/g, \"$1\" + options.prettify_separator);\r\n    };\r\n\r\n    const checkEdges = function (left, width) {\r\n        if (!options.force_edges) return toFixed(left);\r\n\r\n        left < 0 ? left = 0 : left > 100 - width ? left = 100 - width : left;\r\n\r\n        return toFixed(left);\r\n    };\r\n\r\n    const validate = function () {\r\n        let o = options,\r\n            r = result,\r\n            v = o.values,\r\n            vl = v.length,\r\n            value,\r\n            i;\r\n\r\n        if (typeof o.min === \"string\") o.min = +o.min;\r\n        if (typeof o.max === \"string\") o.max = +o.max;\r\n        if (typeof o.from === \"string\") o.from = +o.from;\r\n        if (typeof o.to === \"string\") o.to = +o.to;\r\n        if (typeof o.step === \"string\") o.step = +o.step;\r\n\r\n        if (typeof o.from_min === \"string\") o.from_min = +o.from_min;\r\n        if (typeof o.from_max === \"string\") o.from_max = +o.from_max;\r\n        if (typeof o.to_min === \"string\") o.to_min = +o.to_min;\r\n        if (typeof o.to_max === \"string\") o.to_max = +o.to_max;\r\n\r\n        if (typeof o.grid_num === \"string\") o.grid_num = +o.grid_num;\r\n\r\n        if (o.max < o.min) {\r\n            o.max = o.min;\r\n        }\r\n\r\n        if (vl) {\r\n            o.p_values = [];\r\n            o.min = 0;\r\n            o.max = vl - 1;\r\n            o.step = 1;\r\n            o.grid_num = o.max;\r\n            o.grid_snap = true;\r\n\r\n            for (i = 0; i < vl; i++) {\r\n                value = +v[i];\r\n\r\n                if (!isNaN(value)) {\r\n                    v[i] = value;\r\n                    value = _prettify(value);\r\n                } else {\r\n                    value = v[i];\r\n                }\r\n\r\n                o.p_values.push(value);\r\n            }\r\n        }\r\n\r\n        if (typeof o.from !== \"number\" || isNaN(o.from)) o.from = o.min;\r\n        if (typeof o.to !== \"number\" || isNaN(o.to)) o.to = o.max;\r\n\r\n        if (o.type === \"single\") {\r\n            if (o.from < o.min) o.from = o.min;\r\n            if (o.from > o.max) o.from = o.max;\r\n        } else {\r\n            if (o.from < o.min) o.from = o.min;\r\n            if (o.from > o.max) o.from = o.max;\r\n\r\n            if (o.to < o.min) o.to = o.min;\r\n            if (o.to > o.max) o.to = o.max;\r\n\r\n            if (update_check.from) {\r\n\r\n                if (update_check.from !== o.from) {\r\n                    if (o.from > o.to) o.from = o.to;\r\n                }\r\n                if (update_check.to !== o.to) {\r\n                    if (o.to < o.from) o.to = o.from;\r\n                }\r\n\r\n            }\r\n\r\n            if (o.from > o.to) o.from = o.to;\r\n            if (o.to < o.from) o.to = o.from;\r\n\r\n        }\r\n\r\n        if (typeof o.step !== \"number\" || isNaN(o.step) || !o.step || o.step < 0) {\r\n            o.step = 1;\r\n        }\r\n\r\n        if (typeof o.from_min === \"number\" && o.from < o.from_min) {\r\n            o.from = o.from_min;\r\n        }\r\n\r\n        if (typeof o.from_max === \"number\" && o.from > o.from_max) {\r\n            o.from = o.from_max;\r\n        }\r\n\r\n        if (typeof o.to_min === \"number\" && o.to < o.to_min) {\r\n            o.to = o.to_min;\r\n        }\r\n\r\n        if (typeof o.to_max === \"number\" && o.from > o.to_max) {\r\n            o.to = o.to_max;\r\n        }\r\n\r\n        if (r) {\r\n            if (r.min !== o.min) r.min = o.min;\r\n            if (r.max !== o.max) r.max = o.max;\r\n            if (r.from < r.min || r.from > r.max) r.from = o.from;\r\n            if (r.to < r.min || r.to > r.max) r.to = o.to;\r\n        }\r\n\r\n        if (typeof o.min_interval !== \"number\" || isNaN(o.min_interval) || !o.min_interval || o.min_interval < 0) {\r\n            o.min_interval = 0;\r\n        }\r\n\r\n        if (typeof o.max_interval !== \"number\" || isNaN(o.max_interval) || !o.max_interval || o.max_interval < 0) {\r\n            o.max_interval = 0;\r\n        }\r\n\r\n        if (o.min_interval && o.min_interval > o.max - o.min) {\r\n            o.min_interval = o.max - o.min;\r\n        }\r\n\r\n        if (o.max_interval && o.max_interval > o.max - o.min) {\r\n            o.max_interval = o.max - o.min;\r\n        }\r\n    };\r\n\r\n    const decorate = function (num, original) {\r\n        let decorated = \"\",\r\n            o = options;\r\n\r\n        if (o.prefix) {\r\n            decorated += o.prefix;\r\n        }\r\n\r\n        decorated += num;\r\n\r\n        if (o.max_postfix) {\r\n            if (o.values.length && num === o.p_values[o.max]) {\r\n                decorated += o.max_postfix;\r\n                if (o.postfix) {\r\n                    decorated += \" \";\r\n                }\r\n            } else if (original === o.max) {\r\n                decorated += o.max_postfix;\r\n                if (o.postfix) {\r\n                    decorated += \" \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (o.postfix) {\r\n            decorated += o.postfix;\r\n        }\r\n\r\n        return decorated;\r\n    };\r\n\r\n    const updateFrom = function () {\r\n        result.from = options.from;\r\n        result.from_percent = convertToPercent(result.from);\r\n        result.from_pretty = _prettify(result.from);\r\n        if (options.values) {\r\n            result.from_value = options.values[result.from];\r\n        }\r\n    };\r\n\r\n    const updateTo = function () {\r\n        result.to = options.to;\r\n        result.to_percent = convertToPercent(result.to);\r\n        result.to_pretty = _prettify(result.to);\r\n        if (options.values) {\r\n            result.to_value = options.values[result.to];\r\n        }\r\n    };\r\n\r\n    const updateResult = function () {\r\n        result.min = options.min;\r\n        result.max = options.max;\r\n        updateFrom();\r\n        updateTo();\r\n    };\r\n\r\n    // Grid\r\n\r\n    const appendGrid = function () {\r\n        if (!options.grid) {\r\n            return;\r\n        }\r\n\r\n        let o = options,\r\n            i, z,\r\n\r\n            total = o.max - o.min,\r\n            big_num = o.grid_num,\r\n            big_p = 0,\r\n            big_w = 0,\r\n\r\n            small_max = 4,\r\n            local_small_max,\r\n            small_p,\r\n            small_w = 0,\r\n\r\n            result,\r\n            html = '';\r\n\r\n\r\n        calcGridMargin();\r\n\r\n        if (o.grid_snap) {\r\n            big_num = total / o.step;\r\n        }\r\n\r\n        if (big_num > 50) big_num = 50;\r\n        big_p = toFixed(100 / big_num);\r\n\r\n        if (big_num > 4) {\r\n            small_max = 3;\r\n        }\r\n        if (big_num > 7) {\r\n            small_max = 2;\r\n        }\r\n        if (big_num > 14) {\r\n            small_max = 1;\r\n        }\r\n        if (big_num > 28) {\r\n            small_max = 0;\r\n        }\r\n\r\n        for (i = 0; i < big_num + 1; i++) {\r\n            local_small_max = small_max;\r\n\r\n            big_w = toFixed(big_p * i);\r\n\r\n            if (big_w > 100) {\r\n                big_w = 100;\r\n            }\r\n            coords.big[i] = big_w;\r\n\r\n            small_p = (big_w - (big_p * (i - 1))) / (local_small_max + 1);\r\n\r\n            for (z = 1; z <= local_small_max; z++) {\r\n                if (big_w === 0) {\r\n                    break;\r\n                }\r\n\r\n                small_w = toFixed(big_w - (small_p * z));\r\n\r\n                html += '<span class=\"irs-grid-pol small\" style=\"left: ' + small_w + '%\"></span>';\r\n            }\r\n\r\n            html += '<span class=\"irs-grid-pol\" style=\"left: ' + big_w + '%\"></span>';\r\n\r\n            result = convertToValue(big_w);\r\n            if (o.values.length) {\r\n                result = o.p_values[result];\r\n            } else {\r\n                result = _prettify(result);\r\n            }\r\n\r\n            html += '<span class=\"irs-grid-text js-grid-text-' + i + '\" style=\"left: ' + big_w + '%\">' + result + '</span>';\r\n        }\r\n        coords.big_num = Math.ceil(big_num + 1);\r\n\r\n        cache.cont.classList.add(\"irs-with-grid\");\r\n        cache.grid.innerHTML = html;\r\n        cacheGridLabels();\r\n    };\r\n\r\n    const cacheGridLabels = function () {\r\n        for (let i = 0; i < coords.big_num; i++) {\r\n            cache.grid_labels.push(cache.grid.querySelector(\".js-grid-text-\" + i));\r\n        }\r\n\r\n        calcGridLabels();\r\n    };\r\n\r\n    const calcGridLabels = function () {\r\n        const start = [], finish = [],\r\n            num = coords.big_num;\r\n        for (let i = 0; i < num; i++) {\r\n            coords.big_w[i] = cache.grid_labels[i].offsetWidth;\r\n            coords.big_p[i] = toFixed(coords.big_w[i] / coords.w_rs * 100);\r\n            coords.big_x[i] = toFixed(coords.big_p[i] / 2);\r\n\r\n            start[i] = toFixed(coords.big[i] - coords.big_x[i]);\r\n            finish[i] = toFixed(start[i] + coords.big_p[i]);\r\n        }\r\n\r\n        if (options.force_edges) {\r\n            if (start[0] < -coords.grid_gap) {\r\n                start[0] = -coords.grid_gap;\r\n                finish[0] = toFixed(start[0] + coords.big_p[0]);\r\n\r\n                coords.big_x[0] = coords.grid_gap;\r\n            }\r\n\r\n            if (finish[num - 1] > 100 + coords.grid_gap) {\r\n                finish[num - 1] = 100 + coords.grid_gap;\r\n                start[num - 1] = toFixed(finish[num - 1] - coords.big_p[num - 1]);\r\n\r\n                coords.big_x[num - 1] = toFixed(coords.big_p[num - 1] - coords.grid_gap);\r\n            }\r\n        }\r\n\r\n        calcGridCollision(2, start, finish);\r\n        calcGridCollision(4, start, finish);\r\n\r\n        for (let i = 0; i < num; i++) {\r\n            const label = cache.grid_labels[i];\r\n            if (coords.big_x[i] !== Number.POSITIVE_INFINITY) {\r\n                label.style.marginLeft = -coords.big_x[i] + \"%\";\r\n            }\r\n        }\r\n    };\r\n\r\n    // Collisions Calc Beta\r\n    // TODO: Refactor then have plenty of time\r\n    const calcGridCollision = function (step, start, finish) {\r\n        const num = coords.big_num;\r\n\r\n        for (let i = 0; i < num; i += step) {\r\n            let next_i = i + (step / 2);\r\n            if (next_i >= num) {\r\n                break;\r\n            }\r\n            const label = cache.grid_labels[next_i];\r\n\r\n            if (finish[i] <= start[next_i]) {\r\n                label.style.visibility = \"visible\";\r\n            } else {\r\n                label.style.visibility = \"hidden\";\r\n            }\r\n        }\r\n    };\r\n\r\n    const calcGridMargin = function () {\r\n        if (!options.grid_margin) {\r\n            return;\r\n        }\r\n\r\n        coords.w_rs = cache.rs.offsetWidth;\r\n        if (!coords.w_rs) {\r\n            return;\r\n        }\r\n\r\n        if (options.type === \"single\") {\r\n            coords.w_handle = cache.s_single.offsetWidth;\r\n        } else {\r\n            coords.w_handle = cache.s_from.offsetWidth;\r\n        }\r\n        coords.p_handle = toFixed(coords.w_handle / coords.w_rs * 100);\r\n        coords.grid_gap = toFixed((coords.p_handle / 2) - 0.1);\r\n\r\n        cache.grid.style.width = toFixed(100 - coords.p_handle) + \"%\";\r\n        cache.grid.style.left = coords.grid_gap + \"%\";\r\n    };\r\n\r\n    // Public methods\r\n    const update = function (newOptions) {\r\n        if (!input) {\r\n            return;\r\n        }\r\n\r\n        is_update = true;\r\n\r\n        options.from = result.from;\r\n        options.to = result.to;\r\n        update_check.from = result.from;\r\n        update_check.to = result.to;\r\n\r\n        options =  Object.assign(options, newOptions);\r\n        validate();\r\n        updateResult(newOptions);\r\n\r\n        toggleInput();\r\n        remove();\r\n        init(true);\r\n    };\r\n\r\n    const reset = function () {\r\n        if (!input) {\r\n            return;\r\n        }\r\n\r\n        updateResult();\r\n        update();\r\n    };\r\n\r\n    const destroy = function () {\r\n        if (!input) {\r\n            return;\r\n        }\r\n\r\n        toggleInput();\r\n        input.removeAttribute(\"readonly\");\r\n\r\n        remove();\r\n        input = null;\r\n        options = null;\r\n    }\r\n\r\n    return {\r\n        update: function(options) {\r\n            update(options);\r\n        },\r\n        reset : function() {\r\n            reset();\r\n        },\r\n        destroy : function() {\r\n            destroy();\r\n        },\r\n        init : function () {\r\n            validate();\r\n            init();\r\n\r\n            return this;\r\n        },\r\n        options,\r\n        old_from\r\n    };\r\n};\r\n\r\n/**\r\n * Simple init function\r\n *\r\n * @param element {string|Element}\r\n * @param options {Object}\r\n */\r\nexport default function ionRangeSlider(element, options = null) {\r\n    if (typeof element === 'string') {\r\n        element = document.querySelector(element);\r\n    }\r\n\r\n    const ionRangeSlider = new IonRangeSlider(element, options);\r\n\r\n    return ionRangeSlider.init();\r\n}\r\n","/* eslint-disable camelcase */\r\nimport type {\r\n    IIonRangeSliderInstance,\r\n    IIonRSUpdateOptions,\r\n    IRangeCSliderOptions,\r\n    IRangeSlider,\r\n    IRangeSliderData,\r\n    IRangeSliderOptions,\r\n    IRangeSliderOuterOptions} from './types';\r\nimport type {IObserver} from '@/common/scripts/types/observer';\r\nimport IonRangeSlider from '../../../libs/vanilla-rangeslider-master/js/rangeslider';\r\nimport Observer from '@/common/scripts/observer';\r\nimport {Utils} from '@/common/scripts/utils';\r\n\r\nconst observer: IObserver = new Observer();\r\n\r\nclass RangeSlider implements IRangeSlider {\r\n    public wrapper: HTMLElement;\r\n    public slider: HTMLElement;\r\n    public input: HTMLInputElement;\r\n    public oldFrom: number = 0;\r\n    public ionRangeSliderInstance: IIonRangeSliderInstance;\r\n    public options: IRangeSliderOptions;\r\n    private outerOptions: IRangeSliderOuterOptions | DOMStringMap | undefined;\r\n\r\n    constructor(options: IRangeCSliderOptions) {\r\n        this.wrapper = options.wrapper;\r\n\r\n        this.slider = this.wrapper.querySelector('.j-range-slider__base') as HTMLElement;\r\n        this.input = this.wrapper.querySelector('.j-range-slider__input') as HTMLInputElement;\r\n        this.outerOptions = options.outerOptions ?? this.slider.dataset;\r\n    }\r\n\r\n    /**\r\n     * Инициализация слайдера\r\n     */\r\n    public init(): void {\r\n        this._setOptions();\r\n        this._initRangeSlider();\r\n        this._subscribes();\r\n        this._bindEvents();\r\n        this._initDigit();\r\n    }\r\n\r\n    /**\r\n     * Установка параметров\r\n     */\r\n    private _setOptions(): void {\r\n        this.options = {\r\n            type            : this.outerOptions?.type || null,\r\n            min             : Number(this.outerOptions?.min) || 0,\r\n            max             : Number(this.outerOptions?.max) || 0,\r\n            from            : Number(this.outerOptions?.from) || 0,\r\n            to              : Number(this.outerOptions?.to) || 0,\r\n            step            : Number(this.outerOptions?.step) || null,\r\n            min_interval    : Number(this.outerOptions?.step) || null,\r\n            digit           : Boolean(this.outerOptions?.digit) || false,\r\n            disable         : Boolean(this.outerOptions?.disable) || false,\r\n            validate        : this.outerOptions?.validate,\r\n            hide_from_to    : true,\r\n            hide_min_max    : true,\r\n            prettify_enabled: true,\r\n            onStart         : (data: IRangeSliderData) => {\r\n                observer.publish('rangeSlider:start', data, this);\r\n            },\r\n            onChange: (data: IRangeSliderData) => {\r\n                this._updateInputs(data);\r\n                observer.publish('rangeSlider:change', data);\r\n            },\r\n            onFinish: (data: IRangeSliderData) => {\r\n                observer.publish('rangeSlider:finish', data);\r\n            },\r\n            onUpdate: (data: IRangeSliderData) => {\r\n                this._updateInputs(data);\r\n                observer.publish('rangeSlider:change', data);\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Метод инициализирует плагин range-слайдера\r\n     */\r\n    private _initRangeSlider(): void {\r\n        if (this.slider) {\r\n            // @ts-ignore\r\n            this.ionRangeSliderInstance = new IonRangeSlider(this.slider, this.options);\r\n\r\n            this.ionRangeSliderInstance.update({\r\n                max : this.outerOptions!.max,\r\n                from: this.outerOptions!.from,\r\n                to  : this.outerOptions!.to\r\n            });\r\n        }\r\n    }\r\n\r\n    private _subscribes(): void {\r\n        observer.subscribe('ionRangeSlider:reset', () => {\r\n            this.ionRangeSliderInstance.reset();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Навешиваем события\r\n     */\r\n    private _bindEvents(): void {\r\n        if (!this.input) {\r\n            return;\r\n        }\r\n\r\n        this.input.addEventListener('change', () => {\r\n            this._onInputFromChange();\r\n        });\r\n\r\n        this.input.addEventListener('input', (event: Event) => {\r\n            const target = event.target as HTMLInputElement;\r\n            const value = target.value;\r\n\r\n            this._validate(target);\r\n            this._setDigit(target, value);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Изменение инпута \"от\"\r\n     */\r\n    private _onInputFromChange(): void {\r\n        // конвертируем в число, т.к после добавления разрядов получаем строку\r\n        let value = this._getNumber(this.input.value);\r\n        const currentTo = Number(this.slider.dataset['to']);\r\n\r\n        if (value < this.options.min) {\r\n            value = this.options.min;\r\n        } else if (value > currentTo) {\r\n            value = this.options.max;\r\n        }\r\n\r\n        this.input.value = value.toString();\r\n\r\n        // Конвертируем в число с разрядами\r\n        this._setDigit(this.input, value);\r\n        this._update({\r\n            from: value\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Выбирает метод валидации.\r\n     * @param {Object} target - дом-элемент слайдера\r\n     */\r\n    private _validate(target: HTMLInputElement): void {\r\n        const type = this.options.validate;\r\n\r\n        if (!type) {\r\n            return;\r\n        }\r\n\r\n        switch (type) {\r\n            case 'number':\r\n                this._validateNumber(target);\r\n                break;\r\n            case 'number_decimal':\r\n                this._validateNumberDecimal(target);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Запускает валидацию только по числам\r\n     * @param {Object} target - дом-элемент слайдера\r\n     */\r\n    private _validateNumber(target: HTMLInputElement): void {\r\n        const regex = /\\d*/;\r\n        const result = regex.exec(target.value);\r\n\r\n        if (result && typeof result[0] === 'string') {\r\n            target.value = result[0];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Запускает валидацию только по целым и числам с плавающей точкой\r\n     * @param {Object} target - дом-элемент слайдера\r\n     */\r\n    private _validateNumberDecimal(target: HTMLInputElement): void {\r\n        const regex = /\\d*\\.?\\d?/g;\r\n        const result = regex.exec(target.value);\r\n\r\n        if (result && typeof result[0] === 'string') {\r\n            target.value = result[0];\r\n        }\r\n    }\r\n\r\n    private _update(data: Partial<IIonRSUpdateOptions>): void {\r\n        this.ionRangeSliderInstance.update(data);\r\n    }\r\n\r\n    /**\r\n     * Обновление инпутов\r\n     * @param {Object} data - данные рэйндж-слайдера\r\n     */\r\n    private _updateInputs(data: IRangeSliderData): void {\r\n        this._setDigit(this.input, data.from);\r\n        this.oldFrom = data.from;\r\n    }\r\n\r\n    /**\r\n     * Метод инициализирует разряды для значений инпута\r\n     */\r\n    private _initDigit(): void {\r\n        if (this.options.digit && this.input) {\r\n            this._setDigit(this.input);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Метод устанавливает разряды для значений инпута\r\n     * @param {Object} input - изменяемый инпут\r\n     * @param {string} value - значение инпута, при перемещении ручек приходит от слайдера.\r\n     */\r\n    private _setDigit(input: HTMLInputElement, value: string | number = ''): void {\r\n        const type = this.options.digit;\r\n\r\n        if (!type) {\r\n            return;\r\n        }\r\n\r\n        const data = value ? value : input.value;\r\n        const number = this._getNumber(data.toString()).toString();\r\n\r\n        input.value = Utils.convertToDigit(number);\r\n    }\r\n\r\n    /**\r\n     * Конвертация из строки с разрядами в число\r\n     * @param {string} str - значение с разрядом\r\n     * @returns {number} - значение без разрядов\r\n     */\r\n    private _getNumber(str: string): number {\r\n        if (!str) {\r\n            return 0;\r\n        }\r\n\r\n        return Utils.convertToNumber(str);\r\n    }\r\n}\r\n\r\nexport default RangeSlider;\r\n","import 'url-search-params-polyfill';\nimport type {IMortgageCalculator, IMortgageUtils} from './types';\nimport type {IRangeSlider, IRangeSliderData} from '@/components/range-slider/types';\nimport type {IObserver} from '@/common/scripts/types/observer';\nimport MortgageUtils from './utils';\nimport Observer from '@/common/scripts/observer';\nimport RangeSlider from '@/components/range-slider';\nimport {Utils} from '@/common/scripts/utils';\n\nconst CLASS_ERROR = 'is-error';\nconst CLASS_DISABLED = 'is-disabled';\nconst CLASS_HIDDEN = 'is-hidden';\nconst observer: IObserver = new Observer();\nconst U: IMortgageUtils = new MortgageUtils();\n\nclass MortgageCalculator implements IMortgageCalculator {\n    private wrapper: HTMLElement;\n    private minMonthlyPayment: string = '0';\n    private rangeSliders: IRangeSlider[] = [];\n    private sliders: Element[];\n    private resultHeading: HTMLElement;\n    private programResult: HTMLElement;\n    private programNoResult: HTMLElement;\n    private programs: Element[];\n    private mortgageProgramsCount: HTMLElement;\n    private mortgageAmount: HTMLElement;\n    private mortgagePercent: HTMLElement;\n    private resetFilters: HTMLElement | null;\n    private flatPrice: number | null = null;\n    private queryData: Record<string, string> | false;\n\n    private priceSlider: IRangeSlider | undefined;\n    private firstPaymentSlider: IRangeSlider | undefined;\n    private limitationSlider: IRangeSlider | undefined;\n\n    constructor(wrapper: HTMLElement) {\n        this.wrapper = wrapper;\n\n        this._setInitialElements();\n    }\n\n    /**\n     * Записываем в инпуты значения слайдеров.\n     * Добавляем разрядные пробелы и постфикс для срока кредита\n     * @param {number} value - значение слайдера\n     * @param {Object} data - параметры слайдера\n     */\n    static setInput(value: number, data: IRangeSliderData): void {\n        data.input.value = value.toLocaleString('ru-Ru');\n    }\n\n    /**\n     * Рассчитываем ежемесячный платёж по формуле:\n     * @param {number} rate - ставка\n     * @return {number} - ежемесячный платёж\n     * A = K * S,\n     * где A - ежемесячный аннуитетный платёж,\n     * K - коэффициент аннуитета,\n     * S - сумма кредита.\n     * K = (i * (1 + n)^n) / (((1 + i)^n) - 1)\n     * i - месячная процентная ставка по кредиту (годовая/12)\n     * n - количество периодов, в течение которых выплачивается кредит\n     */\n    static calcMonthlyPay(rate: number): number | '—' {\n        const i = rate / 12 / 100;\n        const n = U.getAccessStorage('limitation[min]') * 12;\n        const kNumerator = i * Math.pow(1 + i, n);\n        const kDenominator = Math.pow(1 + i, n) - 1;\n        const _K = kNumerator / kDenominator;\n        const _S = U.getAccessStorage('creditAmount');\n        const _A = _K * _S;\n\n        return _A < 0 ? '—' : _A;\n    }\n\n    /**\n     * Метод инициализирует модуль\n     */\n    public init(): void {\n        this._subscribes();\n        this._initCalcSliders();\n        this._bindEvents();\n        this._setMinimalPayment();\n        this._setShareParam(false);\n    }\n\n    /**\n     * Обновление значений экземпляра слайдера и запись в хранилище сессии при необходимости\n     * @param {Object} data - данные слайдеров\n     * @param {'set' | undefined} flag - флаг, показывающий, нужно ли записывать данные слайдеров в хранилище сессии\n     */\n    public updateSlidersValues(data: IRangeSliderData, flag?: 'set'): void {\n        this._updateData(data, flag);\n        MortgageCalculator.setInput(Number(data.from), data);\n        this._setCredit();\n    }\n\n    /**\n     * Функция обновления значений ипотечной таблицы, карточек и количества предложений\n     */\n    public update(): void {\n        this._setPaymentOnTable();\n        this._disableItems();\n        this._setOrdersCount();\n        this._checkEmptyResult();\n        this._setOrder();\n        this._setMinimalPayment();\n    }\n\n    /**\n     * Метод находит необходимые DOM-элементы для работы калькуляторы\n     */\n    private _setInitialElements(): void {\n        this.sliders = [...this.wrapper.querySelectorAll('.j-range-slider')] || [];\n        this.resultHeading = this.wrapper.querySelector('.j-mortgage-calculator__mortgage-heading') as HTMLElement;\n        this.programResult = this.wrapper.querySelector('.j-mortgage-calculator__programs-result') as HTMLElement;\n        this.programNoResult = this.wrapper.querySelector('.j-mortgage-calculator__programs-no-result') as HTMLElement;\n        this.programs = [...this.wrapper.querySelectorAll('.j-mortgage-calculator__program')] || [];\n        this.mortgageProgramsCount = this.wrapper.querySelector('.j-mortgage-calculator__orders-count') as HTMLElement;\n        this.mortgageAmount = this.wrapper.querySelector('.j-mortgage-calculator__mortgage-amount') as HTMLElement;\n        this.mortgagePercent = this.wrapper.querySelector('.j-mortgage-calculator__percent') as HTMLElement;\n        this.resetFilters = this.wrapper.querySelector('.j-mortgage-calculator__reset') as HTMLElement || null;\n    }\n\n    /**\n     * Инициализация слайдеров ипотечного калькулятора\n     * @private\n     */\n    private _initCalcSliders(): void {\n        this.sliders.forEach((slider: Element) => {\n            this._initSlider(slider as HTMLElement);\n        });\n\n        this._setSlidersElements();\n        this._correctFirstPayment();\n\n        // Устанавливаем актуальную сумму квартиры при инициализации\n        this.flatPrice = this.priceSlider?.oldFrom || null;\n\n        this._setGetQueryValue();\n    }\n\n    private _initSlider(slider: HTMLElement): void {\n        const rangeSlider: IRangeSlider = new RangeSlider({\n            wrapper: slider\n        });\n\n        rangeSlider.init();\n\n        this.rangeSliders.push(rangeSlider);\n    }\n\n    /**\n     * Метод содержит в себе колбэки на событиях других модулей\n     * @private\n     */\n    private _subscribes(): void {\n        observer.subscribe('rangeSlider:start', (data: IRangeSliderData, rangeSlider: IRangeSlider) => {\n            data.input = rangeSlider.input;\n            data.rangeSlider = rangeSlider;\n            this.updateSlidersValues(data);\n            this._manualInput(data);\n            this.update();\n        });\n\n        observer.subscribe('rangeSlider:change', (data: IRangeSliderData) => {\n            this.updateSlidersValues(data, 'set');\n            this.update();\n        });\n\n        observer.subscribe('rangeSlider:finish', () => {\n            this._setCredit();\n            this._setShareParam(true);\n        });\n    }\n\n    private _bindEvents(): void {\n        if (this.resetFilters) {\n            this.resetFilters.addEventListener('click', () => {\n                this._resetData();\n            });\n        }\n    }\n\n    private _resetData(): void {\n        observer.publish('ionRangeSlider:reset');\n        this.update();\n        window.history.pushState(null, '', window.location.pathname);\n    }\n\n    /**\n     * Считываем из хранилища или записываем в хранилище данные о текущем положении ползунков\n     * @param {Object} data - все значения слайдера\n     * @param {string} flag - флаг, указывающий, что данные нужно записать в хранилище\n     */\n    private _updateData(data: IRangeSliderData, flag: 'set' | undefined): void {\n        const key = data.input.getAttribute('name');\n\n        if (!key) {\n            return;\n        }\n\n        const isDisabled = data.input.disabled;\n        const getParam = Utils.getUrlParams(key);\n\n        if (getParam && parseInt(getParam) && flag !== 'set' && !isDisabled) {\n            data.from = parseInt(getParam);\n        } else {\n            data.from = parseInt(`${data.from}`);\n        }\n        U.saveToStorage(key, data.from);\n    }\n\n    /**\n     * Выводим сумму и процент кредита\n     * Если процент больше 100, выделяем его красным, а сумму кредита не выводим\n     */\n    private _setCredit(): void {\n        const creditData = U.calcCredit();\n        const method = parseInt(creditData.percent) >= 90 ? 'add' : 'remove';\n\n        this.mortgageAmount.innerHTML = creditData.amount;\n        this.mortgagePercent.innerHTML = creditData.percent;\n        this.mortgagePercent.classList[method](CLASS_ERROR);\n    }\n\n    /**\n     * Метод для непосредственного взаимодействия с инпутами (без использования слайдеров)\n     * @param {Object} data - все значения слайдера\n     */\n    private _manualInput(data: IRangeSliderData): void {\n        this._chooseInputInteraction(data, 'focus');\n        this._chooseInputInteraction(data, 'blur');\n        this._chooseInputInteraction(data, 'keyup');\n        this._chooseInputInteraction(data, 'keydown');\n    }\n\n    /**\n     * Определение поведения инпутов и слайдеров при взаимодействии с инпутами\n     * @param {Object} data - все значения слайдера\n     * @param {string} interaction - тип взаимодействия с инпутом\n     */\n    private _chooseInputInteraction(data: IRangeSliderData, interaction: string): void {\n        const onlyNumbersRegexp = /[^0-9.]/g;\n        const that = this;\n\n        /* eslint-disable */\n        data.input.addEventListener(interaction, function eventListener(event: Event) {\n            // @ts-ignore\n            const input = this as HTMLInputElement;\n\n            switch (interaction) {\n                case 'focus':\n                    input.value = '';\n                    break;\n                case 'blur':\n                    if (input.value === '') {\n                        MortgageCalculator.setInput(Number(data.from), data);\n                    } else {\n                        U.checkInputData(input, data, onlyNumbersRegexp);\n                        that.updateSlidersValues(data, 'set');\n                        data.rangeSlider?.ionRangeSliderInstance?.update();\n                        that.update();\n                    }\n                    break;\n                case 'keyup':\n                    if (input.value) {\n                        MortgageCalculator.setInput(Number(input.value.replace(onlyNumbersRegexp, '')), data);\n                    }\n                    break;\n                case 'keydown':\n                    U.preventNaNSymbolsEnter(event as KeyboardEvent);\n                    U.onKeyDownEvent(event as KeyboardEvent, data, that, input, onlyNumbersRegexp);\n                    break;\n                default: console.error('Wrong type of interaction');\n            }\n        });\n        /* eslint-enable */\n    }\n\n    /**\n     * Высчитываем и устанавливаем ежемесячный платёж каждому банку\n     */\n    private _setPaymentOnTable(): void {\n        this.programs.forEach((item: Element) => {\n            this._calcPaymentForBank(item as HTMLElement);\n        });\n    }\n\n    private _calcPaymentForBank(item: HTMLElement): void {\n        const rate = Number((item.querySelector('.j-mortgage-calculator__rate') as HTMLElement)!.dataset['rate']);\n        const paymentElement = item.querySelector('.j-mortgage-calculator__payment') as HTMLElement;\n\n        if (!paymentElement) {\n            return;\n        }\n\n        paymentElement.innerHTML =\n            U.isExist(MortgageCalculator.calcMonthlyPay(rate)) ?\n                // @ts-ignore\n                U.calcString('monthlyPaymentPretty', MortgageCalculator.calcMonthlyPay(rate), null) :\n                '—';\n\n        paymentElement.dataset['payment'] =\n            U.isExist(MortgageCalculator.calcMonthlyPay(rate)) ?\n                // @ts-ignore\n                `${parseInt(MortgageCalculator.calcMonthlyPay(rate).toFixed())}` :\n                '—';\n    }\n\n    /**\n     * Передаём список банков на проверку соответствия условиям\n     * @private\n     */\n    private _disableItems(): void {\n        this.programs.forEach((item: Element) => {\n            this._setDisabled(item as HTMLElement);\n        });\n    }\n\n    /**\n     * Отключаем банк, если он не подходит по параметрам\n     * @param {Object} item - DOM элемент программы\n     * @private\n     */\n    private _setDisabled(item: HTMLElement): void {\n        const monthlyPayment = item.querySelector('.j-mortgage-calculator__payment') as HTMLElement;\n        const firstPaymentCell = item.querySelector('.j-mortgage-calculator__first-payment') as HTMLElement;\n        const firstPayment = Number(firstPaymentCell.dataset['firstPayment']);\n        const firstPaymentMax = Number(firstPaymentCell.dataset['firstPaymentMax']);\n        const limitationCell = item.querySelector('.j-mortgage-calculator__limitation') as HTMLElement;\n        const limitation = Number(limitationCell.dataset['limitation']);\n        const limitationMin = Number(limitationCell.dataset['limitationMin']);\n\n        if (U.getAccessStorage('creditPercent') < firstPayment ||\n            U.getAccessStorage('creditPercent') > firstPaymentMax ||\n            U.getAccessStorage('limitation[min]') > limitation ||\n            U.getAccessStorage('limitation[min]') < limitationMin) {\n            monthlyPayment.innerHTML = '—';\n            item.classList.add(CLASS_DISABLED);\n        } else {\n            item.classList.remove(CLASS_DISABLED);\n        }\n    }\n\n    /**\n     * Устанавливает кол-во подходящих программ\n     * @private\n     */\n    private _setOrdersCount(): void {\n        const countFilteredPrograms = this._activePrograms().length;\n        const AffordableWord = Utils.pluralWord(countFilteredPrograms, ['Подходит', 'Подходят', 'Подходят']);\n        const countProgramWord = Utils.pluralWord(countFilteredPrograms, ['предложение', 'предложения', 'предложений']);\n\n        this.mortgageProgramsCount.innerText = `${AffordableWord} ${countFilteredPrograms} ${countProgramWord}`;\n    }\n\n    /**\n     * Выводит плашку об отсутствии результатов\n     * @private\n     */\n    private _checkEmptyResult(): void {\n        const noResult = Boolean(!this._activePrograms().length);\n        const resultMethod = noResult ? 'add' : 'remove';\n        const noResultMethod = noResult ? 'remove' : 'add';\n\n        this.programResult.classList[resultMethod](CLASS_HIDDEN);\n        this.resultHeading.classList[resultMethod](CLASS_HIDDEN);\n        this.programNoResult.classList[noResultMethod](CLASS_HIDDEN);\n        observer.publish('mortgage:noResult', !noResult);\n    }\n\n    /**\n     * Передаём строки таблицы с банками на упорядочивание\n     */\n    private _setOrder(): void {\n        this.programs.forEach((item: Element) => {\n            this._setItemOrder(item as HTMLElement);\n        });\n    }\n\n    /**\n     * Устанавливаем свойство order для каждого банка, чтобы упорядочить элементы по цене\n     * @param {HTMLElement} bankCard - DOM элемент каждого банка (строка в таблице или карточка)\n     * @private\n     */\n    private _setItemOrder(bankCard: HTMLElement): void {\n        const specialOrderCoefficient = 10000000;\n        let payment = Number(bankCard.querySelector('.j-mortgage-calculator__payment')!.innerHTML\n            .replace(/[^0-9]/g, ''));\n\n        bankCard.setAttribute('data-payment', payment === 0 ? `${specialOrderCoefficient}` : `${payment}`);\n\n        if (bankCard.dataset['sort'] && !bankCard.classList.contains(CLASS_DISABLED)) {\n            payment = Number(bankCard.dataset['sort']);\n        }\n\n        bankCard.style.order = payment === 0 ? `${specialOrderCoefficient}` : `${payment}`;\n    }\n\n    private _setMinimalPayment(): void {\n        // Получаем все элементы содержащие минимальные платежи\n        const allMinPaymentElements: Element[] = [...this.wrapper.querySelectorAll('.j-mortgage-calculator__payment')];\n        // Массив минимальных платежей\n        const allMinPaymentsData: number[] = [];\n\n        allMinPaymentElements.forEach((item: Element) => {\n            const element = item as HTMLElement;\n\n            element.dataset['payment'] && allMinPaymentsData.push(Number(element.dataset['payment']));\n        });\n\n        const sortedMinPaymentsArray: number[] = allMinPaymentsData.sort((a: number, b: number) => {\n            return a - b;\n        });\n\n        this.minMonthlyPayment = sortedMinPaymentsArray.length ?\n            `${sortedMinPaymentsArray[0]}` :\n            '0';\n\n        this.wrapper.dataset['minMonthly'] = this.minMonthlyPayment;\n\n        observer.publish('monthlyPayment:updated', this.minMonthlyPayment);\n    }\n\n    private _setShareParam(setHash: boolean): void {\n        const query = new URLSearchParams();\n        const hash = window.location.hash;\n\n        query.append('price[min]', `${U.getAccessStorage('price[min]')}`);\n        query.append('first-pay[min]', `${U.getAccessStorage('first-pay[min]')}`);\n        query.append('limitation[min]', `${U.getAccessStorage('limitation[min]')}`);\n\n        if (setHash) {\n            window.history.pushState(null, '', `?${query.toString()}${hash}`);\n        }\n    }\n\n    private _activePrograms(): Element[] {\n        return this.programs.filter((program: Element) => {\n            return !program.classList.contains('is-disabled');\n        });\n    }\n\n    /**\n     * Устанавливаем значения из гет параметров если они есть\n     */\n    private _setGetQueryValue(): void {\n        // получаем данные гет параметра\n        this.queryData = U.getQueryData();\n\n        if (!this.queryData) {\n            return;\n        }\n\n        this.rangeSliders.forEach((rangeSlider: IRangeSlider) => {\n            const sliderInput = rangeSlider.input;\n            const name = sliderInput?.name;\n            const queryValue = this.queryData[name];\n\n            if (queryValue && Number(queryValue) > rangeSlider.options.min) {\n                if (name === 'first-pay[min]') {\n                    // Если при изменении первого платежа он становится больше\n                    // 90% суммы квартиры, то ставим 90% от суммы квартиры,\n                    // иначе сумму выбранного первого платежа\n                    rangeSlider.oldFrom = this.flatPrice && queryValue > this.flatPrice * 0.9 ?\n                        this.flatPrice * 0.9 :\n                        queryValue;\n\n                    sliderInput.value = Utils.convertToDigit(`${rangeSlider.oldFrom}`);\n\n                    this._updateFirstPaymentInstance(rangeSlider);\n                } else {\n                    sliderInput.value = Utils.convertToDigit(queryValue);\n                }\n            }\n\n            if (name === 'price[min]' || rangeSlider.slider.id === 'price') {\n                this._setCredit();\n            }\n        });\n    }\n\n    private _setSlidersElements(): void {\n        if (!this.rangeSliders.length) {\n            return;\n        }\n\n        this.priceSlider = this.rangeSliders.find((rangeSlider: IRangeSlider) => {\n            return rangeSlider.slider.id === 'price';\n        });\n\n        this.firstPaymentSlider = this.rangeSliders.find((rangeSlider: IRangeSlider) => {\n            return rangeSlider.slider.id === 'first-pay';\n        });\n\n        this.limitationSlider = this.rangeSliders.find((rangeSlider: IRangeSlider) => {\n            return rangeSlider.slider.id === 'limitation';\n        });\n    }\n\n    private _correctFirstPayment(): void {\n        if (!this.priceSlider?.oldFrom) {\n            return;\n        }\n\n        this.flatPrice = Number(this.priceSlider.oldFrom);\n        this._updateFirstPayment(this.flatPrice);\n        this._setCredit();\n        this.update();\n    }\n\n    /**\n     * Обновляем первый платеж при изменении цены квартиры\n     * @param {number} from - максимальное значение для рэйндж-слайдера первого взноса\n     */\n    private _updateFirstPayment(from: number): void {\n        // Это для исключения первого инициализации всех слайдеров, когда ещё не все\n        // слайдеры активированы\n        if (!this.firstPaymentSlider) {\n            return;\n        }\n\n        // Если текущее значение первого платежа в процентном выражении\n        // составляет больше 90% от новой суммы квартиры, устанавливаем 90% от\n        // суммы квартиры в качестве первого платежа, иначе оставляем ту же\n        // сумму первого платежа, что и была выбрана пользователем ранее.\n        this.firstPaymentSlider.oldFrom = parseInt(U.calcCredit().percent) >= 90 ?\n            Math.floor(from * 0.9) :\n            this.firstPaymentSlider.oldFrom;\n\n        this._updateFirstPaymentInstance(this.firstPaymentSlider);\n    }\n\n    private _updateFirstPaymentInstance(slider: IRangeSlider): void {\n        slider.ionRangeSliderInstance?.update({\n            max : Number(this.flatPrice),\n            from: Number(slider.oldFrom),\n            to  : Number(this.flatPrice)\n        });\n    }\n}\n\nexport default MortgageCalculator;\n"],"names":["MortgageUtils","_classCallCheck","key","value","data","isNaN","Number","window","sessionStorage","setItem","toString","getItem","removeItem","action","a","b","parseInt","toFixed","concat","toLocaleString","price","this","getAccessStorage","firstPay","percent","calcString","amount","calc","saveToStorage","num","includes","inputElement","regexp","newDataFrom","replace","from","min","max","event","which","preventDefault","obj","input","checkInputData","updateSlidersValues","update","blur","location","search","length","split","reduce","acc","param","decodeURIComponent","String","IonRangeSlider","element","options","arguments","undefined","calc_count","update_tm","old_from","old_to","old_min_interval","raf_id","dragging","force_redraw","no_diapason","has_tab_index","is_key","is_update","is_start","is_finish","is_active","is_resize","is_click","target","cache","win","body","document","cont","rs","to","single","bar","line","s_single","s_from","s_to","shad_single","shad_from","shad_to","edge","grid","grid_labels","coords","x_gap","x_pointer","w_rs","w_rs_old","w_handle","p_gap","p_gap_left","p_gap_right","p_step","p_pointer","p_handle","p_single_fake","p_single_real","p_from_fake","p_from_real","p_to_fake","p_to_real","p_bar_x","p_bar_w","grid_gap","big_num","big","big_w","big_p","big_x","labels","w_min","w_max","w_from","w_to","w_single","p_min","p_max","p_from_left","p_to_left","p_single_left","config","skin","type","step","min_interval","max_interval","drag_interval","values","p_values","from_fixed","from_min","from_max","from_shadow","to_fixed","to_min","to_max","to_shadow","prettify_enabled","prettify_separator","prettify","force_edges","keyboard","grid_margin","grid_num","grid_snap","hide_min_max","hide_from_to","prefix","postfix","max_postfix","decorate_both","values_separator","input_values_separator","disable","block","extra_classes","scope","onStart","onChange","onFinish","onUpdate","nodeName","console","warn","config_from_data","dataset","minInterval","maxInterval","dragInterval","fromFixed","fromMin","fromMax","fromShadow","toMin","toMax","toShadow","prettifyEnabled","prettifySeparator","forceEdges","gridMargin","gridNum","gridSnap","hideMinMax","hideFromTo","maxPostfix","decorateBoth","valuesSeparator","inputValuesSeparator","extraClasses","prop","hasOwnProperty","val","indexOf","Object","assign","update_check","result","slider","from_percent","from_value","to_percent","to_value","init","convertToPercent","toggleInput","append","setMinMax","callOnUpdate","callOnStart","updateScene","container_html","insertAdjacentHTML","setAttribute","previousElementSibling","innerHTML","querySelector","style","visibility","setTopHandler","display","appendGrid","appendDisableMask","disabled","removeDisableMask","bindEvents","cursor","classList","add","remove","removeEventListener","bind","pointerMove","pointerUp","cancelAnimationFrame","addEventListener","pointerClick","passive","pointerFocus","pointerDown","e","x","$handle","focus","getBoundingClientRect","left","width","pageX","_e$touches$","touches","hoverState","restoreOriginalMinInterval","contains","callOnFinish","destination","button","setTempMinInterval","calcPointerPercent","changeLevel","dispatchEvent","Event","altKey","ctrlKey","shiftKey","metaKey","moveByKey","right","p","decorate","min_pretty","_prettify","max_pretty","offsetWidth","interval","calcHandlePercent","handle_x","getHandleX","chooseHandle","w","f","t","checkDiapason","convertToFakePercent","convertToRealPercent","calcWithStep","checkMinInterval","checkMaxInterval","real_x","full","half","new_from","new_to","convertToValue","from_pretty","to_pretty","calcMinMax","calcLabels","fake","real","checkEdges","clearTimeout","drawHandles","requestAnimationFrame","setTimeout","drawLabels","calcGridMargin","calcGridLabels","drawShadow","writeToInput","callOnChange","text_single","text_from","text_to","values_num","Math","single_left","to_left","o","c","is_from_min","is_from_max","is_to_min","is_to_max","call","toggle","removeAttribute","no_min","diapason","one_percent","min_length","max_length","min_decimals","max_decimals","avg_decimals","abs","number","string","rounded","round","p_current","p_next","current","next","p_num","validate","i","r","v","vl","push","original","decorated","updateResult","z","local_small_max","small_p","total","small_max","html","ceil","cacheGridLabels","start","finish","calcGridCollision","label","POSITIVE_INFINITY","marginLeft","next_i","newOptions","reset","destroy","ionRangeSlider","observer","Observer","RangeSlider","_options$outerOptions","_defineProperty","wrapper","outerOptions","_setOptions","_initRangeSlider","_subscribes","_bindEvents","_initDigit","_this$outerOptions","_this$outerOptions2","_this$outerOptions3","_this$outerOptions4","_this$outerOptions5","_this$outerOptions6","_this$outerOptions7","_this$outerOptions8","_this$outerOptions9","_this$outerOptions10","_this","digit","Boolean","publish","_updateInputs","ionRangeSliderInstance","_this2","subscribe","_this3","_onInputFromChange","_validate","_setDigit","_getNumber","currentTo","_update","_validateNumber","_validateNumberDecimal","exec","oldFrom","Utils","str","CLASS_DISABLED","CLASS_HIDDEN","U","MortgageCalculator","_setInitialElements","rate","n","_A","pow","_initCalcSliders","_setMinimalPayment","_setShareParam","flag","_updateData","setInput","_setCredit","_setPaymentOnTable","_disableItems","_setOrdersCount","_checkEmptyResult","_setOrder","sliders","_toConsumableArray","querySelectorAll","resultHeading","programResult","programNoResult","programs","mortgageProgramsCount","mortgageAmount","mortgagePercent","resetFilters","_this$priceSlider","forEach","_initSlider","_setSlidersElements","_correctFirstPayment","flatPrice","priceSlider","_setGetQueryValue","rangeSlider","rangeSliders","_manualInput","_resetData","history","pushState","pathname","getAttribute","isDisabled","getParam","creditData","calcCredit","method","_chooseInputInteraction","interaction","onlyNumbersRegexp","that","_data$rangeSlider","_data$rangeSlider$ion","preventNaNSymbolsEnter","onKeyDownEvent","error","_this4","item","_calcPaymentForBank","paymentElement","isExist","calcMonthlyPay","_this5","_setDisabled","monthlyPayment","firstPaymentCell","firstPayment","firstPaymentMax","limitationCell","limitation","limitationMin","countFilteredPrograms","_activePrograms","AffordableWord","countProgramWord","innerText","noResult","resultMethod","noResultMethod","_this6","_setItemOrder","bankCard","specialOrderCoefficient","payment","order","allMinPaymentElements","allMinPaymentsData","sortedMinPaymentsArray","sort","minMonthlyPayment","setHash","query","URLSearchParams","hash","filter","program","_this7","queryData","getQueryData","sliderInput","name","queryValue","_updateFirstPaymentInstance","id","find","firstPaymentSlider","limitationSlider","_this$priceSlider2","_updateFirstPayment","floor","_slider$ionRangeSlide"],"sourceRoot":""}