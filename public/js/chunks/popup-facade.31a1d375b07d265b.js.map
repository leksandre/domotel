{"version":3,"file":"js/chunks/popup-facade.31a1d375b07d265b.js","mappings":"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","sources":["webpack://multi-kelnik-2.0/./frontend/src/components/popup/popupFacade.ts"],"sourcesContent":["/**\r\n * @version 2.0\r\n * @author Kelnik Studios {http://kelnik.ru}\r\n * @link https://gitbook.kelnik.ru/main/front-end/components/popup.html#facade documentation\r\n */\r\n\r\n/**\r\n * DEPENDENCIES\r\n */\r\nimport {\r\n    AjaxPopup,\r\n    GalleryPopup,\r\n    OnlinePopup,\r\n    ProgressPopup,\r\n    StaticPopup,\r\n    StaticPopupWithHash\r\n} from './popup';\r\nimport type {IPopupFacade,\r\n    IPopupFacadeOptions,\r\n    IPopupsGroupsName,\r\n    IPopupsGroupsObject\r\n} from './types';\r\nimport {initVideoTabs} from '@/common/scripts/common';\r\n\r\nexport default class PopupFacade implements IPopupFacade {\r\n    private openButtons: HTMLElement[];\r\n\r\n    private readonly popupsGroups: Record<IPopupsGroupsName, IPopupsGroupsObject>;\r\n\r\n    /* eslint-disable max-lines-per-function */\r\n    constructor(options: IPopupFacadeOptions) {\r\n        this.openButtons = options.openButtons;\r\n        this.popupsGroups = {\r\n            href: {\r\n                Construct: StaticPopupWithHash,\r\n                popups   : {},\r\n                options  : {\r\n                    modify     : options.modify,\r\n                    removeDelay: 300\r\n                }\r\n            },\r\n            hrefNoHash: {\r\n                Construct: StaticPopup,\r\n                popups   : {},\r\n                options  : {\r\n                    removeDelay: options.removeDelay\r\n                }\r\n            },\r\n            ajax: {\r\n                Construct: AjaxPopup,\r\n                popups   : {},\r\n                options  : {\r\n                    removeDelay: options.removeDelay\r\n                }\r\n            },\r\n            galleryPopup: {\r\n                Construct: GalleryPopup,\r\n                popups   : {},\r\n                options  : {\r\n                    modify     : 'popup_theme_white',\r\n                    removeDelay: 300\r\n                }\r\n            },\r\n            progressPopup: {\r\n                Construct: ProgressPopup,\r\n                popups   : {},\r\n                options  : {\r\n                    modify     : 'popup_theme_white',\r\n                    removeDelay: 300\r\n                }\r\n            },\r\n            callback: {\r\n                Construct: StaticPopupWithHash,\r\n                popups   : {},\r\n                options  : {\r\n                    removeDelay         : options.removeDelay,\r\n                    closeButtonAriaLabel: options.closeButtonAriaLabel,\r\n                    modify              : options.modify\r\n                }\r\n            },\r\n            online: {\r\n                Construct: OnlinePopup,\r\n                popups   : {},\r\n                options  : {\r\n                    modify     : 'popup_theme_white',\r\n                    removeDelay: 300,\r\n                    onCreate   : () => {\r\n                        initVideoTabs('.j-popup__content');\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        this._checkOpenButtonsExistence();\r\n    }\r\n    /* eslint-enable max-lines-per-function */\r\n\r\n    /**\r\n     * Входная точка проекта\r\n     * @public\r\n     */\r\n    public init(): void {\r\n        this._groupPopupsByType();\r\n        this._initPopups();\r\n    }\r\n\r\n    /**\r\n     * Проверка на передачу наличие входных данных\r\n     * @private\r\n     */\r\n    private _checkOpenButtonsExistence(): void {\r\n        if (!this.openButtons.length) {\r\n            throw new Error('There is no PopupFacade open buttons in constructor');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Группировка кнопок по названиям ссылок внутри групп\r\n     * @private\r\n     * @param {HTMLElement} button - кнопка для открытия попапа\r\n     * @param {IPopupsGroupsName} group - название группы, к которой относится попап\r\n     * @param {string} link - ссылка на контент попапа (data-attribute)\r\n     */\r\n    private _addToGroup(button: HTMLElement, group: IPopupsGroupsName, link: string): void {\r\n        const linkValue = button.dataset[link];\r\n\r\n        if (!linkValue) {\r\n            console.error(`Неверно задан параметр ${link} для ${group}`);\r\n        }\r\n\r\n        if (linkValue && !this.popupsGroups[group]?.popups[linkValue]) {\r\n            this.popupsGroups[group].popups[linkValue] = [];\r\n        }\r\n        const popups = linkValue && this.popupsGroups[group].popups[linkValue];\r\n\r\n        if (popups) {\r\n            popups.push(button);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Группировка кнопок по data-атрибутам\r\n     * @private\r\n     */\r\n    private _groupPopupsByType(): void {\r\n        this.openButtons.forEach((button: HTMLElement) => {\r\n            if (button.hasAttribute('data-callback')) {\r\n                this._addToGroup(button, 'callback', 'href');\r\n            } else if (button.hasAttribute('data-href') && button.hasAttribute('data-no-hash')) {\r\n                this._addToGroup(button, 'hrefNoHash', 'href');\r\n            } else if (button.hasAttribute('data-href')) {\r\n                this._addToGroup(button, 'href', 'href');\r\n            } else if (button.hasAttribute('data-ajax-online')) {\r\n                this._addToGroup(button, 'online', 'ajax');\r\n            } else if (button.hasAttribute('data-progress')) {\r\n                this._addToGroup(button, 'progressPopup', 'ajax');\r\n            } else if (button.hasAttribute('data-ajax')) {\r\n                this._addToGroup(button, 'ajax', 'ajax');\r\n            } else if (button.hasAttribute('data-gallery')) {\r\n                this._addToGroup(button, 'galleryPopup', 'slider');\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Инициализация нужных попапов в зависимости от групп и ссылок кнопок\r\n     * @private\r\n     */\r\n    private _initPopups(): void {\r\n        for (const group in this.popupsGroups) {\r\n            if (Object.prototype.hasOwnProperty.call(this.popupsGroups, group)) {\r\n                const groupName = group as IPopupsGroupsName;\r\n\r\n                for (const popup in this.popupsGroups[groupName].popups) {\r\n                    if (Object.prototype.hasOwnProperty.call(this.popupsGroups[groupName].popups, popup)) {\r\n                        Object.assign(this.popupsGroups[group as IPopupsGroupsName].options, {\r\n                            openButtons: this.popupsGroups[group as IPopupsGroupsName].popups[popup]\r\n                        });\r\n\r\n                        new this.popupsGroups[groupName].Construct(this.popupsGroups[groupName].options).init();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"names":["PopupFacade","options","_classCallCheck","_defineProperty","this","openButtons","popupsGroups","href","Construct","StaticPopupWithHash","popups","modify","removeDelay","hrefNoHash","StaticPopup","ajax","AjaxPopup","galleryPopup","GalleryPopup","progressPopup","ProgressPopup","callback","closeButtonAriaLabel","online","OnlinePopup","onCreate","initVideoTabs","_checkOpenButtonsExistence","key","value","_groupPopupsByType","_initPopups","length","Error","button","group","link","_this$popupsGroups$gr","linkValue","dataset","console","error","concat","push","_this","forEach","hasAttribute","_addToGroup","Object","prototype","hasOwnProperty","call","groupName","popup","assign","init"],"sourceRoot":""}