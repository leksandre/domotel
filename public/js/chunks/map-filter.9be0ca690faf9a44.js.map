{"version":3,"file":"js/chunks/map-filter.9be0ca690faf9a44.js","mappings":"8sDAIA,IAAMA,EAAsB,I,QAAIC,GAE1BC,EAAS,WASX,SAAAA,K,4FAAAC,CAAA,KAAAD,GAAAE,EAAA,0BARoC,GAAIA,EAAA,eACF,IAAEA,EAAA,0BAQpCC,KAAKC,WAAa,IAAIC,MAAM,SAAU,CAClCC,SAAY,EACZC,YAAY,IAChBC,SAASC,cAAcN,KAAKC,WAChC,C,UA6CC,O,EA3CDJ,G,EAAA,EAAAU,IAAA,OAAAC,MAIO,SAAKC,GACRT,KAAKU,QAAOC,EAAOF,EAAcG,OAAOC,iBAAiB,uBAEzDb,KAAKc,aACT,GAAC,CAAAP,IAAA,sBAAAC,MAEM,WAAmB,IAAAO,EAAA,KAChBC,EAAwBhB,KAAKiB,kBAEnCjB,KAAKU,QAAQQ,SAAQ,SAACC,GACdA,EAAOC,UAAYJ,IAIvBG,EAAOC,SAAWD,EAAOC,QACzBD,EAAOb,cAAcS,EAAKd,YAC9B,GACJ,GAEA,CAAAM,IAAA,cAAAC,MAGQ,WAAW,IAAAa,EAAA,KACfrB,KAAKU,QAAQQ,SAAQ,SAACC,GAClBA,EAAOG,iBAAiB,UAAU,SAACC,GAC/B,IAAMC,EAAWL,EAAOC,QAAU,oBAAsB,uBAExDC,EAAKI,wBAEL9B,EAAS+B,QAAQF,EAAWD,EAAMX,OAAuBe,QAAc,MACvEhC,EAAS+B,QAAQ,oBACrB,GACJ,GACJ,GAAC,CAAAnB,IAAA,wBAAAC,MAEO,WACJR,KAAKiB,kBAAoBjB,KAAKU,QAAQkB,OAAM,SAACT,GACzC,OAAOA,EAAOC,OAClB,GACJ,M,8EAACvB,CAAA,CA3DU,GA8Df,W","sources":["webpack://multi-kelnik-2.0/./frontend/src/components/yandex-map/infrastructure-checkbox-filter/index.ts"],"sourcesContent":["import type {IYandexMapFilter, IYandexMapFilterSettings} from '../types';\r\nimport type {IObserver} from '@/common/scripts/types/observer';\r\nimport Observer from '@/common/scripts/observer';\r\n\r\nconst observer: IObserver = new Observer();\r\n\r\nclass MapFilter implements IYandexMapFilter {\r\n    public globalFilterState: boolean = true;\r\n    private buttons: HTMLInputElement[] = [];\r\n    private readonly checkEvent: Event;\r\n\r\n    /**\r\n     * Базовые свойства\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        this.checkEvent = new Event('change', {\r\n            bubbles   : false,\r\n            cancelable: true});\r\n        document.dispatchEvent(this.checkEvent);\r\n    }\r\n\r\n    /**\r\n     * Инициализирует плагин\r\n     * @param {Object} outerSettings - настройки из внешнего файла\r\n     */\r\n    public init(outerSettings: IYandexMapFilterSettings): void {\r\n        this.buttons = [...outerSettings.target.querySelectorAll('.j-map-filter-item')] as HTMLInputElement[];\r\n\r\n        this._bindEvents();\r\n    }\r\n\r\n    public changeCheckBoxState(): void {\r\n        const holdGlobalFilterState = this.globalFilterState;\r\n\r\n        this.buttons.forEach((button: HTMLInputElement) => {\r\n            if (button.checked !== holdGlobalFilterState) {\r\n                return;\r\n            }\r\n\r\n            button.checked = !button.checked;\r\n            button.dispatchEvent(this.checkEvent);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Навешивает обработчик клика\r\n     */\r\n    private _bindEvents(): void {\r\n        this.buttons.forEach((button: HTMLInputElement) => {\r\n            button.addEventListener('change', (event: Event) => {\r\n                const mapEvent = button.checked ? 'filterMapItem:add' : 'filterMapItem:remove';\r\n\r\n                this._setGlobalFilterState();\r\n\r\n                observer.publish(mapEvent, (event.target as HTMLElement).dataset['type']);\r\n                observer.publish('filterMap:updated');\r\n            });\r\n        });\r\n    }\r\n\r\n    private _setGlobalFilterState(): void {\r\n        this.globalFilterState = this.buttons.every((button: HTMLInputElement) => {\r\n            return button.checked;\r\n        });\r\n    }\r\n}\r\n\r\nexport default MapFilter;\r\n"],"names":["observer","Observer","MapFilter","_classCallCheck","_defineProperty","this","checkEvent","Event","bubbles","cancelable","document","dispatchEvent","key","value","outerSettings","buttons","_toConsumableArray","target","querySelectorAll","_bindEvents","_this","holdGlobalFilterState","globalFilterState","forEach","button","checked","_this2","addEventListener","event","mapEvent","_setGlobalFilterState","publish","dataset","every"],"sourceRoot":""}