{"version":3,"file":"js/chunks/contacts-section.1c2af16da5a46ad2.js","mappings":"6IAOIA,EAAyC,KACzCC,GAAoB,EAElBC,EAAU,WACZ,IAAMC,EAAQC,OAAOD,MAErBF,GAAW,EAEXE,EAAME,OAAM,WACR,8BACKC,MAAK,SAAAC,GAAyC,IAA9BC,EAASD,EAAlBE,QACuB,OAAvBT,GAI0B,IAAIQ,EAAUL,GAElCO,KAAK,CACXC,QAAyBX,EACzBY,SAAyB,EACzBC,mBAAyB,EACzBC,yBAAyB,EACzBC,mBAAyB,GAEjC,GACR,GACJ,EA0BA,UAxBwB,SAACC,GAGrB,GAFAhB,EAAqBgB,EAEjB,yBAA0BZ,OAAQ,CAClC,IAAMa,EAAkB,IAAIC,sBAAqB,SAACC,GAC9CA,EAAQC,SAAQ,SAACC,GACTA,EAAMC,iBACDrB,GACDsB,EAAAA,EAAAA,SAAerB,GAG3B,GACJ,GAAG,CAACsB,WAAY,uBAEZD,EAAAA,EAAAA,aAAmBP,EAAaZ,OAAOqB,aAAeC,SAASC,gBAAgBC,cAC/EL,EAAAA,EAAAA,SAAerB,GAEfe,EAAgBY,QAAQb,E,MAG5BO,EAAAA,EAAAA,SAAerB,EAEvB,C","sources":["webpack://multi-kelnik-2.0/./frontend/src/sections/contacts/index.ts"],"sourcesContent":["import type {IDynamicImport} from '@/common/scripts/types/utils';\nimport type {IYandexMap} from '@/components/yandex-map/types';\nimport {Utils} from '@/common/scripts/utils';\n\n/**\n * Карта в блоке контакты\n */\nlet contactsMapWrapper: HTMLElement | null = null;\nlet isLoaded: boolean = false;\n\nconst initMap = (): void => {\n    const ymaps = window.ymaps;\n\n    isLoaded = true;\n\n    ymaps.ready(() => {\n        import(/* webpackChunkName: \"yandex-map\" */ '@/components/yandex-map')\n            .then(({default: YandexMap}: IDynamicImport) => {\n                if (contactsMapWrapper === null) {\n                    return;\n                }\n\n                const yandexMap: IYandexMap = new YandexMap(ymaps);\n\n                yandexMap.init({\n                    wrapper                : contactsMapWrapper,\n                    cluster                : true,\n                    fullScreenControl      : true,\n                    customFullScreenControl: true,\n                    customZoomControl      : true\n                });\n            });\n    });\n};\n\nconst initContactsMap = (contactsMap: HTMLElement): void => {\n    contactsMapWrapper = contactsMap;\n\n    if ('IntersectionObserver' in window) {\n        const lazyMapObserver = new IntersectionObserver((entries: IntersectionObserverEntry[]) => {\n            entries.forEach((entry: IntersectionObserverEntry) => {\n                if (entry.isIntersecting) {\n                    if (!isLoaded) {\n                        Utils.checkMap(initMap);\n                    }\n                }\n            });\n        }, {rootMargin: '0px 0px 1000px 0px'});\n\n        if (Utils.isInViewport(contactsMap, window.innerHeight || document.documentElement.clientHeight)) {\n            Utils.checkMap(initMap);\n        } else {\n            lazyMapObserver.observe(contactsMap);\n        }\n    } else {\n        Utils.checkMap(initMap);\n    }\n};\n\nexport default initContactsMap;\n"],"names":["contactsMapWrapper","isLoaded","initMap","ymaps","window","ready","then","_ref","YandexMap","default","init","wrapper","cluster","fullScreenControl","customFullScreenControl","customZoomControl","contactsMap","lazyMapObserver","IntersectionObserver","entries","forEach","entry","isIntersecting","Utils","rootMargin","innerHeight","document","documentElement","clientHeight","observe"],"sourceRoot":""}